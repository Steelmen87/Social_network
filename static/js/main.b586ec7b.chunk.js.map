{"version":3,"sources":["assets/images/user.png","components/Paginator/Paginator.module.css","utils/validators/validators.tsx","components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/common/FormsControls/FormsControls.tsx","redux/dialogs-reduser.tsx","components/Users/users.module.css","assets/images/Hourglass.gif","components/Profile/MyPosts/Post/Post.module.css","api/api.ts","serviceWorker.tsx","redux/friends-reduser.tsx","redux/profile-reduser.tsx","utils/object-helpers.js","redux/users-reduser.tsx","redux/app-reduser.tsx","redux/redux-store.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/Paginator/PaginatorX.tsx","components/Users/User.tsx","components/Users/Users.tsx","components/common/preloader/Preloader.tsx","redux/UserSelectors.ts","components/Users/UsersContainer.tsx","components/Profile/MyPosts/ProfileInfo/ProfileStatusFunction.tsx","components/Profile/MyPosts/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","redux/auth-Selectors.ts","components/Header/Header.tsx","hoc/withSuspense.tsx","App.tsx","index.tsx","redux/auth-reduser.tsx","components/common/FormsControls/FormsControls.module.css"],"names":["module","exports","__webpack_require__","p","userPhoto","selectedPage","pageNumber","wrap","d","__webpack_exports__","required","maxLengthCreator","value","maxLength","length","concat","item","img","descriptionBlock","mainPhoto","postsBlock","posts","Textarea","_ref","input","_ref$meta","meta","touched","error","props","Object","C_Users_Konstantin_Documents_Project_React_Samurai_95_Social_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","hasError","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","styles","form_control","assign","Input","_ref2","_ref2$meta","initialState","dialogs","id","name","messages","message","addAnswerActionCreator","newMessageText","type","dialogsReducer","state","arguments","undefined","action","newMessage","C_Users_Konstantin_Documents_Project_React_Samurai_95_Social_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__","C_Users_Konstantin_Documents_Project_React_Samurai_95_Social_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","usersAPI","profileAPI","authAPI","axios__WEBPACK_IMPORTED_MODULE_0__","instance","n","axios","create","withCredentials","baseURL","headers","API-KEY","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","getStatus","res","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","Content-Type","me","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","friendsReducer","objectSpread2","likesCount","profile","setStatus","profileReducer","newPost","newPostText","toConsumableArray","photos","updateObjectInArray","items","itemsId","objPropName","newObjProps","map","u","filter","users","totalUsersCount","isFetching","followingInProgress","setFilter","followACSuccess","unfollowACSuccess","setCurrentPageAC","setIsFetchingAC","toggleFollowingProgress","followUnfollowFlow","asyncToGenerator","regenerator_default","mark","_callee2","dispatch","apiMethod","actionCreator","_context2","prev","next","sent","resultCode","stop","_x2","_x3","_x4","_x5","apply","this","usersReducer","followed","count","initialized","appReducer","rootReducer","combineReducers","dialogPage","friendPage","profilePage","usersPage","auth","authReducer","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","News","react_default","s","Y","Music","Settings","Paginator","totalItemsCount","_ref$currentPage","_ref$onPageChanged","onPageChanged","x","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","_useState","useState","_useState2","slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","cn","paginator","onClick","defineProperty","key","e","User","search","indexOf","react_router_dom","to","src","small","alt","disabled","some","Users","useDispatch","setSearch","PaginatorX","placeholder","onChange","target","Users_User","Preloader","Hourglass","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","_this","_this$props","Fragment","Preloader_Preloader","components_Users_Users","React","Component","compose","connect","_ref3","_callee3","_context3","bind","_x6","_ref4","_callee4","_context4","_x7","_callee","_context","totalCount","_x","ProfileStatusWithHooks","editMode","setEditMode","_useState3","_useState4","useEffect","onDoubleClick","autoFocus","onBlur","currentTarget","ProfileInfo","isOwner","large","ProfileStatusFunction","files","Post","length10","AddMyPostFormRedux","reduxForm","onSubmit","handleSubmit","Field","component","validate","MyPosts","postsElement","MyPosts_Post_Post","values","addPost","MyPostsContainer","addPostActionCreator","Profile","MyPosts_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","params","authorizedUserId","history","getUsersProFile","refreshProfile","prevProps","prevState","snapshot","components_Profile_Profile","isAuth","t0","file","withRouter","selectAuth","selectCurrentUserLogin","AppHeader","useSelector","Header","Layout","row","col","span","menu","theme","mode","defaultSelectedKeys","Item","avatar","style","backgroundColor","icon","UserOutlined","es_button","withSuspense","Suspense","fallback","LoginPage","lazy","DialogsContainer","App","InitializeApp","SubMenu","Menu","Content","Footer","Sider","layout","Header_AppHeader","padding","breadcrumb","margin","width","defaultOpenKeys","height","title","LaptopOutlined","NotificationOutlined","minHeight","react_router","path","render","Profile_ProfileContainer","components_News_News","components_Music_Music","components_Settings_Settings","Users_UsersContainer","textAlign","getAuthUserData","ReactDOM","react_redux_es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","captchaUrl","setAuthUserData","payload","C_Users_Konstantin_Documents_Project_React_Samurai_95_Social_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_Konstantin_Documents_Project_React_Samurai_95_Social_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_data$data","_login","stopSubmit","_error","C_Users_Konstantin_Documents_Project_React_Samurai_95_Social_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_2__","formSummaryError"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sDCCxCH,EAAAC,QAAA,CAAkBG,UAAA,6BAAAC,aAAA,gCAAAC,WAAA,8BAAAC,KAAA,2DCClBL,EAAAM,EAAAC,EAAA,sBAAAC,IAAAR,EAAAM,EAAAC,EAAA,sBAAAE,IAAO,IAAMD,EAAW,SAAAE,GACpB,IAAIA,EACJ,MAAO,qBAEED,EAAmB,SAACE,GAAD,OAAe,SAAAD,GAC3C,GAAIA,EAAME,OAASD,EAAW,uBAAAE,OAAwBF,EAAxB,mCCNlCb,EAAAC,QAAA,CAAkBe,KAAA,0BAAAC,IAAA,yBAAAC,iBAAA,sCAAAC,UAAA,qDCAlBnB,EAAAC,QAAA,CAAkBmB,WAAA,4BAAAC,MAAA,wKCELC,EAAW,SAAAC,GAA6C,IAA3CC,EAA2CD,EAA3CC,MAA2CC,EAAAF,EAApCG,KAAMC,EAA8BF,EAA9BE,QAAQC,EAAsBH,EAAtBG,MAAWC,EAAWC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,kBAC3DS,EAAWL,GAAWC,EAC5B,OAAQK,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOC,aAAe,KAAON,EAAWK,IAAOT,MAAQ,KAC3EK,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAAAL,OAAAS,OAAA,GAAcf,EAAWK,KAC7BG,GAAYC,EAAAC,EAAAC,cAAA,YAAOP,KAIfY,EAAQ,SAAAC,GAA6C,IAA3CjB,EAA2CiB,EAA3CjB,MAA2CkB,EAAAD,EAApCf,KAAMC,EAA8Be,EAA9Bf,QAAQC,EAAsBc,EAAtBd,MAAWC,EAAWC,OAAAC,EAAA,EAAAD,CAAAW,EAAA,kBACxDT,EAAWL,GAAWC,EAC5B,OAAQK,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOC,aAAe,KAAON,EAAWK,IAAOT,MAAQ,KAC3EK,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,QAAAL,OAAAS,OAAA,GAAWf,EAAWK,KAC1BG,GAAYC,EAAAC,EAAAC,cAAA,YAAOP,gHCJxBe,EAAe,CACfC,QAAS,CACL,CAACC,GAAI,EAAGC,KAAM,UACd,CAACD,GAAI,EAAGC,KAAM,UACd,CAACD,GAAI,EAAGC,KAAM,SACd,CAACD,GAAI,EAAGC,KAAM,SACd,CAACD,GAAI,EAAGC,KAAM,UACd,CAACD,GAAI,EAAGC,KAAM,UACd,CAACD,GAAI,EAAGC,KAAM,QAElBC,SAAU,CACN,CAACF,GAAI,EAAGG,QAAS,MACjB,CAACH,GAAI,EAAGG,QAAS,cACjB,CAACH,GAAI,EAAGG,QAAS,MACjB,CAACH,GAAI,EAAGG,QAAS,MACjB,CAACH,GAAI,EAAGG,QAAS,MACjB,CAACH,GAAI,EAAGG,QAAS,QA4BZC,EAAyB,SAACC,GAAD,MACjC,CAACC,KAxDc,cAwDKD,mBAEVE,IAxBQ,WAA0E,IAAzEC,EAAyEC,UAAAxC,OAAA,QAAAyC,IAAAD,UAAA,GAAAA,UAAA,GAAjEX,EAAca,EAAmDF,UAAAxC,OAAA,EAAAwC,UAAA,QAAAC,EAC7F,OAAQC,EAAOL,MACX,IApCY,cAqCR,IAAIM,EAA0B,CAC1BZ,GAAI,EACJG,QAASQ,EAAON,gBAEpB,OAAOpB,OAAA4B,EAAA,EAAA5B,QAAA4B,EAAA,EAAA5B,CAAA,GACAuB,GADP,IAEIN,SAAQ,GAAAhC,OAAAe,OAAA6B,EAAA,EAAA7B,CAAMuB,EAAMN,UAAZ,CAAsBU,MAGtC,QACI,OAAOJ,2FC9CnBrD,EAAAC,QAAA,CAAkBG,UAAA,yBAAAC,aAAA,kDCDlBL,EAAAC,QAAiBC,EAAAC,EAAuB,2DCCxCH,EAAAC,QAAA,CAAkBe,KAAA,2FCDlBd,EAAAM,EAAAC,EAAA,sBAAAmD,IAAA1D,EAAAM,EAAAC,EAAA,sBAAAoD,IAAA3D,EAAAM,EAAAC,EAAA,sBAAAqD,IAAA,IAAAC,EAAA7D,EAAA,KAEM8D,EAFN9D,EAAA+D,EAAAF,GAEiBG,EAAMC,OAAO,CAC1BC,iBAAiB,EACjBC,QAAO,gDACPC,QAAS,CACLC,UAAW,0CAKNX,EAAW,CACpBY,SADoB,WACqB,IAAhCC,EAAgCnB,UAAAxC,OAAA,QAAAyC,IAAAD,UAAA,GAAAA,UAAA,GAAlB,EAAGoB,EAAepB,UAAAxC,OAAA,QAAAyC,IAAAD,UAAA,GAAAA,UAAA,GAAJ,GACjC,OAAOU,EAASW,IAAT,cAAA5D,OAA2B0D,EAA3B,WAAA1D,OAAgD2D,IAClDE,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAEnCC,OALoB,SAKbC,GACH,OAAOhB,EAASiB,KAAT,UAAAlE,OAAwBiE,KAEnCE,SARoB,SAQXF,GACL,OAAOhB,EAASmB,OAAT,UAAApE,OAA0BiE,KAMrCI,WAfoB,SAeTJ,GACP,OAAOnB,EAAWuB,WAAWJ,KAIxBnB,EAAa,CACtBuB,WADsB,SACXJ,GACP,OAAOhB,EAASW,IAAI,WAAaK,GAC5BJ,KAAK,SAAAE,GAAI,OAAIA,EAAKA,QAE3BO,UALsB,SAKZL,GACN,OAAOhB,EAASW,IAAI,kBAAoBK,GACnCJ,KAAK,SAAAU,GAAG,OAAIA,EAAIR,QAEzBS,aATsB,SASTC,GACT,OAAOxB,EAASyB,IAAT,iBAA+B,CAACD,OAAQA,IAC1CZ,KAAK,SAAAU,GAAG,OAAIA,EAAIR,QAEzBY,UAbsB,SAaZC,GACN,IAAMC,EAAW,IAAIC,SAErB,OADAD,EAASE,OAAO,QAASH,GAClB3B,EAASyB,IAAT,gBAA8BG,EAAU,CAC3CtB,QAAS,CACLyB,eAAgB,2BAKnBjC,EAAU,CACnBkC,GADmB,WAEf,OAAOhC,EAASW,IAAT,WACFC,KAAK,SAAAE,GAAI,OAAIA,EAAKA,QAE3BmB,MALmB,SAKbC,EAAeC,GAAsC,IAApBC,EAAoB9C,UAAAxC,OAAA,QAAAyC,IAAAD,UAAA,IAAAA,UAAA,GACvD,OAAOU,EAASiB,KAAT,aAA4B,CAACiB,QAAOC,WAAUC,gBAEzDC,OARmB,WASf,OAAOrC,EAASmB,OAAT,6HCnDKmB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,uFCZF/D,EAAe,CACfC,QAAS,CACL,CAACC,GAAI,EAAGC,KAAM,UACd,CAACD,GAAI,EAAGC,KAAM,UACd,CAACD,GAAI,EAAGC,KAAM,SACd,CAACD,GAAI,EAAGC,KAAM,SACd,CAACD,GAAI,EAAGC,KAAM,UACd,CAACD,GAAI,EAAGC,KAAM,UACd,CAACD,GAAI,EAAGC,KAAM,SAOP6D,EAHQ,WAAoD,IAAnDtD,EAAmDC,UAAAxC,OAAA,QAAAyC,IAAAD,UAAA,GAAAA,UAAA,GAA3CX,EAA2CW,UAAAxC,OAAA,GAAAwC,UAAA,GACvE,OAAOxB,OAAA8E,EAAA,EAAA9E,CAAA,GAAIuB,6CCsCXV,EAAe,CACftB,MAAO,CACH,CAACwB,GAAI,EAAGG,QAAS,kBAAmB6D,WAAY,GAChD,CAAChE,GAAI,EAAGG,QAAS,uBAAwB6D,WAAY,IACrD,CAAChE,GAAI,EAAGG,QAAS,SAAU6D,WAAY,KAE3CC,QAAS,KACTtB,OAAQ,IAgDCuB,EAAY,SAACvB,GAAD,MACpB,CAACrC,KA7Ga,aA6GKqC,OAAQA,IA2BjBwB,EAvEQ,WAAsF,IAArF3D,EAAqFC,UAAAxC,OAAA,QAAAyC,IAAAD,UAAA,GAAAA,UAAA,GAA3DX,EAAca,EAA6CF,UAAAxC,OAAA,EAAAwC,UAAA,QAAAC,EACzG,OAAQC,EAAOL,MACX,IArES,WAsEL,IAAI8D,EAAU,CACVpE,GAAI,EACJG,QAASQ,EAAO0D,YAChBL,WAAY,GAEhB,OAAO/E,OAAA8E,EAAA,EAAA9E,QAAA8E,EAAA,EAAA9E,CAAA,GACAuB,GADP,IAEIhC,MAAK,GAAAN,OAAAe,OAAAqF,EAAA,EAAArF,CAAMuB,EAAMhC,OAAZ,CAAmB4F,MAGhC,IA/EiB,mBAgFb,OAAOnF,OAAA8E,EAAA,EAAA9E,QAAA8E,EAAA,EAAA9E,CAAA,GAAIuB,GAAX,IAAkByD,QAAStD,EAAOsD,UAEtC,IAjFW,aAkFP,OAAOhF,OAAA8E,EAAA,EAAA9E,QAAA8E,EAAA,EAAA9E,CAAA,GAAIuB,GAAX,IAAkBmC,OAAQhC,EAAOgC,SAErC,IAAK,aACD,OAAO1D,OAAA8E,EAAA,EAAA9E,QAAA8E,EAAA,EAAA9E,CAAA,GAAIuB,GAAX,IAAkByD,QAAQhF,OAAA8E,EAAA,EAAA9E,QAAA8E,EAAA,EAAA9E,CAAA,GAAKuB,EAAMyD,SAAZ,IAAqBM,OAAQ5D,EAAO4D,WAEjE,QACI,OAAO/D,IC5FNgE,EAAsB,SAACC,EAAOC,EAASC,EAAaC,GAC7D,OAAOH,EAAMI,IAAI,SAAAC,GACb,OAAIA,EAAEH,KAAiBD,EACZzF,OAAA8E,EAAA,EAAA9E,QAAA8E,EAAA,EAAA9E,CAAA,GAAI6F,GAAMF,GAEdE,KCgBXhF,EAAe,CACfiF,OAAQ,GACRC,MAAO,GACPnD,SAAU,GACVoD,gBAAiB,EACjBrD,YAAa,EACbsD,YAAY,EACZC,oBAAqB,IAsEZC,EAAY,SAACL,GAAD,MAAqB,CAACzE,KA3F5B,aA2F8CyE,WAGpDM,EAAkB,SAAClD,GAAD,MAAqB,CAAC7B,KAjGtC,cAiGoD6B,WAGtDmD,EAAoB,SAACnD,GAAD,MAAqB,CAAC7B,KAnGtC,WAmGsD6B,WAM1DoD,EAAmB,SAAC3D,GAAD,MAA0B,CAACtB,KAtGlC,mBAsG0DsB,gBAStE4D,EAAkB,SAACN,GAAD,MAA0B,CAAC5E,KA7G/B,qBA6GyD4E,eAGvEO,EAA0B,SAACP,EAAqB/C,GAAtB,MAA0C,CAC7E7B,KAhHiC,+BAiHjC4E,aACA/C,WAuBEuD,EAAkB,eAAA9F,EAAAX,OAAA0G,EAAA,EAAA1G,CAAA2G,EAAAvG,EAAAwG,KAAG,SAAAC,EAAMC,EAAS5D,EAAO6D,EAAUC,GAAhC,OAAAL,EAAAvG,EAAA3B,KAAA,SAAAwI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACvBL,EAASN,GAAwB,EAAMtD,IADhB+D,EAAAE,KAAA,EAEFJ,EAAU7D,GAFR,OAGU,IAHV+D,EAAAG,KAGVpE,KAAKqE,YACdP,EAASE,EAAc9D,IAE3B4D,EAASN,GAAwB,EAAOtD,IANjB,wBAAA+D,EAAAK,SAAAT,MAAH,gBAAAU,EAAAC,EAAAC,EAAAC,GAAA,OAAA/G,EAAAgH,MAAAC,KAAApG,YAAA,GAqBTqG,EAvIM,WAA0E,IAAzEtG,EAAyEC,UAAAxC,OAAA,QAAAyC,IAAAD,UAAA,GAAAA,UAAA,GAAnDX,EAAca,EAAqCF,UAAAxC,OAAA,EAAAwC,UAAA,QAAAC,EAC3F,OAAQC,EAAOL,MACX,IAhCO,cAiCH,OAAOrB,OAAA8E,EAAA,EAAA9E,QAAA8E,EAAA,EAAA9E,CAAA,GACAuB,GADP,IAEIwE,MAAOR,EAAoBhE,EAAMwE,MAAOrE,EAAOwB,OAAQ,KAAM,CAAC4E,UAAU,MAQhF,IA1CS,WA2CL,OAAO9H,OAAA8E,EAAA,EAAA9E,QAAA8E,EAAA,EAAA9E,CAAA,GACAuB,GADP,IAEIwE,MAAOR,EAAoBhE,EAAMwE,MAAOrE,EAAOwB,OAAQ,KAAM,CAAC4E,UAAU,MAQhF,IApDU,YAqDN,OAAO9H,OAAA8E,EAAA,EAAA9E,QAAA8E,EAAA,EAAA9E,CAAA,GAAIuB,GAAX,IAAkBwE,MAAOrE,EAAOqE,QAEpC,IAtDW,aAuDP,OAAO/F,OAAA8E,EAAA,EAAA9E,QAAA8E,EAAA,EAAA9E,CAAA,GAAIuB,GAAX,IAAkBuE,OAAQpE,EAAOoE,SAErC,IAxDiB,mBAyDb,OAAO9F,OAAA8E,EAAA,EAAA9E,QAAA8E,EAAA,EAAA9E,CAAA,GAAIuB,GAAX,IAAkBoB,YAAajB,EAAOiB,cAE1C,IA1DsB,wBA2DlB,OAAO3C,OAAA8E,EAAA,EAAA9E,QAAA8E,EAAA,EAAA9E,CAAA,GAAIuB,GAAX,IAAkByE,gBAAiBtE,EAAOqG,QAE9C,IA5DmB,qBA6Df,OAAO/H,OAAA8E,EAAA,EAAA9E,QAAA8E,EAAA,EAAA9E,CAAA,GAAIuB,GAAX,IAAkB0E,WAAYvE,EAAOuE,aAEzC,IA9D6B,+BAgEzB,OAAOjG,OAAA8E,EAAA,EAAA9E,QAAA8E,EAAA,EAAA9E,CAAA,GACAuB,GADP,IAGI2E,oBAAqBxE,EAAOuE,WAAP,GAAAhH,OAAAe,OAAAqF,EAAA,EAAArF,CACXuB,EAAM2E,qBADK,CACgBxE,EAAOwB,SACtC3B,EAAM2E,oBAAoBJ,OAAO,SAAA/E,GAAE,OAAIA,IAAOW,EAAOwB,WAGnE,QACI,OAAO3B,8BC/EfV,EAAe,CACfmH,aAAa,GA2BFC,EAtBI,WAAqE,IAApE1G,EAAoEC,UAAAxC,OAAA,QAAAyC,IAAAD,UAAA,GAAAA,UAAA,GAA5DX,EACxB,QADoFW,UAAAxC,OAAA,EAAAwC,UAAA,QAAAC,GACrEJ,MACX,IAXwB,0BAYpB,OAAOrB,OAAA8E,EAAA,EAAA9E,QAAA8E,EAAA,EAAA9E,CAAA,GACAuB,GADP,IAEIyG,aAAa,IAErB,QACI,OAAOzG,ICTf2G,EAAcC,YAAgB,CAC9BC,WAAY9G,IACZ+G,WAAYxD,EACZyD,YAAapD,EACbqD,UAAWV,EACXW,KAAMC,IACNC,KAAMC,IACNC,IAAIX,IASJY,EAAQC,YAAYZ,EAAaa,YAAgBC,MAErDvE,OAAOoE,MAAQA,EACAA,2FCpBAI,EAPF,SAAClJ,GACV,OACImJ,EAAA9I,EAAAC,cAAA,OAAKC,UAAW6I,IAAEC,GAAlB,2BCKOC,EAPD,SAACtJ,GACX,OACImJ,EAAA9I,EAAAC,cAAA,OAAKC,UAAW6I,IAAEC,GAAlB,4BCKOE,EAPE,SAACvJ,GACd,OACImJ,EAAA9I,EAAAC,cAAA,OAAKC,UAAW6I,IAAEC,GAAlB,wECiDOG,GAzCsB,SAAA9J,GAQjC,IAL4D,IAHzB+J,EAGyB/J,EAHzB+J,gBAAiB5G,EAGQnD,EAHRmD,SAGQ6G,EAAAhK,EAFtBkD,mBAEsB,IAAA8G,EAFR,EAEQA,EAAAC,EAAAjK,EADtBkK,qBACsB,IAAAD,EADN,SAAAE,GAAC,OAAIA,GACCF,EAAAG,EAAApK,EAAtBqK,mBAAsB,IAAAD,EAAR,GAAQA,EAExDE,EAAaC,KAAKC,KAAKT,EAAkB5G,GAEzCsH,EAAuB,GAClBC,EAAI,EAAGA,GAAKJ,EAAYI,IAC7BD,EAAME,KAAKD,GAGf,IAAIE,EAAeL,KAAKC,KAAKF,EAAaD,GATkBQ,EAUpBC,mBAAS,GAVWC,EAAAxK,OAAAyK,GAAA,EAAAzK,CAAAsK,EAAA,GAUvDI,EAVuDF,EAAA,GAUxCG,EAVwCH,EAAA,GAYxDI,GAAyBF,EAAgB,GAAKZ,EAAc,EAC5De,EAAyBH,EAAgBZ,EAG7C,OAAOZ,EAAA9I,EAAAC,cAAA,OAAKC,UAAWwK,KAAGvK,KAAOwK,YAC3BL,EAAgB,GACdxB,EAAA9I,EAAAC,cAAA,UAAQ2K,QAAS,WAAQL,EAAiBD,EAAgB,KAA1D,QAEHR,EACIpE,OAAO,SAAAzH,GAAC,OAAIA,GAAKuM,GAAyBvM,GAAGwM,IAC7CjF,IAAI,SAACvH,GACF,OAAO6K,EAAA9I,EAAAC,cAAA,QAAMC,UAAYwK,KAAG9K,OAAAiL,GAAA,EAAAjL,CAAA,GACvBO,KAAOhC,aAAeoE,IAAgBtE,GACxCkC,KAAO/B,YACG0M,IAAK7M,EACL2M,QAAS,SAACG,GACNxB,EAActL,KACdA,KAEvBgM,EAAeK,GACbxB,EAAA9I,EAAAC,cAAA,UAAQ2K,QAAS,WAAQL,EAAiBD,EAAgB,KAA1D,oDCMGU,GAtCiB,SAACrL,GAAU,IAAAuK,EACXC,mBAAS,IADEC,EAAAxK,OAAAyK,GAAA,EAAAzK,CAAAsK,EAAA,GAChCe,EADgCb,EAAA,GAAAA,EAAA,GAGvC,OAAOtB,EAAA9I,EAAAC,cAAA,WAECN,EAAMgG,MACDD,OAAO,SAAAD,GAAC,OAAIA,EAAE7E,KAAKsK,QAAQD,IAAW,IACtCzF,IAAI,SAAAC,GAAC,OAAIqD,EAAA9I,EAAAC,cAAA,OAAK6K,IAAKrF,EAAE9E,IACtBmI,EAAA9I,EAAAC,cAAA,YACA6I,EAAA9I,EAAAC,cAAA,WACI6I,EAAA9I,EAAAC,cAACkL,EAAA,EAAD,CAASC,GAAI,YAAc3F,EAAE9E,IACjCmI,EAAA9I,EAAAC,cAAA,OAAKoL,IAAuB,MAAlB5F,EAAEP,OAAOoG,MAAgB7F,EAAEP,OAAOoG,MAAQpN,KAAWgC,UAAWC,KAAOjC,UAC5EqN,IAAI,OAGbzC,EAAA9I,EAAAC,cAAA,WACHwF,EAAEiC,SACGoB,EAAA9I,EAAAC,cAAA,UAAQuL,SAAU7L,EAAMmG,oBAAoB2F,KAAK,SAAA9K,GAAE,OAAIA,IAAO8E,EAAE9E,KAAKiK,QAAS,WAC5EjL,EAAMqD,SAASyC,EAAE9E,MADnB,YAGAmI,EAAA9I,EAAAC,cAAA,UAAQuL,SAAU7L,EAAMmG,oBAAoB2F,KAAK,SAAA9K,GAAE,OAAIA,IAAO8E,EAAE9E,KAAKiK,QAAS,WAC5EjL,EAAMkD,OAAO4C,EAAE9E,MADjB,YAIKmI,EAAA9I,EAAAC,cAAA,YACP6I,EAAA9I,EAAAC,cAAA,YACA6I,EAAA9I,EAAAC,cAAA,WAAMwF,EAAE7E,MACRkI,EAAA9I,EAAAC,cAAA,WAAMwF,EAAEnC,SAERwF,EAAA9I,EAAAC,cAAA,YACA6I,EAAA9I,EAAAC,cAAA,WAAM,sBACN6I,EAAA9I,EAAAC,cAAA,WAAM,0BCCHyL,GA7BkB,SAAC/L,GAK9B,IALwC,IACnCiG,EAAyDjG,EAAzDiG,gBAAiBpD,EAAwC7C,EAAxC6C,SAAUD,EAA8B5C,EAA9B4C,YAAagH,EAAiB5J,EAAjB4J,cACzC7C,EAAWiF,cACXhC,EAAaC,KAAKC,KAAKjE,EAAkBpD,GACzCsH,EAAkB,GACbC,EAAY,EAAGA,GAAKJ,EAAYI,IACrCD,EAAME,KAAKD,GANyB,IAAAG,EAQZC,mBAAS,IARGC,EAAAxK,OAAAyK,GAAA,EAAAzK,CAAAsK,EAAA,GAQjCe,EARiCb,EAAA,GAQzBwB,EARyBxB,EAAA,GAgBxC,OAAOtB,EAAA9I,EAAAC,cAAA,WACH6I,EAAA9I,EAAAC,cAAC4L,GAAD,CACIzC,gBAAiBxD,EACjBpD,SAAUA,EACVD,YAAaA,EACbgH,cAAeA,IAEnBT,EAAA9I,EAAAC,cAAA,SAAO6L,YAAa,SAAUpN,MAAOuM,EAAQc,SAb1B,SAAChB,GACpBa,EAAUb,EAAEiB,OAAOtN,OACnBgI,EAASX,EAAUkF,OAYnBnC,EAAA9I,EAAAC,cAAA,WAAK6I,EAAA9I,EAAAC,cAAA,oCAA4B2F,IAEjCkD,EAAA9I,EAAAC,cAACgM,GAAStM,0BCzCPuM,GAAY,SAACvM,GACpB,OAAOmJ,EAAA9I,EAAAC,cAAA,WACH6I,EAAA9I,EAAAC,cAAA,OAAKoL,IAAKc,KAAWZ,IAAI,iBCApBjJ,GAAW8J,aAHC,SAACjL,GACtB,OAAOA,EAAMgH,UAAUxC,OAE8B,SAACA,GAClD,OAAOA,EAAMD,OAAO,SAAAD,GAAC,OAAI,MAIpB4G,GAAc,SAAClL,GACxB,OAAOA,EAAMgH,UAAU3F,UAEd8J,GAAqB,SAACnL,GAC/B,OAAOA,EAAMgH,UAAUvC,iBAEd2G,GAAiB,SAACpL,GAC3B,OAAOA,EAAMgH,UAAU5F,aAEdiK,GAAgB,SAACrL,GAC1B,OAAOA,EAAMgH,UAAUtC,YAEd4G,GAAyB,SAACtL,GACnC,OAAOA,EAAMgH,UAAUrC,qBC2BrB4G,+MACFvL,MAAQ,CACJ8J,OAAQ,MASZ1B,cAAgB,SAACnL,GAAuB,IAC7BoE,EAAYmK,EAAKhN,MAAjB6C,SACPmK,EAAKhN,MAAM2C,SAASlE,EAAWoE,2DARnC,WAAoB,IAAAoK,EACepF,KAAK7H,MAA7B4C,EADSqK,EACTrK,YAAYC,EADHoK,EACGpK,SACnBgF,KAAK7H,MAAM2C,SAASC,EAAYC,yBAUpC,WACI,OAAOsG,EAAA9I,EAAAC,cAAA6I,EAAA9I,EAAA6M,SAAA,KACFrF,KAAK7H,MAAMkG,WACRiD,EAAA9I,EAAAC,cAAC6M,GAAD,MAAe,KACnBhE,EAAA9I,EAAAC,cAAC8M,GAAD,CACIxD,cAAe/B,KAAK+B,cACpB5D,MAAO6B,KAAK7H,MAAMgG,MAClB3C,SAAUwE,KAAK7H,MAAMqD,SACrBH,OAAQ2E,KAAK7H,MAAMkD,OACnBN,YAAaiF,KAAK7H,MAAM4C,YACxBqD,gBAAiB4B,KAAK7H,MAAMiG,gBAC5BpD,SAAUgF,KAAK7H,MAAM6C,SACrB4D,wBAAyBoB,KAAK7H,MAAMyG,wBACpCN,oBAAqB0B,KAAK7H,MAAMmG,8BA9BnBkH,IAAMC,WAkDpBC,eACXC,YAdkB,SAAChM,GACnB,MAAO,CACHuE,OAAQvE,EAAMgH,UAAUzC,OACxBC,MAAOrD,GAASnB,GAChBqB,SAAU6J,GAAYlL,GACtByE,gBAAiB0G,GAAmBnL,GACpCoB,YAAagK,GAAepL,GAC5B0E,WAAY2G,GAAcrL,GAC1B2E,oBAAqB2G,GAAuBtL,KAMvB,CACrB4E,YACAlD,OXsDc,SAACC,GAAD,sBAAAsK,EAAAxN,OAAA0G,EAAA,EAAA1G,CAAA2G,EAAAvG,EAAAwG,KAAoB,SAAA6G,EAAO3G,GAAP,IAAAC,EAAA,OAAAJ,EAAAvG,EAAA3B,KAAA,SAAAiP,GAAA,cAAAA,EAAAxG,KAAAwG,EAAAvG,MAAA,OAClCJ,EAAYjF,IAASmB,OAAO0K,KAAK7L,KAErC2E,EAAmBK,EAAS5D,EAAO6D,EADfX,GAFkB,wBAAAsH,EAAApG,SAAAmG,MAApB,gBAAAG,GAAA,OAAAJ,EAAA7F,MAAAC,KAAApG,YAAA,IWrDd4B,SX0DgB,SAACF,GAAD,sBAAA2K,EAAA7N,OAAA0G,EAAA,EAAA1G,CAAA2G,EAAAvG,EAAAwG,KAAY,SAAAkH,EAAOhH,GAAP,IAAAC,EAAA,OAAAJ,EAAAvG,EAAA3B,KAAA,SAAAsP,GAAA,cAAAA,EAAA7G,KAAA6G,EAAA5G,MAAA,OAC5BJ,EAAYjF,IAASsB,SAASuK,KAAK7L,KAEvC2E,EAAmBK,EAAS5D,EAAO6D,EADfV,GAFY,wBAAA0H,EAAAzG,SAAAwG,MAAZ,gBAAAE,GAAA,OAAAH,EAAAlG,MAAAC,KAAApG,YAAA,IWzDhBgF,wBAAyBA,EACzB9D,SX+B4B,SAACC,EAAaC,GAAd,sBAAAnD,EAAAO,OAAA0G,EAAA,EAAA1G,CAAA2G,EAAAvG,EAAAwG,KAA2B,SAAAqH,EAAOnH,GAAP,IAAA9D,EAAA,OAAA2D,EAAAvG,EAAA3B,KAAA,SAAAyP,GAAA,cAAAA,EAAAhH,KAAAgH,EAAA/G,MAAA,cAC3DL,EAASP,GAAgB,IACzBO,EAASR,EAAiB3D,IAFiCuL,EAAA/G,KAAA,EAG1CrF,IAASY,SAASC,EAAaC,GAHW,OAGvDI,EAHuDkL,EAAA9G,KAI3DN,EAASP,GAAgB,IACzBO,EAnCmD,CAACzF,KArGtC,YAqGuD0E,MAmCjD/C,EAAKwC,QACzBsB,EA9B8D,CAC9DzF,KAzG0B,wBA0G1B0G,MA4B8B/E,EAAKmL,aACnCrH,EAASR,EAAiB3D,IAPiC,wBAAAuL,EAAA5G,SAAA2G,MAA3B,gBAAAG,GAAA,OAAA3O,EAAAkI,MAAAC,KAAApG,YAAA,MWrCrB8L,CAQPR,yBC1DOuB,GAtCgB,SAACtO,GAAU,IAAAuK,EACNC,oBAAS,GADHC,EAAAxK,OAAAyK,GAAA,EAAAzK,CAAAsK,EAAA,GAC/BgE,EAD+B9D,EAAA,GACrB+D,EADqB/D,EAAA,GAAAgE,EAEVjE,mBAASxK,EAAM2D,QAFL+K,EAAAzO,OAAAyK,GAAA,EAAAzK,CAAAwO,EAAA,GAE/B9K,EAF+B+K,EAAA,GAEvBxJ,EAFuBwJ,EAAA,GAItCC,oBAAU,WACNzJ,EAAUlF,EAAM2D,SACjB,CAAC3D,EAAM2D,SAWV,OACIwF,EAAA9I,EAAAC,cAAA,YACMiO,GACFpF,EAAA9I,EAAAC,cAAA,WACI6I,EAAA9I,EAAAC,cAAA,QAAMsO,cAdO,WACrBJ,GAAY,KAaJ,IAAyCxO,EAAM2D,QAAU,YAG5D4K,GACDpF,EAAA9I,EAAAC,cAAA,WACI6I,EAAA9I,EAAAC,cAAA,SACIuO,WAAW,EACXC,OAlBW,WACvBN,GAAY,GACZxO,EAAM0D,aAAaC,IAiBPyI,SAfO,SAAChB,GACpBlG,EAAUkG,EAAE2D,cAAchQ,QAedA,MAAO4E,OCfZqL,GArBK,SAAAtP,GAAyD,IAAvDuF,EAAuDvF,EAAvDuF,QAAStB,EAA8CjE,EAA9CiE,OAAQD,EAAsChE,EAAtCgE,aAAcuL,EAAwBvP,EAAxBuP,QAASpL,EAAenE,EAAfmE,UAC1D,IAAKoB,EACD,OAAOkE,EAAA9I,EAAAC,cAAC6M,GAAD,MAOX,OACIhE,EAAA9I,EAAAC,cAAA,OAAKC,UAAW6I,KAAE/J,kBACd8J,EAAA9I,EAAAC,cAAA,WACI6I,EAAA9I,EAAAC,cAAA,OAAKoL,IAAKzG,EAAQM,OAAO2J,OAAS3Q,KAAWqN,IAAI,GAAGrL,UAAW6I,KAAE9J,YAEjE6J,EAAA9I,EAAAC,cAAC6O,GAAD,CAAwBxL,OAAQA,EACRD,aAAcA,IACrCuL,GAAW9F,EAAA9I,EAAAC,cAAA,SAAOgB,KAAM,OAAQ8K,SAZjB,SAAChB,GACrBA,EAAEiB,OAAO+C,MAAMnQ,QACf4E,EAAUuH,EAAEiB,OAAO+C,MAAM,oDCGtBC,GAZF,SAACrP,GACV,OACImJ,EAAA9I,EAAAC,cAAA,OAAKC,UAAW6I,KAAEjK,MACdgK,EAAA9I,EAAAC,cAAA,OAAKoL,IAAI,sEAAsEE,IAAI,KAClF5L,EAAMmB,QACPgI,EAAA9I,EAAAC,cAAA,WACI6I,EAAA9I,EAAAC,cAAA,qBAAmBN,EAAMgF,sDCmBnCsK,GAAWxQ,aAAiB,IAgB5ByQ,GAAqBC,aAAU,CAAC7G,KAAM,yBAAjB6G,CAfL,SAACxP,GACnB,OAAQmJ,EAAA9I,EAAAC,cAAA,QAAMmP,SAAUzP,EAAM0P,cAC1BvG,EAAA9I,EAAAC,cAACqP,GAAA,EAAD,CAAO1O,KAAK,cAAc2O,UAAWnQ,KAAUoQ,SAAU,CAAChR,KAASyQ,IAAWnD,YAAa,iBAM3FhD,EAAA9I,EAAAC,cAAA,WACI6I,EAAA9I,EAAAC,cAAA,8BAQGwP,GAvCC,SAAC9P,GACb,IAAI+P,EAAe/P,EAAMR,MAAMqG,IAAI,SAAAvH,GAAC,OAAI6K,EAAA9I,EAAAC,cAAC0P,GAAD,CAAMhL,WAAY1G,EAAE0G,WAAY7D,QAAS7C,EAAE6C,YAMnF,OACIgI,EAAA9I,EAAAC,cAAA,OAAKC,UAAW6I,KAAE7J,YACd4J,EAAA9I,EAAAC,cAAA,WACI6I,EAAA9I,EAAAC,cAAA,uBAGJ6I,EAAA9I,EAAAC,cAACiP,GAAD,CAAoBE,SAVZ,SAACQ,GACbjQ,EAAMkQ,QAAQD,EAAO5K,gBAWjB8D,EAAA9I,EAAAC,cAAA,OAAKC,UAAW6I,KAAE5J,OACbuQ,KCFFI,GAFU3C,YAdH,SAAChM,GACnB,MAAO,CACHhC,MAAOgC,EAAM+G,YAAY/I,MACzB6F,YAAa7D,EAAM+G,YAAYlD,cAGd,SAAC0B,GACtB,MAAO,CACHmJ,QAAS,SAAC7K,GACN0B,ElBkFwB,SAAC1B,GAAD,MAA6C,CAAC/D,KA9FjE,WA8FiF+D,ekBlF7E+K,CAAqB/K,OAKjBmI,CAA8CsC,ICDxDO,GAbC,SAACrQ,GACb,OACImJ,EAAA9I,EAAAC,cAAA,WACI6I,EAAA9I,EAAAC,cAACgQ,GAAD,CACIzM,UAAW7D,EAAM6D,UACjBoL,QAASjP,EAAMiP,QACfhK,QAASjF,EAAMiF,QACftB,OAAQ3D,EAAM2D,OACdD,aAAc1D,EAAM0D,eACxByF,EAAA9I,EAAAC,cAACiQ,GAAD,QCaNC,uKACF,WACI,IAAIrN,EAAS0E,KAAK7H,MAAM6E,MAAM4L,OAAOtN,OAChCA,IACDA,EAAS0E,KAAK7H,MAAM0Q,mBAEhB7I,KAAK7H,MAAM2Q,QAAQtG,KAAK,UAGhCxC,KAAK7H,MAAM4Q,gBAAgBzN,GAC3B0E,KAAK7H,MAAMwD,UAAUL,oCAGzB,WACI0E,KAAKgJ,mDAGT,SAAmBC,EAAgCC,EAAyBC,GACpEnJ,KAAK7H,MAAM6E,MAAM4L,OAAOtN,SAAW2N,EAAUjM,MAAM4L,OAAOtN,QAC1D0E,KAAKgJ,uCAGb,WAEI,OACI1H,EAAA9I,EAAAC,cAAA,WACI6I,EAAA9I,EAAAC,cAAC2Q,GAADhR,OAAAS,OAAA,GAAamH,KAAK7H,MAAlB,CACSiP,SAAUpH,KAAK7H,MAAM6E,MAAM4L,OAAOtN,OAClC8B,QAAS4C,KAAK7H,MAAMiF,QACpBtB,OAAQkE,KAAK7H,MAAM2D,OACnBD,aAAcmE,KAAK7H,MAAM0D,aACzBG,UAAWgE,KAAK7H,MAAM6D,qBA/BhBwJ,IAAMC,WAyEtBC,eACXC,YATkB,SAAChM,GAAD,MAAyB,CAC3CyD,QAASzD,EAAM+G,YAAYtD,QAC3BtB,OAAQnC,EAAM+G,YAAY5E,OAC1B+M,iBAAkBlP,EAAMiH,KAAKzH,GAC7BkQ,OAAQ1P,EAAMiH,KAAKyI,SAKM,CAACN,gBpBcC,SAACzN,GAAD,sBAAAzD,EAAAO,OAAA0G,EAAA,EAAA1G,CAAA2G,EAAAvG,EAAAwG,KAAoB,SAAAqH,EAAOnH,GAAP,IAAA/D,EAAA,OAAA4D,EAAAvG,EAAA3B,KAAA,SAAAyP,GAAA,cAAAA,EAAAhH,KAAAgH,EAAA/G,MAAA,cAAA+G,EAAA/G,KAAA,EACxBrF,IAASwB,WAAWJ,GADI,OACzCH,EADyCmL,EAAA9G,KAE/CN,EAf+E,CAACzF,KAnG3D,mBAmGmF2D,QAehFjC,IAFuB,wBAAAmL,EAAA5G,SAAA2G,MAApB,gBAAAG,GAAA,OAAA3O,EAAAkI,MAAAC,KAAApG,YAAA,IoBdgB+B,UpBkBtB,SAACL,GAAD,sBAAAvC,EAAAX,OAAA0G,EAAA,EAAA1G,CAAA2G,EAAAvG,EAAAwG,KAAoB,SAAAC,EAAOC,GAAP,IAAA/D,EAAA,OAAA4D,EAAAvG,EAAA3B,KAAA,SAAAwI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACpBpF,IAAWwB,UAAUL,GADD,OACrCH,EADqCkE,EAAAG,KAEzCN,EAAS7B,EAAUlC,IAFsB,wBAAAkE,EAAAK,SAAAT,MAApB,gBAAAU,GAAA,OAAA5G,EAAAgH,MAAAC,KAAApG,YAAA,IoBlBiCiC,apBsB9B,SAACC,GAAD,sBAAA8J,EAAAxN,OAAA0G,EAAA,EAAA1G,CAAA2G,EAAAvG,EAAAwG,KAAoB,SAAA6G,EAAO3G,GAAP,OAAAH,EAAAvG,EAAA3B,KAAA,SAAAiP,GAAA,cAAAA,EAAAxG,KAAAwG,EAAAvG,MAAA,cAAAuG,EAAAxG,KAAA,EAAAwG,EAAAvG,KAAA,EAEnBpF,IAAW0B,aAAaC,GAFL,OAGP,IAHOgK,EAAAtG,KAG3BpE,KAAKqE,YACdP,EAAS7B,EAAUvB,IAJiBgK,EAAAvG,KAAA,eAAAuG,EAAAxG,KAAA,EAAAwG,EAAAwD,GAAAxD,EAAA,iCAAAA,EAAApG,SAAAmG,EAAA,iBAApB,gBAAAjG,GAAA,OAAAgG,EAAA7F,MAAAC,KAAApG,YAAA,IoBtB4CoC,UpBgC/C,SAACuN,GAAD,sBAAAtD,EAAA7N,OAAA0G,EAAA,EAAA1G,CAAA2G,EAAAvG,EAAAwG,KAAU,SAAAkH,EAAOhH,GAAP,IAAA/D,EAAA,OAAA4D,EAAAvG,EAAA3B,KAAA,SAAAsP,GAAA,cAAAA,EAAA7G,KAAA6G,EAAA5G,MAAA,cAAA4G,EAAA5G,KAAA,EACVpF,IAAW6B,UAAUuN,GADX,OAEE,KAD7BpO,EAD2BgL,EAAA3G,MAElBpE,KAAKqE,YACdP,EA7BuE,CAACzF,KAtG7D,aAsG+EiE,OA6BhEvC,EAASC,KAAKA,KAAKsC,SAHlB,wBAAAyI,EAAAzG,SAAAwG,MAAV,gBAAArG,GAAA,OAAAoG,EAAAlG,MAAAC,KAAApG,YAAA,MoB/BrB4P,IAFW9D,CAIbiD,iHCtGWc,GAAa,SAAC9P,GACvB,OAAOA,EAAMiH,KAAKyI,QAETK,GAAyB,SAAC/P,GACnC,OAAOA,EAAMiH,KAAKrE,OCMToN,GAAoC,SAACxR,GAC9C,IAAMkR,EAASO,YAA0BH,IACnClN,EAAQqN,YAA0BF,IAClCxK,EAAWiF,cAMV0F,EAAUC,KAAVD,OACP,OAAQvI,EAAA9I,EAAAC,cAACoR,EAAD,CAAQnR,UAAU,UACtB4I,EAAA9I,EAAAC,cAAA,OAAKC,UAAU,SACf4I,EAAA9I,EAAAC,cAACsR,GAAA,EAAD,KACIzI,EAAA9I,EAAAC,cAACuR,GAAA,EAAD,CAAKC,KAAM,IACP3I,EAAA9I,EAAAC,cAACyR,GAAA,EAAD,CAAMC,MAAM,OAAOC,KAAK,aAAaC,oBAAqB,CAAC,MACvD/I,EAAA9I,EAAAC,cAACyR,GAAA,EAAKI,KAAN,CAAWhH,IAAI,KAAIhC,EAAA9I,EAAAC,cAACkL,EAAA,EAAD,CAAMC,GAAG,eAAT,iBAE1ByF,EACK/H,EAAA9I,EAAAC,cAAA6I,EAAA9I,EAAA6M,SAAA,KAAE/D,EAAA9I,EAAAC,cAACuR,GAAA,EAAD,CAAKC,KAAM,GACX3I,EAAA9I,EAAAC,cAAC8R,GAAA,EAAD,CAAQxG,IAAKxH,GAAS,GAAIiO,MAAO,CAACC,gBAAiB,WAAYC,KAAMpJ,EAAA9I,EAAAC,cAACkS,GAAA,EAAD,SAErErJ,EAAA9I,EAAAC,cAACuR,GAAA,EAAD,CAAKC,KAAM,GACP3I,EAAA9I,EAAAC,cAACmS,GAAA,EAAD,CAAQxH,QAjBL,WACnBlE,EAASvC,iBAgBO,aAGN2E,EAAA9I,EAAAC,cAACuR,GAAA,EAAD,CAAKC,KAAM,GACT3I,EAAA9I,EAAAC,cAACmS,GAAA,EAAD,KACItJ,EAAA9I,EAAAC,cAACkL,EAAA,EAAD,CAAMC,GAAI,UAAV,cCpCXiH,GAAe,SAACpF,GACzB,OAAO,SAACtN,GACJ,OAAOmJ,EAAA9I,EAAAC,cAAC6I,EAAA9I,EAAMsS,SAAP,CAAgBC,SAAUzJ,EAAA9I,EAAAC,cAAA,0BAC7B6I,EAAA9I,EAAAC,cAACgN,EAActN,MCerB6S,GAAYxF,IAAMyF,KAAK,kBAAMzU,EAAA+M,EAAA,GAAArI,KAAA1E,EAAAuP,KAAA,aAG7BmF,GAAmB1F,IAAMyF,KAAK,kBAAMzU,EAAA+M,EAAA,GAAArI,KAAA1E,EAAAuP,KAAA,aAEpCoF,0KACF,WACInL,KAAK7H,MAAMiT,sCAGf,WAAS,IAIEC,EAAWC,KAAXD,QACAE,EAA0BzB,KAA1ByB,QAASC,EAAiB1B,KAAjB0B,OAAQC,EAAS3B,KAAT2B,MACxB,OACInK,EAAA9I,EAAAC,cAACiT,GAAA,EAAD,KACIpK,EAAA9I,EAAAC,cAACkT,GAAD,MACArK,EAAA9I,EAAAC,cAAC8S,EAAD,CAASf,MAAO,CAACoB,QAAS,WACtBtK,EAAA9I,EAAAC,cAACoT,GAAA,EAAD,CAAYrB,MAAO,CAACsB,OAAQ,WACxBxK,EAAA9I,EAAAC,cAACoT,GAAA,EAAWvB,KAAZ,aACAhJ,EAAA9I,EAAAC,cAACoT,GAAA,EAAWvB,KAAZ,aACAhJ,EAAA9I,EAAAC,cAACoT,GAAA,EAAWvB,KAAZ,aAEJhJ,EAAA9I,EAAAC,cAACiT,GAAA,EAAD,CAAQhT,UAAU,yBAAyB8R,MAAO,CAACoB,QAAS,WACxDtK,EAAA9I,EAAAC,cAACgT,EAAD,CAAO/S,UAAU,yBAAyBqT,MAAO,KAC7CzK,EAAA9I,EAAAC,cAACyR,GAAA,EAAD,CACIE,KAAK,SACLC,oBAAqB,CAAC,KACtB2B,gBAAiB,CAAC,QAClBxB,MAAO,CAACyB,OAAQ,SAEhB3K,EAAA9I,EAAAC,cAAC4S,EAAD,CAAS/H,IAAI,OAAOoH,KAAMpJ,EAAA9I,EAAAC,cAACkS,GAAA,EAAD,MAAiBuB,MAAM,cAC7C5K,EAAA9I,EAAAC,cAACyR,GAAA,EAAKI,KAAN,CAAWhH,IAAI,KAAIhC,EAAA9I,EAAAC,cAACkL,EAAA,EAAD,CAAMC,GAAG,YAAT,WAAnB,KACAtC,EAAA9I,EAAAC,cAACyR,GAAA,EAAKI,KAAN,CAAWhH,IAAI,KAAf,IAAoBhC,EAAA9I,EAAAC,cAACkL,EAAA,EAAD,CAAMC,GAAG,YAAT,cAGxBtC,EAAA9I,EAAAC,cAAC4S,EAAD,CAAS/H,IAAI,OAAOoH,KAAMpJ,EAAA9I,EAAAC,cAAC0T,GAAA,EAAD,MAAmBD,MAAM,cAC/C5K,EAAA9I,EAAAC,cAACyR,GAAA,EAAKI,KAAN,CAAWhH,IAAI,KAAIhC,EAAA9I,EAAAC,cAACkL,EAAA,EAAD,CAAMC,GAAG,eAAT,WAKvBtC,EAAA9I,EAAAC,cAAC4S,EAAD,CAAS/H,IAAI,OAAOoH,KAAMpJ,EAAA9I,EAAAC,cAAC2T,GAAA,EAAD,MAAyBF,MAAM,YACrD5K,EAAA9I,EAAAC,cAACyR,GAAA,EAAKI,KAAN,CAAWhH,IAAI,KAAf,WACAhC,EAAA9I,EAAAC,cAACyR,GAAA,EAAKI,KAAN,CAAWhH,IAAI,MAAf,YACAhC,EAAA9I,EAAAC,cAACyR,GAAA,EAAKI,KAAN,CAAWhH,IAAI,MAAf,YACAhC,EAAA9I,EAAAC,cAACyR,GAAA,EAAKI,KAAN,CAAWhH,IAAI,MAAf,eAIZhC,EAAA9I,EAAAC,cAAC8S,EAAD,CAASf,MAAO,CAACoB,QAAS,SAAUS,UAAW,MAC3C/K,EAAA9I,EAAAC,cAAC6T,EAAA,EAAD,CAAOC,KAAK,YAAYC,OAAQ3B,GAAaK,MAC7C5J,EAAA9I,EAAAC,cAAC6T,EAAA,EAAD,CAAOC,KAAK,oBAAoBC,OAAQ,kBAAMlL,EAAA9I,EAAAC,cAACgU,GAAD,SAC9CnL,EAAA9I,EAAAC,cAAC6T,EAAA,EAAD,CAAOC,KAAK,SAASC,OAAQ,kBAAMlL,EAAA9I,EAAAC,cAACiU,EAAD,SACnCpL,EAAA9I,EAAAC,cAAC6T,EAAA,EAAD,CAAOC,KAAK,UAAUC,OAAQ,kBAAMlL,EAAA9I,EAAAC,cAACkU,EAAD,SACpCrL,EAAA9I,EAAAC,cAAC6T,EAAA,EAAD,CAAOC,KAAK,aAAaC,OAAQ,kBAAMlL,EAAA9I,EAAAC,cAACmU,EAAD,SACvCtL,EAAA9I,EAAAC,cAAC6T,EAAA,EAAD,CAAOC,KAAK,eAAeC,OAAQ,kBAAMlL,EAAA9I,EAAAC,cAACoU,GAAD,SACzCvL,EAAA9I,EAAAC,cAAC6T,EAAA,EAAD,CAAOC,KAAK,UAAUC,OAAQ3B,GAAaG,SAIvD1J,EAAA9I,EAAAC,cAAC+S,EAAD,CAAQhB,MAAO,CAACsC,UAAW,WAA3B,iDA1DEtH,IAAMC,WAoETC,eAAQC,YAJD,SAAChM,GAAD,MAA8B,CAChDyG,YAAazG,EAAMyG,cAGyB,CAACgL,crBlEpB,iCAAAvT,EAAAO,OAAA0G,EAAA,EAAA1G,CAAA2G,EAAAvG,EAAAwG,KAAM,SAAAqH,EAAOnH,GAAP,OAAAH,EAAAvG,EAAA3B,KAAA,SAAAyP,GAAA,cAAAA,EAAAhH,KAAAgH,EAAA/G,MAAA,cAAA+G,EAAA/G,KAAA,EACXL,EAAS6N,eADE,OAAAzG,EAAA9G,KAE/BN,EANqC,CACrCzF,KAvB4B,4BA0BG,wBAAA6M,EAAA5G,SAAA2G,MAAN,gBAAAG,GAAA,OAAA3O,EAAAkI,MAAAC,KAAApG,YAAA,MqBkEd8L,CAAmDyF,ICnFlE6B,IAASR,OACLlL,EAAA9I,EAAAC,cAACkL,EAAA,EAAD,KACIrC,EAAA9I,EAAAC,cAACwU,EAAA,EAAD,CAAUhM,MAAOA,GACbK,EAAA9I,EAAAC,cAACyU,GAAD,QAGRC,SAASC,eAAe,S3BgHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrS,KAAK,SAAAsS,GACjCA,EAAaC,oM4B5HfxU,EAAe,CACfE,GAAI,KACJqD,MAAO,KACPD,MAAO,KACP8M,QAAQ,EACRqE,WAAY,MAmBHC,EAAkB,SAACxU,EAAIqD,EAAOD,EAAO8M,GAAnB,MAA+B,CAC1D5P,KA5BkB,gBA6BlBmU,QAAS,CAACzU,KAAIoD,QAAOC,QAAO6M,YAInB0D,EAAkB,iCAAAlV,EAAAO,OAAAyV,EAAA,EAAAzV,CAAA0V,EAAAtV,EAAAwG,KAAM,SAAAqH,EAAOnH,GAAP,IAAA9D,EAAA2S,EAAA5U,EAAA6U,EAAAxR,EAAA,OAAAsR,EAAAtV,EAAA3B,KAAA,SAAAyP,GAAA,cAAAA,EAAAhH,KAAAgH,EAAA/G,MAAA,cAAA+G,EAAA/G,KAAA,EAChBnF,IAAQkC,KADQ,OAET,KADpBlB,EAD6BkL,EAAA9G,MAExBC,aAAkBsO,EACE3S,EAAKA,KAAzBjC,EADkB4U,EAClB5U,GAAIoD,EADcwR,EACdxR,MAAOC,EADOuR,EACPvR,MAChB0C,EAASyO,EAAgBxU,EAAIqD,EAAOD,GAAO,KAJd,wBAAA+J,EAAA5G,SAAA2G,MAAN,gBAAAG,GAAA,OAAA3O,EAAAkI,MAAAC,KAAApG,YAAA,IAOlB2C,EAAQ,SAACC,EAAOC,EAAUC,GAAlB,sBAAA3D,EAAAX,OAAAyV,EAAA,EAAAzV,CAAA0V,EAAAtV,EAAAwG,KAAiC,SAAAC,EAAOC,GAAP,IAAA/D,EAAA7B,EAAA,OAAAwU,EAAAtV,EAAA3B,KAAA,SAAAwI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAC7BnF,IAAQmC,MAAMC,EAAOC,EAAUC,GADF,OAEjB,KAD7BvB,EAD8CkE,EAAAG,MAErCpE,KAAKqE,WACdP,EAAS6N,MAELzT,EAAU6B,EAASC,KAAK/B,SAASjC,OAAS,EAAI+D,EAASC,KAAK/B,SAAS,GAAK,aAC9E6F,EAAS+O,YAAW,QAAS,CAACC,OAAQ5U,MANQ,wBAAA+F,EAAAK,SAAAT,MAAjC,gBAAAU,GAAA,OAAA5G,EAAAgH,MAAAC,KAAApG,YAAA,IASR+C,EAAS,iCAAAiJ,EAAAxN,OAAAyV,EAAA,EAAAzV,CAAA0V,EAAAtV,EAAAwG,KAAM,SAAA6G,EAAO3G,GAAP,OAAA4O,EAAAtV,EAAA3B,KAAA,SAAAiP,GAAA,cAAAA,EAAAxG,KAAAwG,EAAAvG,MAAA,cAAAuG,EAAAvG,KAAA,EACHnF,IAAQuC,SADL,OAES,IAFTmJ,EAAAtG,KAEXpE,KAAKqE,YACdP,EAASyO,EAAgB,KAAM,KAAM,MAAM,IAHvB,wBAAA7H,EAAApG,SAAAmG,MAAN,gBAAAjG,GAAA,OAAAgG,EAAA7F,MAAAC,KAAApG,YAAA,IAOPiH,IA1CK,WAAyE,IAAxElH,EAAwEC,UAAAxC,OAAA,QAAAyC,IAAAD,UAAA,GAAAA,UAAA,GAAhEX,EAAca,EAAkDF,UAAAxC,OAAA,EAAAwC,UAAA,QAAAC,EACzF,OAAQC,EAAOL,MACX,IAhBc,gBAiBV,OAAOrB,OAAA+V,EAAA,EAAA/V,QAAA+V,EAAA,EAAA/V,CAAA,GACAuB,GACAG,EAAO8T,SAElB,QACI,OAAOjU,wBCzBnBrD,EAAAC,QAAA,CAAkBqC,aAAA,oCAAAV,MAAA,6BAAAkW,iBAAA","file":"static/js/main.b586ec7b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.8b1dbb1f.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Paginator_userPhoto__31CPu\",\"selectedPage\":\"Paginator_selectedPage__kDIOz\",\"pageNumber\":\"Paginator_pageNumber__16kt_\",\"wrap\":\"Paginator_wrap__3wmGu\"};","import React from 'react'\r\n\r\nexport const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProfileInfo_item__F6mB5\",\"img\":\"ProfileInfo_img__1lFDW\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2kwuZ\",\"mainPhoto\":\"ProfileInfo_mainPhoto__oLCOm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1jnKK\",\"posts\":\"MyPosts_posts__3UDMu\"};","import React from \"react\";\r\nimport styles from './FormsControls.module.css'\r\n\r\nexport const Textarea = ({input, meta:{touched,error}, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (<div className={styles.form_control + ' ' + (hasError ? styles.error : \"\")}>\r\n        <div><textarea {...input} {...props}/></div>\r\n        {hasError && <span>{error}</span>}\r\n    </div>)\r\n}\r\n\r\nexport const Input = ({input, meta:{touched,error}, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (<div className={styles.form_control + ' ' + (hasError ? styles.error : \"\")}>\r\n        <div><input {...input} {...props}/></div>\r\n        {hasError && <span>{error}</span>}\r\n    </div>)\r\n}\r\n","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: \"Dimych\"},\r\n        {id: 2, name: \"Andery\"},\r\n        {id: 3, name: \"Sveta\"},\r\n        {id: 4, name: \"Sasha\"},\r\n        {id: 5, name: \"Victor\"},\r\n        {id: 6, name: \"Valera\"},\r\n        {id: 7, name: \"Kos\"}\r\n    ] as Array<DialogType>,\r\n    messages: [\r\n        {id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"How is you\"},\r\n        {id: 3, message: \"Yo\"},\r\n        {id: 3, message: \"Yo\"},\r\n        {id: 4, message: \"Yo\"},\r\n        {id: 5, message: \"Yo\"},\r\n    ] as Array<MessageType>,\r\n\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\nconst dialogsReducer = (state = initialState, action: AddMessageActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n            let newMessage: MessageType = {\r\n                id: 6,\r\n                message: action.newMessageText\r\n            };\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage]\r\n            }\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport type AddMessageActionType = {\r\n    type: 'ADD-MESSAGE'\r\n    newMessageText: string\r\n}\r\nexport const addAnswerActionCreator = (newMessageText: string): AddMessageActionType =>\r\n    ({type: ADD_MESSAGE, newMessageText} as const)\r\n\r\nexport default dialogsReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__3Hp-D\",\"selectedPage\":\"users_selectedPage__3exoP\"};","module.exports = __webpack_public_path__ + \"static/media/Hourglass.6921c9f6.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__Fqzfp\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        \"API-KEY\": \"4e5aee81-42dd-43de-87fa-a601a9c1e88b\"\r\n\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    /*getAuth() {\r\n        return instance.get(`auth/me`)\r\n            .then(data => data.data);\r\n    },*/\r\n    getProfile(userId: number) {\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n\r\n}\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get(`profile/` + userId)\r\n            .then(data => data.data);\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get(`profile/status/` + userId)\r\n            .then(res => res.data);\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put(`profile/status`, {status: status})\r\n            .then(res => res.data);\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile)\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    }\r\n}\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n            .then(data => data.data);\r\n    },\r\n    login(email: string, password: string, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","type FriendsDialogsType =\r\n    {\r\n        id: number,\r\n        name: string\r\n    }\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: \"Dimych\"},\r\n        {id: 2, name: \"Andery\"},\r\n        {id: 3, name: \"Sveta\"},\r\n        {id: 4, name: \"Sasha\"},\r\n        {id: 5, name: \"Victor\"},\r\n        {id: 6, name: \"Valera\"},\r\n        {id: 7, name: \"Kos\"}\r\n    ] as Array<FriendsDialogsType>\r\n}\r\ntype initialStateType = typeof initialState\r\nconst friendsReducer = (state = initialState, action): initialStateType => {\r\n    return {...state}\r\n}\r\nexport default friendsReducer;","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst SAVE_PHOTO = 'SAVE_PHOTO';\r\n\r\nexport type AddPostActionType = {\r\n    type: 'ADD-POST',\r\n    newPostText: string\r\n}\r\nexport type UpDateNewPostActionType = {\r\n    type: 'UPDATE-NEW-POST-TEXT'\r\n    newText: string\r\n}\r\nexport type AddMessageActionType = {\r\n    type: 'ADD-MESSAGE'\r\n    newMessageText: string\r\n}\r\nexport type UpDateMessageActionType = {\r\n    type: 'UPDATE-MESSAGE-TEXT'\r\n    newTextMessage: string\r\n}\r\nexport type ActionsTypes =\r\n    savePhotoSuccessType\r\n    | AddPostActionType\r\n    | UpDateNewPostActionType\r\n    | AddMessageActionType\r\n    | UpDateMessageActionType\r\nexport type TYPESALLACTION = ActionsTypes | SetUserProfileActionType | setStatusType\r\nexport type PostType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\nexport type ContactsType = {\r\n    github: string\r\n    vk: string\r\n    facebook: string\r\n    instagram: string\r\n    twitter: string\r\n    website: string\r\n    youtube: string\r\n    mainLink: string\r\n}\r\nexport type PhotosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\nexport type ProfileType = {\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    contacts: ContactsType\r\n    photos: PhotosType\r\n}\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: \"Hi how are you?\", likesCount: 5},\r\n        {id: 2, message: \"It is my First post!\", likesCount: 23},\r\n        {id: 3, message: \"BlaBla\", likesCount: 65},\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n\r\n};\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst profileReducer = (state: InitialStateType = initialState, action: TYPESALLACTION): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        case \"SAVE_PHOTO\": {\r\n            return {...state, profile: {...state.profile, photos: action.photos} as ProfileType}\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText: string): AddPostActionType => ({type: ADD_POST, newPostText})\r\n\r\ntype SetUserProfileActionType = {\r\n    type: typeof SET_USER_PROFILE\r\n    profile: ProfileType\r\n}\r\nexport const setUserProfile = (profile: ProfileType): SetUserProfileActionType => ({type: SET_USER_PROFILE, profile})\r\nexport type setStatusType = {\r\n    type: typeof SET_STATUS\r\n    status: string\r\n}\r\nexport const savePhotoSuccess = (photos: PhotosType): savePhotoSuccessType => ({type: SAVE_PHOTO, photos} as const)\r\nexport type savePhotoSuccessType = {\r\n    type: typeof SAVE_PHOTO\r\n    photos: PhotosType\r\n}\r\nexport const setStatus = (status: string): setStatusType =>\r\n    ({type: SET_STATUS, status: status})\r\n\r\nexport const getUsersProFile = (userId: number) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response));\r\n}\r\nexport const getStatus = (userId: number) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response));\r\n}\r\nexport const updateStatus = (status: string) => async (dispatch) => {\r\n    try {\r\n        let response = await profileAPI.updateStatus(status);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    } catch (error) {\r\n        //\r\n    }\r\n}\r\nexport const savePhoto = (file) => async (dispatch: any) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\n\r\nexport default profileReducer;","export const updateObjectInArray = (items, itemsId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemsId) {\r\n            return {...u, ...newObjProps};\r\n        }\r\n        return u;\r\n    });\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW-POST';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_FILTER = 'SET_FILTER';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nexport type UserType = {\r\n    id: number,\r\n    name: string,\r\n    status: string,\r\n    photos: { small: string, large: string },\r\n    followed: boolean\r\n}\r\n\r\nlet initialState = {\r\n    filter: '',\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n\r\n}\r\n\r\nexport type InitialState = typeof initialState\r\n\r\nconst usersReducer = (state: InitialState = initialState, action: ActionType): InitialState => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n                /*state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true};\r\n                    }\r\n                    return u;\r\n                })*/\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n                /*state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false};\r\n                    }\r\n                    return u;\r\n                })*/\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_FILTER: {\r\n            return {...state, filter: action.filter}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n\r\n            return {\r\n                ...state,\r\n                //@ts-ignore\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\ntype ActionType =\r\n    followACSuccessType\r\n    | unfollowACSuccessType\r\n    | setUsersACType\r\n    | setCurrentPageACType\r\n    | setUsersTotalCountACType\r\n    | setIsFetchingACType\r\n    | toggleFollowingProgressType\r\n    | setFilterType\r\n\r\nexport const setFilter = (filter: string) => ({type: SET_FILTER, filter} as const)\r\ntype setFilterType = ReturnType<typeof setFilter>\r\n\r\nexport const followACSuccess = (userId: number) => ({type: FOLLOW, userId} as const)\r\ntype followACSuccessType = ReturnType<typeof followACSuccess>\r\n\r\nexport const unfollowACSuccess = (userId: number) => ({type: UNFOLLOW, userId} as const)\r\ntype unfollowACSuccessType = ReturnType<typeof unfollowACSuccess>\r\n\r\nexport const setUsersAC = (users: Array<UserType>) => ({type: SET_USERS, users} as const)\r\ntype setUsersACType = ReturnType<typeof setUsersAC>\r\n\r\nexport const setCurrentPageAC = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage} as const)\r\ntype setCurrentPageACType = ReturnType<typeof setCurrentPageAC>\r\n\r\nexport const setUsersTotalCountAC = (totalUsersCount: number) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    count: totalUsersCount\r\n} as const)\r\ntype setUsersTotalCountACType = ReturnType<typeof setUsersTotalCountAC>\r\n\r\nexport const setIsFetchingAC = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching} as const)\r\ntype setIsFetchingACType = ReturnType<typeof setIsFetchingAC>\r\n\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n} as const)\r\ntype toggleFollowingProgressType = ReturnType<typeof toggleFollowingProgress>\r\n//-----------------------------------------------------------\r\n/*\r\ntype DispatchType = Dispatch<ActionType>\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionType>\r\n*/\r\n//_________________________________________________________________\r\n\r\n\r\n//_________________________________________________________________\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(setIsFetchingAC(true));\r\n    dispatch(setCurrentPageAC(currentPage))\r\n    let data = await usersAPI.getUsers(currentPage, pageSize)\r\n    dispatch(setIsFetchingAC(false));\r\n    dispatch(setUsersAC(data.items));\r\n    dispatch(setUsersTotalCountAC(data.totalCount));\r\n    dispatch(setCurrentPageAC(currentPage))\r\n}\r\n\r\n\r\nconst followUnfollowFlow = async(dispatch,userId,apiMethod,actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId: number) => async (dispatch: Dispatch) => {\r\n    let apiMethod = usersAPI.follow.bind(usersAPI);\r\n    let actionCreator = followACSuccess;\r\n    followUnfollowFlow(dispatch,userId,apiMethod,actionCreator)\r\n}\r\nexport const unfollow = (userId) => async (dispatch: Dispatch) => {\r\n    let apiMethod = usersAPI.unfollow.bind(usersAPI);\r\n    let actionCreator = unfollowACSuccess;\r\n    followUnfollowFlow(dispatch,userId,apiMethod,actionCreator)\r\n}\r\n\r\n\r\nexport default usersReducer;","import {getAuthUserData} from \"./auth-reduser\";\r\n\r\nconst SET_INITIALIZED_SUCCESS = 'SET_INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst appReducer = (state = initialState, action: initializedType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\nexport type initializedType = ReturnType<typeof InitializedSuccess>\r\n\r\nexport const InitializedSuccess = () => ({\r\n    type: SET_INITIALIZED_SUCCESS\r\n} as const)\r\n\r\nexport const InitializeApp = () => async (dispatch: any) => {\r\n    let promise = await dispatch(getAuthUserData())\r\n    dispatch(InitializedSuccess())\r\n}\r\n\r\nexport default appReducer;","import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport dialogsReducer from \"./dialogs-reduser\";\r\nimport friendsReducer from \"./friends-reduser\";\r\nimport profileReducer from \"./profile-reduser\";\r\nimport usersReducer from \"./users-reduser\";\r\nimport authReducer from \"./auth-reduser\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./app-reduser\";\r\n\r\nlet rootReducer = combineReducers({\r\n    dialogPage: dialogsReducer,\r\n    friendPage: friendsReducer,\r\n    profilePage: profileReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app:appReducer\r\n})\r\n\r\nexport type ActionsTypes = {\r\n\r\n}\r\ntype PropertiesType<T> = T extends {[key:string]:infer U} ? U : never\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nlet store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n//@ts-ignore\r\nwindow.store = store;\r\nexport default store;","import React from \"react\";\r\nimport s from './News.module.css'\r\nconst News = (props) => {\r\n    return(\r\n        <div className={s.Y}>\r\n            News\r\n        </div>\r\n    )\r\n}\r\nexport default News;","import React from \"react\";\r\nimport s from './Music.module.css'\r\nconst Music = (props) => {\r\n    return(\r\n        <div className={s.Y}>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\nexport default Music;","import React from \"react\";\r\nimport s from './Settings.module.css'\r\nconst Settings = (props) => {\r\n    return(\r\n        <div className={s.Y}>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\nexport default Settings;","import React, {useState} from 'react'\r\nimport styles from './Paginator.module.css'\r\nimport cn from 'classnames'\r\n\r\ntype PropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage?: number\r\n    onPageChanged?: (pageNumber: number) => void\r\n    portionSize?: number\r\n}\r\n\r\nlet Paginator: React.FC<PropsType> = ({totalItemsCount, pageSize,\r\n                                          currentPage = 1,\r\n                                          onPageChanged = x => x,\r\n                                          portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages: Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={cn(styles.paginator)}>\r\n        { portionNumber > 1 &&\r\n            <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React, {useState} from 'react'\r\nimport styles from \"./users.module.css\"\r\nimport userPhoto from '../../assets/images/user.png'\r\nimport {NavLink} from 'react-router-dom';\r\nimport {UserType} from \"../../redux/users-reduser\";\r\n\r\n\r\ntype PropsType = {\r\n    users: Array<UserType>\r\n    unfollow: (id: number) => void\r\n    followingInProgress: Array<number>\r\n    follow: (id: number) => void\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => void\r\n}\r\n\r\nlet User: React.FC<PropsType> = (props) => {\r\n    const [search, setSearch] = useState('')\r\n\r\n    return <div>\r\n        {\r\n            props.users\r\n                .filter(u => u.name.indexOf(search) > -1)\r\n                .map(u => <div key={u.id}>\r\n                <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + u.id}>\r\n                <img src={u.photos.small != null ? u.photos.small : userPhoto} className={styles.userPhoto}\r\n                     alt=\"\"/>\r\n                     </NavLink>\r\n            </div>\r\n            <div>\r\n        {u.followed\r\n            ? <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                props.unfollow(u.id)\r\n            }}>Unfollow</button>\r\n            : <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                props.follow(u.id)\r\n            }}>Follow</button>}\r\n            </div>\r\n            </span><span>\r\n            <span>\r\n            <div>{u.name}</div>\r\n            <div>{u.status}</div>\r\n            </span>\r\n            <span>\r\n            <div>{\"u.location.country\"}</div>\r\n            <div>{\"u.location.city\"}</div>\r\n            </span>\r\n            </span>\r\n                </div>)\r\n        }\r\n    </div>\r\n}\r\nexport default User;","import React, {useState} from 'react'\r\nimport {setFilter, UserType} from \"../../redux/users-reduser\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport PaginatorX from \"../Paginator/PaginatorX\";\r\nimport User from \"./User\";\r\n\r\ntype PropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (p: number) => void\r\n    users: Array<UserType>\r\n    unfollow: (id: number) => void\r\n    followingInProgress: Array<number>\r\n    follow: (id: number) => void\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => void\r\n}\r\n\r\nlet Users: React.FC<PropsType> = (props) => {\r\n    let {totalUsersCount, pageSize, currentPage, onPageChanged} = props\r\n    let dispatch = useDispatch()\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n    let pages: number[] = [];\r\n    for (let i: number = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    const [search, setSearch] = useState('')\r\n\r\n    const onSearchChange = (e) => {\r\n        setSearch(e.target.value)\r\n        dispatch(setFilter(search))\r\n    }\r\n\r\n\r\n    return <div>\r\n        <PaginatorX\r\n            totalItemsCount={totalUsersCount}\r\n            pageSize={pageSize}\r\n            currentPage={currentPage}\r\n            onPageChanged={onPageChanged}\r\n        />\r\n        <input placeholder={\"search\"} value={search} onChange={onSearchChange}/>\r\n        <div><strong>Total Users Count: {totalUsersCount}</strong></div>\r\n\r\n        <User {...props}/>\r\n    </div>\r\n}\r\nexport default Users;","import React from 'react'\r\nimport Hourglass from \"../../../assets/images/Hourglass.gif\";\r\n\r\nexport let Preloader = (props) => {\r\n    return <div>\r\n        <img src={Hourglass} alt=\"\"/>\r\n    </div>\r\n}","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n        return users.filter(u => true)\r\n    }\r\n)\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import {connect} from \"react-redux\";\r\nimport {\r\n    getUsersThunkCreator,\r\n    follow, unfollow, toggleFollowingProgress, setFilter\r\n} from \"../../redux/users-reduser\";\r\nimport React from \"react\";\r\nimport Users from \"./Users\";\r\nimport {Preloader} from \"../common/preloader/Preloader\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getPageSize,\r\n    getUsers,\r\n    getTotalUsersCount,\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getFollowingInProgress\r\n} from \"../../redux/UserSelectors\";\r\n\r\ntype UserType = {\r\n    id: number,\r\n    name: string,\r\n    status: string,\r\n    photos: { small: string, large: string },\r\n    followed: boolean,\r\n    onPageChanged: (pageNumber: number) => void\r\n}\r\n\r\ntype PropsType = {\r\n    setFilter: (filter: string) => void\r\n    toggleIsFetching: (isFetching: boolean) => void\r\n    toggleFollowingProgress: (isFetching: boolean) => void\r\n    users: Array<UserType>\r\n    setCurrentPage: (p: number) => void\r\n    setTotalUsersCount: (totalUsersCount: number) => void\r\n    setUsers: (res: string) => void\r\n    unfollow: (id: number) => void\r\n    follow: (id: number) => void\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: []\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n\r\n\r\n}\r\n/*export type UsersPropsType = UserType & PropsType*/\r\n\r\n// @ts-ignore\r\nclass UsersContainer extends React.Component<PropsType> {\r\n    state = {\r\n        search: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {currentPage,pageSize} = this.props\r\n        this.props.getUsers(currentPage,pageSize);\r\n\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const {pageSize} = this.props\r\n        this.props.getUsers(pageNumber,pageSize)\r\n\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ?\r\n                <Preloader/> : null}\r\n            <Users\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                unfollow={this.props.unfollow}\r\n                follow={this.props.follow}\r\n                currentPage={this.props.currentPage}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                followingInProgress={this.props.followingInProgress}\r\n\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        filter: state.usersPage.filter,\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        setFilter,\r\n        follow,\r\n        unfollow,\r\n        toggleFollowingProgress: toggleFollowingProgress,\r\n        getUsers: getUsersThunkCreator\r\n        // @ts-ignore\r\n    }))(UsersContainer);\r\n","import React, {ChangeEvent, useEffect, useState} from 'react';\r\n\r\n\r\ntype PropsType = {\r\n    status: string\r\n    updateStatus: (newStatus: string) => void\r\n}\r\ntype StateType = {\r\n    editMode: boolean\r\n    status: string\r\n}\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}> {props.status || \"-------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input\r\n                    autoFocus={true}\r\n                    onBlur={deactivateEditMode}\r\n                    onChange={onStatusChange}\r\n                    value={status}\r\n                />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n//TODO Form for status\r\n","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport {Preloader} from \"../../../common/preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusFunction\";\r\nimport userPhoto from \"../../../../assets/images/user.png\"\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    return (\r\n        <div className={s.descriptionBlock}>\r\n            <div>\r\n                <img src={profile.photos.large || userPhoto} alt='' className={s.mainPhoto}/>\r\n\r\n                <ProfileStatusWithHooks status={status}\r\n                                        updateStatus={updateStatus}/>\r\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://main-cdn.goods.ru/hlr-system/1722315217/600001112185b0.jpeg' alt=\"\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>Like </span>{props.likesCount}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Post;","import React, {RefObject} from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm, InjectedFormProps} from 'redux-form'\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElement = props.posts.map(p => <Post likesCount={p.likesCount} message={p.message}/>);\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <div>\r\n                <h3>My posts</h3>\r\n            </div>\r\n\r\n            <AddMyPostFormRedux onSubmit={onAddPost}/>\r\n\r\n            <div className={s.posts}>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nconst length10 = maxLengthCreator(10)\r\nconst AddMyPostForm = (props) => {\r\n    return (<form onSubmit={props.handleSubmit}>\r\n        <Field name=\"newPostText\" component={Textarea} validate={[required,length10]} placeholder={\"Post Message\"}/>\r\n        {/*<textarea\r\n            value={props.newPostText}\r\n            onChange={onPostChange}\r\n            ref={newPostElement}\r\n        />*/}\r\n        <div>{/**/}\r\n            <button>Add Post</button>\r\n            {/*<button onClick={onAddPost}>Add Post</button>*/}\r\n        </div>\r\n    </form>)\r\n}\r\n\r\nconst AddMyPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddMyPostForm)\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator } from \"../../../redux/profile-reduser\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps,)(MyPosts);\r\nexport type PostType = typeof MyPostsContainer;\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./MyPosts/ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                savePhoto={props.savePhoto}\r\n                isOwner={props.isOwner}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUsersProFile, savePhoto, updateStatus} from \"../../redux/profile-reduser\";\r\nimport {RouteComponentProps, withRouter} from \"react-router\";\r\nimport {compose} from \"redux\";\r\n\r\ntype pathParamsType = {\r\n    userId: string\r\n}\r\ntype mapStateToPropsType = {\r\n    profile: any\r\n    isAuth: boolean\r\n    status: string\r\n    authorizedUserId: string\r\n\r\n}\r\ntype mapDispatchPropsType = {\r\n    getUsersProFile: (userId: string) => void\r\n    getStatus: (userId: string) => void\r\n    updateStatus: (status: string) => void\r\n    savePhoto: (file:any) => void\r\n}\r\ntype OwnPropsType = mapStateToPropsType & mapDispatchPropsType\r\n\r\ntype PropsType = RouteComponentProps<pathParamsType> & OwnPropsType\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUsersProFile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<PropsType>, prevState: Readonly<{}>, snapshot?: any) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId)\r\n            this.refreshProfile();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         isOwner={!this.props.match.params.userId}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}\r\n                         savePhoto={this.props.savePhoto}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport type ProfileType = {\r\n    profile: {\r\n        aboutMe: string\r\n        contacts: {\r\n            facebook: string\r\n            website: null | string\r\n            vk: string\r\n            twitter: string\r\n            instagram: string\r\n            youtube: null | string\r\n            github: string\r\n            mainLink: null | string\r\n        },\r\n        lookingForAJob: boolean\r\n        lookingForAJobDescription: string\r\n        fullName: string\r\n        userId: number\r\n        photos: {\r\n            small: string\r\n            large: string\r\n        }\r\n    },\r\n    status: string,\r\n    authorizedUserId: string,\r\n    isAuth: boolean\r\n\r\n}\r\n\r\nlet mapStateToProps = (state): ProfileType => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getUsersProFile, getStatus, updateStatus, savePhoto}),\r\n    withRouter,\r\n    //withAuthRedirect\r\n)(ProfileContainer)\r\n","import {AppStateType} from \"./redux-store\";\r\n\r\nexport const selectAuth = (state:AppStateType) => {\r\n    return state.auth.isAuth\r\n}\r\nexport const selectCurrentUserLogin = (state:AppStateType) => {\r\n    return state.auth.login\r\n}\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Avatar, Button, Col, Layout, Menu, Row} from \"antd\";\r\nimport {UserOutlined} from \"@ant-design/icons\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {selectAuth, selectCurrentUserLogin} from \"../../redux/auth-Selectors\";\r\nimport {logout} from \"../../redux/auth-reduser\";\r\n\r\nexport type MapPropsType = {}\r\n\r\n\r\nexport const AppHeader: React.FC<MapPropsType> = (props) => {\r\n    const isAuth = useSelector<AppStateType>(selectAuth)\r\n    const login = useSelector<AppStateType>(selectCurrentUserLogin)\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutCallback = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    const {Header} = Layout;\r\n    return (<Header className=\"header\">\r\n        <div className=\"logo\"/>\r\n        <Row>\r\n            <Col span={18}>\r\n                <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\r\n                    <Menu.Item key=\"1\"><Link to=\"/developers\">Developers</Link></Menu.Item>\r\n                </Menu></Col>\r\n            {isAuth\r\n                ? <><Col span={1}>\r\n                    <Avatar alt={login && ''} style={{backgroundColor: '#87d068'}} icon={<UserOutlined/>}/>\r\n                </Col>\r\n                    <Col span={5}>\r\n                        <Button onClick={logoutCallback}>Log Out</Button>\r\n                    </Col>\r\n                </>\r\n                : <Col span={6}>\r\n                    <Button>\r\n                        <Link to={'/login'}>Login</Link>\r\n                    </Button>\r\n                </Col>}\r\n\r\n        </Row>\r\n    </Header>)\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<div>Loading...</div>}>\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    };\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {Link, Route} from 'react-router-dom'\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\n\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\n\r\nimport {InitializeApp, InitialStateType} from \"./redux/app-reduser\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport 'antd/dist/antd.css'\r\n\r\nimport {LaptopOutlined, NotificationOutlined, UserOutlined} from '@ant-design/icons';\r\nimport {Breadcrumb, Layout, Menu} from \"antd\";\r\nimport {AppHeader} from \"./components/Header/Header\";\r\nimport {withSuspense} from './hoc/withSuspense';\r\n\r\n//import LoginPage from \"./components/Login/Login\";\r\nconst LoginPage = React.lazy(() => import('./components/Login/Login'));\r\n\r\n//import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\n\r\nclass App extends React.Component<any, any> {\r\n    componentDidMount() {\r\n        this.props.InitializeApp()\r\n    }\r\n\r\n    render() {\r\n        /*if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }*/\r\n        const {SubMenu} = Menu;\r\n        const {Content, Footer, Sider} = Layout;\r\n        return (\r\n            <Layout>\r\n                <AppHeader/>\r\n                <Content style={{padding: '0 50px'}}>\r\n                    <Breadcrumb style={{margin: '16px 0'}}>\r\n                        <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                        <Breadcrumb.Item>List</Breadcrumb.Item>\r\n                        <Breadcrumb.Item>App</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                    <Layout className=\"site-layout-background\" style={{padding: '24px 0'}}>\r\n                        <Sider className=\"site-layout-background\" width={200}>\r\n                            <Menu\r\n                                mode=\"inline\"\r\n                                defaultSelectedKeys={['1']}\r\n                                defaultOpenKeys={['sub1']}\r\n                                style={{height: '100%'}}\r\n                            >\r\n                                <SubMenu key=\"sub1\" icon={<UserOutlined/>} title=\"My Profile\">\r\n                                    <Menu.Item key=\"1\"><Link to=\"/profile\">Profile</Link> </Menu.Item>\r\n                                    <Menu.Item key=\"2\"> <Link to=\"/dialogs\">Messages</Link></Menu.Item>\r\n\r\n                                </SubMenu>\r\n                                <SubMenu key=\"sub2\" icon={<LaptopOutlined/>} title=\"Developers\">\r\n                                    <Menu.Item key=\"5\"><Link to=\"/developers\">Users</Link></Menu.Item>\r\n                                    {/*<Menu.Item key=\"6\">option6</Menu.Item>\r\n                                    <Menu.Item key=\"7\">option7</Menu.Item>\r\n                                    <Menu.Item key=\"8\">option8</Menu.Item>*/}\r\n                                </SubMenu>\r\n                                <SubMenu key=\"sub3\" icon={<NotificationOutlined/>} title=\"subnav 3\">\r\n                                    <Menu.Item key=\"9\">option9</Menu.Item>\r\n                                    <Menu.Item key=\"10\">option10</Menu.Item>\r\n                                    <Menu.Item key=\"11\">option11</Menu.Item>\r\n                                    <Menu.Item key=\"12\">option12</Menu.Item>\r\n                                </SubMenu>\r\n                            </Menu>\r\n                        </Sider>\r\n                        <Content style={{padding: '0 24px', minHeight: 200}}>\r\n                            <Route path=\"/dialogs/\" render={withSuspense(DialogsContainer)}/>\r\n                            <Route path=\"/profile/:userId?\" render={() => <ProfileContainer/>}/>\r\n                            <Route path=\"/news/\" render={() => <News/>}/>\r\n                            <Route path=\"/music/\" render={() => <Music/>}/>\r\n                            <Route path=\"/settings/\" render={() => <Settings/>}/>\r\n                            <Route path=\"/developers/\" render={() => <UsersContainer/>}/>\r\n                            <Route path=\"/login/\" render={withSuspense(LoginPage)}/>\r\n                        </Content>\r\n                    </Layout>\r\n                </Content>\r\n                <Footer style={{textAlign: 'center'}}>©2021 Created by Petrov Konstantin</Footer>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: InitialStateType) => ({\r\n    initialized: state.initialized\r\n})\r\n\r\nexport default compose(connect(mapStateToProps, {InitializeApp}))(App);\r\n\r\n\r\n/*(\r\n\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className='app-wrapper-content'>\r\n                    <Route path=\"/dialogs/\" render={() => <DialogsContainer/>}/>\r\n                    <Route path=\"/profile/:userId?\" render={() => <ProfileContainer/>}/>\r\n                    <Route path=\"/news/\" render={() => <News/>}/>\r\n                    <Route path=\"/music/\" render={() => <Music/>}/>\r\n                    <Route path=\"/settings/\" render={() => <Settings/>}/>\r\n                    <Route path=\"/users/\" render={() => <UsersContainer/>}/>\r\n                    <Route path=\"/login/\" render={() => <LoginPage/>}/>\r\n\r\n                </div>\r\n            </div>\r\n        );*/\r\n","import React from 'react';\r\nimport './index.css';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './redux/redux-store'\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport App from \"./App\";\r\n\r\n\r\nReactDOM.render(\r\n    <HashRouter >\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </HashRouter>,\r\n    document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from 'redux-form';\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    id: null as string | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    captchaUrl: null as string | null\r\n\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst authReducer = (state = initialState, action: setAuthUserDataType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\nexport type setAuthUserDataType = ReturnType<typeof setAuthUserData>\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {id, login, email, isAuth}\r\n} as const)\r\nexport type getAuthUserData = ReturnType<typeof getAuthUserData>\r\n\r\nexport const getAuthUserData = () => async (dispatch: Dispatch) => {\r\n    let data = await authAPI.me()\r\n    if (data.resultCode === 0) {\r\n        let {id, login, email} = data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n};\r\nexport const logout = () => async (dispatch: Dispatch) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n};\r\n\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_control\":\"FormsControls_form_control__33ub9\",\"error\":\"FormsControls_error__LPNa2\",\"formSummaryError\":\"FormsControls_formSummaryError__27pn9\"};"],"sourceRoot":""}