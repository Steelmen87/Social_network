{"version":3,"sources":["components/Login/Login.tsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","redux_form__WEBPACK_IMPORTED_MODULE_1__","_common_FormsControls_FormsControls__WEBPACK_IMPORTED_MODULE_2__","_utils_validators_validators__WEBPACK_IMPORTED_MODULE_3__","react_redux__WEBPACK_IMPORTED_MODULE_4__","_redux_auth_reduser__WEBPACK_IMPORTED_MODULE_5__","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","_common_FormsControls_FormsControls_module_css__WEBPACK_IMPORTED_MODULE_7__","_common_FormsControls_FormsControls_module_css__WEBPACK_IMPORTED_MODULE_7___default","LoginReduxForm","reduxForm","form","_ref","handleSubmit","error","captchaUrl","a","createElement","onSubmit","createField","required","Input","type","undefined","src","alt","className","style","formSummaryError","connect","state","auth","isAuth","login","props","to","formData","email","password","rememberMe","captcha"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,IAAAQ,EAAAR,EAAA,KAAAS,EAAAT,EAAA,IAAAU,EAAAV,EAAA,IAAAW,EAAAX,EAAA,IAAAY,EAAAZ,EAAA,IAAAa,EAAAb,EAAAK,EAAAO,GAqCME,EAAiBC,YAAkD,CAACC,KAAM,SAAzDD,CAtBjB,SAAAE,GAAuC,IAArCC,EAAqCD,EAArCC,aAAcC,EAAuBF,EAAvBE,MAAOC,EAAgBH,EAAhBG,WACzB,OACIhB,EAAAiB,EAAAC,cAAA,QAAMC,SAAUL,GACXM,YAAY,QAAS,QAAS,CAACC,KAAWC,KAC1CF,YAAY,WAAY,WAAY,CAACC,KAAWC,IAAO,CAACC,KAAM,aAC9DH,iBAAYI,EAAW,aAAc,GAAIF,IAAO,CAACC,KAAM,YAAa,eAEnEP,GAAchB,EAAAiB,EAAAC,cAAA,OAAKO,IAAKT,EAAYU,IAAI,KACxCV,GAAeI,YAAY,qBAAsB,UAAW,CAACC,KAAWC,IAAO,IAGhFP,GAASf,EAAAiB,EAAAC,cAAA,OAAKS,UAAWC,IAAMC,kBAC3Bd,GAGLf,EAAAiB,EAAAC,cAAA,WACIlB,EAAAiB,EAAAC,cAAA,2BA2CDY,sBALS,SAACC,GAAD,MAA6C,CACjEf,WAAYe,EAAMC,KAAKhB,WACvBiB,OAAQF,EAAMC,KAAKC,SAGiB,CAACC,WAA1BJ,CAnBmD,SAACK,GAK/D,OAAIA,EAAMF,OACCjC,EAAAiB,EAAAC,cAACX,EAAA,EAAD,CAAU6B,GAAI,aAGlBpC,EAAAiB,EAAAC,cAAA,WACHlB,EAAAiB,EAAAC,cAAA,mBACAlB,EAAAiB,EAAAC,cAACR,EAAD,CAAgBS,SAVH,SAACkB,GACdF,EAAMD,MAAMG,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAYH,EAASI,UASzCzB,WAAYmB,EAAMnB","file":"static/js/4.4507880c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { reduxForm, InjectedFormProps} from 'redux-form'\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport { required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reduser\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from './../common/FormsControls/FormsControls.module.css'\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\ntype LoginFormOwnProps = {\r\n    captchaUrl: string | null\r\n}\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<LoginFormValuesType, LoginFormOwnProps> & LoginFormOwnProps>\r\n    = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", 'email', [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField(undefined, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n\r\n            { captchaUrl && <img src={captchaUrl} alt=\"\"/>}\r\n            { captchaUrl &&  createField(\"Symbols from image\", \"captcha\", [required], Input, {}) }\r\n\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<LoginFormValuesType, LoginFormOwnProps>({form: 'login'})(LoginForm)\r\n\r\ntype MapStatePropsType = {\r\n    captchaUrl: string | null\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchPropsType = {\r\n    login: (email: string, password: string, rememberMe: boolean, captcha: string) => void\r\n}\r\n\r\nexport type LoginFormValuesType = {\r\n    captcha: string\r\n    rememberMe: boolean\r\n    password: string\r\n    email: string\r\n}\r\n\r\n\r\nconst Login: React.FC<MapStatePropsType & MapDispatchPropsType> = (props) => {\r\n    const onSubmit = (formData: LoginFormValuesType) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n    </div>\r\n}\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);"],"sourceRoot":""}