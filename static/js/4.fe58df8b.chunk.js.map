{"version":3,"sources":["components/Login/Login.tsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","redux_form__WEBPACK_IMPORTED_MODULE_1__","redux_form__WEBPACK_IMPORTED_MODULE_2__","_common_FormsControls_FormsControls__WEBPACK_IMPORTED_MODULE_3__","_utils_validators_validators__WEBPACK_IMPORTED_MODULE_4__","react_redux__WEBPACK_IMPORTED_MODULE_5__","_redux_auth_reduser__WEBPACK_IMPORTED_MODULE_6__","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","_common_FormsControls_FormsControls_module_css__WEBPACK_IMPORTED_MODULE_8__","_common_FormsControls_FormsControls_module_css__WEBPACK_IMPORTED_MODULE_8___default","length","maxLengthCreator","LoginReduxForm","reduxForm","form","props","handleSubmit","error","a","createElement","onSubmit","name","component","Input","validate","required","placeholder","type","className","style","formSummaryError","connect","state","isAuth","auth","login","to","formData","password","rememberMe"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAAAQ,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,IAAAW,EAAAX,EAAA,IAAAY,EAAAZ,EAAA,IAAAa,EAAAb,EAAA,IAAAc,EAAAd,EAAAK,EAAAQ,GAgCME,EAASC,YAAiB,IAkB1BC,EAAiBC,YAAwB,CAC3CC,KAAM,SADaD,CAjBsC,SAACE,GAAU,IAC7DC,EAAsBD,EAAtBC,aAAaC,EAASF,EAATE,MAEpB,OACIlB,EAAAmB,EAAAC,cAAA,QAAMC,SAAUJ,GACZjB,EAAAmB,EAAAC,cAAA,WAAKpB,EAAAmB,EAAAC,cAAClB,EAAA,EAAD,CAAOoB,KAAK,QAAQC,UAAWC,IAAOC,SAAU,CAACC,IAAUf,GAASgB,YAAa,WACtF3B,EAAAmB,EAAAC,cAAA,WAAKpB,EAAAmB,EAAAC,cAAClB,EAAA,EAAD,CAAOoB,KAAK,WAAWC,UAAWC,IAAOC,SAAU,CAACC,IAAUf,GAASiB,KAAM,WACtED,YAAa,cACzB3B,EAAAmB,EAAAC,cAAA,WAAKpB,EAAAmB,EAAAC,cAAClB,EAAA,EAAD,CAAOoB,KAAK,aAAaC,UAAWC,IAAOI,KAAM,aAAtD,eACCV,GAASlB,EAAAmB,EAAAC,cAAA,OAAKS,UAAWC,IAAMC,kBAC3Bb,GAELlB,EAAAmB,EAAAC,cAAA,0BAoBGY,sBAJS,SAACC,GAAD,MAA6C,CACjEC,OAAQD,EAAME,KAAKD,SAGiB,CAACE,WAA1BJ,CArDmB,SAAChB,GAK/B,OAAIA,EAAMkB,OACClC,EAAAmB,EAAAC,cAACZ,EAAA,EAAD,CAAU6B,GAAI,aAGlBrC,EAAAmB,EAAAC,cAAA,WACHpB,EAAAmB,EAAAC,cAAA,mBACApB,EAAAmB,EAAAC,cAACP,EAAD,CAAgBQ,SAVL,SAACiB,GACZtB,EAAMoB,MAAME,EAASF,MAAOE,EAASC,SAAUD,EAASE","file":"static/js/4.fe58df8b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Field, reduxForm, InjectedFormProps} from 'redux-form'\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reduser\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from './../common/FormsControls/FormsControls.module.css'\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\ntype PropsType = mapStateToPropsType &mapDispatchToPropsType\r\n\r\nconst Login:React.FC<PropsType> = (props) => {\r\n    let onSubmit = (formData: FormDataType) => {\r\n        props.login(formData.login, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\ntype FormDataType = {\r\n    login: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\nconst length = maxLengthCreator(20)\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    const {handleSubmit,error} = props;\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div><Field name=\"login\" component={Input} validate={[required, length]} placeholder={\"Login\"}/></div>\r\n            <div><Field name=\"password\" component={Input} validate={[required, length]} type={\"password\"}\r\n                        placeholder={\"Password\"}/></div>\r\n            <div><Field name=\"rememberMe\" component={Input} type={\"checkbox\"}/>remember me</div>\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <button>Login</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType>({\r\n    form: 'login'\r\n})(LoginForm)\r\ntype mapStateToPropsType = {\r\n    isAuth:boolean\r\n}\r\ntype mapDispatchToPropsType = {\r\n    login:(email:string,\r\n    password:string,\r\n    rememberMe:boolean)=>void\r\n}\r\nconst mapStateToProps = (state:AppStateType):mapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);"],"sourceRoot":""}