{"version":3,"sources":["assets/images/user.png","components/Paginator/Paginator.module.css","components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Users/users.module.css","assets/images/Hourglass.gif","components/Profile/MyPosts/Post/Post.module.css","serviceWorker.tsx","redux/dialogs-reduser.tsx","redux/friends-reduser.tsx","api/api.ts","redux/profile-reduser.tsx","utils/object-helpers.js","redux/users-reduser.tsx","redux/auth-reduser.tsx","redux/app-reduser.tsx","redux/redux-store.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/common/FormsControls/FormsControls.tsx","utils/validators/validators.tsx","components/Dialogs/Dialogs.tsx","hoc/withAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx","components/Paginator/PaginatorX.tsx","components/Users/User.tsx","components/Users/Users.tsx","components/common/preloader/Preloader.tsx","redux/UserSelectors.ts","components/Users/UsersContainer.tsx","components/Profile/MyPosts/ProfileInfo/ProfileStatusFunction.tsx","components/Profile/MyPosts/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/Login/Login.tsx","redux/auth-Selectors.ts","components/Header/Header.tsx","App.tsx","index.tsx","components/Dialogs/Dialogs.module.css","components/common/FormsControls/FormsControls.module.css"],"names":["module","exports","__webpack_require__","p","userPhoto","selectedPage","pageNumber","wrap","item","img","descriptionBlock","mainPhoto","postsBlock","posts","Boolean","window","location","hostname","match","initialState","dialogs","id","name","messages","message","dialogsReducer","state","arguments","length","undefined","action","type","newMessage","newMessageText","Object","objectSpread2","concat","toConsumableArray","friendsReducer","instance","axios","create","withCredentials","baseURL","headers","API-KEY","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","profileAPI","getStatus","res","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","Content-Type","authAPI","email","password","rememberMe","likesCount","profile","setStatus","profileReducer","newPost","newPostText","photos","updateObjectInArray","items","itemsId","objPropName","newObjProps","map","u","filter","users","totalUsersCount","isFetching","followingInProgress","setFilter","followACSuccess","unfollowACSuccess","setCurrentPageAC","setIsFetchingAC","toggleFollowingProgress","followUnfollowFlow","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee2","dispatch","apiMethod","actionCreator","_context2","prev","next","sent","resultCode","stop","_x2","_x3","_x4","_x5","apply","this","usersReducer","followed","count","login","isAuth","captchaUrl","setAuthUserData","payload","getAuthUserData","_ref","_callee","_data$data","_login","_context","_x","authReducer","initialized","appReducer","rootReducer","combineReducers","dialogPage","friendPage","profilePage","usersPage","auth","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","News","props","react_default","createElement","className","s","Y","Music","Settings","DialogItem","path","dialog","src","alt","react_router_dom","to","Message","Textarea","input","_ref$meta","meta","touched","error","objectWithoutProperties","hasError","styles","form_control","assign","Input","_ref2$meta","required","value","maxLengthCreator","maxLength","DialogsFormRedux","reduxForm","onSubmit","handleSubmit","Field","component","validate","Dialogs","dialogsElement","d","Dialogs_DialogItem_DialogItem","messageElement","m","Dialogs_Message_Message","dialogsItems","values","onSendMessageClick","mapStateToPropsForRedirect","compose","connect","addAnswerActionCreator","Component","RedirectComponent","_React$Component","inherits","_super","createSuper","classCallCheck","createClass","key","react_router","React","Paginator","totalItemsCount","_ref$currentPage","_ref$onPageChanged","onPageChanged","x","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","_useState","useState","_useState2","slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","cn","paginator","onClick","defineProperty","e","User","search","indexOf","small","disabled","some","Users","useDispatch","setSearch","PaginatorX","placeholder","onChange","target","Users_User","Preloader","Hourglass","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","_this","_this$props","Fragment","Preloader_Preloader","components_Users_Users","_ref3","_callee3","_context3","bind","_x6","_ref4","_callee4","_context4","_x7","totalCount","ProfileStatusWithHooks","editMode","setEditMode","_useState3","_useState4","useEffect","onDoubleClick","autoFocus","onBlur","currentTarget","ProfileInfo","isOwner","large","ProfileStatusFunction","files","Post","length10","AddMyPostFormRedux","MyPosts","postsElement","MyPosts_Post_Post","addPost","MyPostsContainer","addPostActionCreator","Profile","MyPosts_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","params","authorizedUserId","history","getUsersProFile","refreshProfile","prevProps","prevState","snapshot","components_Profile_Profile","t0","file","withRouter","LoginReduxForm","style","formSummaryError","stopSubmit","_error","selectAuth","selectCurrentUserLogin","AppHeader","useSelector","Header","Layout","row","col","span","menu","theme","mode","defaultSelectedKeys","Item","avatar","backgroundColor","icon","UserOutlined","es_button","App","InitializeApp","SubMenu","Menu","Content","Footer","Sider","layout","Header_AppHeader","padding","breadcrumb","margin","width","defaultOpenKeys","height","title","LaptopOutlined","NotificationOutlined","minHeight","render","DialogsContainer","Profile_ProfileContainer","components_News_News","components_Music_Music","components_Settings_Settings","Users_UsersContainer","components_Login_Login","textAlign","ReactDOM","react_redux_es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","active","b","inputMar"],"mappings":"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","file":"static/js/main.2e1580e3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.8b1dbb1f.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Paginator_userPhoto__31CPu\",\"selectedPage\":\"Paginator_selectedPage__kDIOz\",\"pageNumber\":\"Paginator_pageNumber__16kt_\",\"wrap\":\"Paginator_wrap__3wmGu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProfileInfo_item__F6mB5\",\"img\":\"ProfileInfo_img__1lFDW\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2kwuZ\",\"mainPhoto\":\"ProfileInfo_mainPhoto__oLCOm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1jnKK\",\"posts\":\"MyPosts_posts__3UDMu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__3Hp-D\",\"selectedPage\":\"users_selectedPage__3exoP\"};","module.exports = __webpack_public_path__ + \"static/media/Hourglass.6921c9f6.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__Fqzfp\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: \"Dimych\"},\r\n        {id: 2, name: \"Andery\"},\r\n        {id: 3, name: \"Sveta\"},\r\n        {id: 4, name: \"Sasha\"},\r\n        {id: 5, name: \"Victor\"},\r\n        {id: 6, name: \"Valera\"},\r\n        {id: 7, name: \"Kos\"}\r\n    ] as Array<DialogType>,\r\n    messages: [\r\n        {id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"How is you\"},\r\n        {id: 3, message: \"Yo\"},\r\n        {id: 3, message: \"Yo\"},\r\n        {id: 4, message: \"Yo\"},\r\n        {id: 5, message: \"Yo\"},\r\n    ] as Array<MessageType>,\r\n\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\nconst dialogsReducer = (state = initialState, action: AddMessageActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n            let newMessage: MessageType = {\r\n                id: 6,\r\n                message: action.newMessageText\r\n            };\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage]\r\n            }\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport type AddMessageActionType = {\r\n    type: 'ADD-MESSAGE'\r\n    newMessageText: string\r\n}\r\nexport const addAnswerActionCreator = (newMessageText: string): AddMessageActionType =>\r\n    ({type: ADD_MESSAGE, newMessageText} as const)\r\n\r\nexport default dialogsReducer","type FriendsDialogsType =\r\n    {\r\n        id: number,\r\n        name: string\r\n    }\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: \"Dimych\"},\r\n        {id: 2, name: \"Andery\"},\r\n        {id: 3, name: \"Sveta\"},\r\n        {id: 4, name: \"Sasha\"},\r\n        {id: 5, name: \"Victor\"},\r\n        {id: 6, name: \"Valera\"},\r\n        {id: 7, name: \"Kos\"}\r\n    ] as Array<FriendsDialogsType>\r\n}\r\ntype initialStateType = typeof initialState\r\nconst friendsReducer = (state = initialState, action): initialStateType => {\r\n    return {...state}\r\n}\r\nexport default friendsReducer;","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        \"API-KEY\": \"4e5aee81-42dd-43de-87fa-a601a9c1e88b\"\r\n\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    /*getAuth() {\r\n        return instance.get(`auth/me`)\r\n            .then(data => data.data);\r\n    },*/\r\n    getProfile(userId: number) {\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n\r\n}\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get(`profile/` + userId)\r\n            .then(data => data.data);\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get(`profile/status/` + userId)\r\n            .then(res => res.data);\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put(`profile/status`, {status: status})\r\n            .then(res => res.data);\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile)\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    }\r\n}\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n            .then(data => data.data);\r\n    },\r\n    login(email: string, password: string, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\n\r\n","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst SAVE_PHOTO = 'SAVE_PHOTO';\r\n\r\nexport type AddPostActionType = {\r\n    type: 'ADD-POST',\r\n    newPostText: string\r\n}\r\nexport type UpDateNewPostActionType = {\r\n    type: 'UPDATE-NEW-POST-TEXT'\r\n    newText: string\r\n}\r\nexport type AddMessageActionType = {\r\n    type: 'ADD-MESSAGE'\r\n    newMessageText: string\r\n}\r\nexport type UpDateMessageActionType = {\r\n    type: 'UPDATE-MESSAGE-TEXT'\r\n    newTextMessage: string\r\n}\r\nexport type ActionsTypes =\r\n    savePhotoSuccessType\r\n    | AddPostActionType\r\n    | UpDateNewPostActionType\r\n    | AddMessageActionType\r\n    | UpDateMessageActionType\r\nexport type TYPESALLACTION = ActionsTypes | SetUserProfileActionType | setStatusType\r\nexport type PostType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\nexport type ContactsType = {\r\n    github: string\r\n    vk: string\r\n    facebook: string\r\n    instagram: string\r\n    twitter: string\r\n    website: string\r\n    youtube: string\r\n    mainLink: string\r\n}\r\nexport type PhotosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\nexport type ProfileType = {\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    contacts: ContactsType\r\n    photos: PhotosType\r\n}\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: \"Hi how are you?\", likesCount: 5},\r\n        {id: 2, message: \"It is my First post!\", likesCount: 23},\r\n        {id: 3, message: \"BlaBla\", likesCount: 65},\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n\r\n};\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst profileReducer = (state: InitialStateType = initialState, action: TYPESALLACTION): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        case \"SAVE_PHOTO\": {\r\n            return {...state, profile: {...state.profile, photos: action.photos} as ProfileType}\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText: string): AddPostActionType => ({type: ADD_POST, newPostText})\r\n\r\ntype SetUserProfileActionType = {\r\n    type: typeof SET_USER_PROFILE\r\n    profile: ProfileType\r\n}\r\nexport const setUserProfile = (profile: ProfileType): SetUserProfileActionType => ({type: SET_USER_PROFILE, profile})\r\nexport type setStatusType = {\r\n    type: typeof SET_STATUS\r\n    status: string\r\n}\r\nexport const savePhotoSuccess = (photos: PhotosType): savePhotoSuccessType => ({type: SAVE_PHOTO, photos} as const)\r\nexport type savePhotoSuccessType = {\r\n    type: typeof SAVE_PHOTO\r\n    photos: PhotosType\r\n}\r\nexport const setStatus = (status: string): setStatusType =>\r\n    ({type: SET_STATUS, status: status})\r\n\r\nexport const getUsersProFile = (userId: number) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response));\r\n}\r\nexport const getStatus = (userId: number) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response));\r\n}\r\nexport const updateStatus = (status: string) => async (dispatch) => {\r\n    try {\r\n        let response = await profileAPI.updateStatus(status);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    } catch (error) {\r\n        //\r\n    }\r\n}\r\nexport const savePhoto = (file) => async (dispatch: any) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\n\r\nexport default profileReducer;","export const updateObjectInArray = (items, itemsId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemsId) {\r\n            return {...u, ...newObjProps};\r\n        }\r\n        return u;\r\n    });\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW-POST';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_FILTER = 'SET_FILTER';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nexport type UserType = {\r\n    id: number,\r\n    name: string,\r\n    status: string,\r\n    photos: { small: string, large: string },\r\n    followed: boolean\r\n}\r\n\r\nlet initialState = {\r\n    filter: '',\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n\r\n}\r\n\r\nexport type InitialState = typeof initialState\r\n\r\nconst usersReducer = (state: InitialState = initialState, action: ActionType): InitialState => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n                /*state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true};\r\n                    }\r\n                    return u;\r\n                })*/\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n                /*state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false};\r\n                    }\r\n                    return u;\r\n                })*/\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_FILTER: {\r\n            return {...state, filter: action.filter}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n\r\n            return {\r\n                ...state,\r\n                //@ts-ignore\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\ntype ActionType =\r\n    followACSuccessType\r\n    | unfollowACSuccessType\r\n    | setUsersACType\r\n    | setCurrentPageACType\r\n    | setUsersTotalCountACType\r\n    | setIsFetchingACType\r\n    | toggleFollowingProgressType\r\n    | setFilterType\r\n\r\nexport const setFilter = (filter: string) => ({type: SET_FILTER, filter} as const)\r\ntype setFilterType = ReturnType<typeof setFilter>\r\n\r\nexport const followACSuccess = (userId: number) => ({type: FOLLOW, userId} as const)\r\ntype followACSuccessType = ReturnType<typeof followACSuccess>\r\n\r\nexport const unfollowACSuccess = (userId: number) => ({type: UNFOLLOW, userId} as const)\r\ntype unfollowACSuccessType = ReturnType<typeof unfollowACSuccess>\r\n\r\nexport const setUsersAC = (users: Array<UserType>) => ({type: SET_USERS, users} as const)\r\ntype setUsersACType = ReturnType<typeof setUsersAC>\r\n\r\nexport const setCurrentPageAC = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage} as const)\r\ntype setCurrentPageACType = ReturnType<typeof setCurrentPageAC>\r\n\r\nexport const setUsersTotalCountAC = (totalUsersCount: number) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    count: totalUsersCount\r\n} as const)\r\ntype setUsersTotalCountACType = ReturnType<typeof setUsersTotalCountAC>\r\n\r\nexport const setIsFetchingAC = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching} as const)\r\ntype setIsFetchingACType = ReturnType<typeof setIsFetchingAC>\r\n\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n} as const)\r\ntype toggleFollowingProgressType = ReturnType<typeof toggleFollowingProgress>\r\n//-----------------------------------------------------------\r\n/*\r\ntype DispatchType = Dispatch<ActionType>\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionType>\r\n*/\r\n//_________________________________________________________________\r\n\r\n\r\n//_________________________________________________________________\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(setIsFetchingAC(true));\r\n    dispatch(setCurrentPageAC(currentPage))\r\n    let data = await usersAPI.getUsers(currentPage, pageSize)\r\n    dispatch(setIsFetchingAC(false));\r\n    dispatch(setUsersAC(data.items));\r\n    dispatch(setUsersTotalCountAC(data.totalCount));\r\n    dispatch(setCurrentPageAC(currentPage))\r\n}\r\n\r\n\r\nconst followUnfollowFlow = async(dispatch,userId,apiMethod,actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId: number) => async (dispatch: Dispatch) => {\r\n    let apiMethod = usersAPI.follow.bind(usersAPI);\r\n    let actionCreator = followACSuccess;\r\n    followUnfollowFlow(dispatch,userId,apiMethod,actionCreator)\r\n}\r\nexport const unfollow = (userId) => async (dispatch: Dispatch) => {\r\n    let apiMethod = usersAPI.unfollow.bind(usersAPI);\r\n    let actionCreator = unfollowACSuccess;\r\n    followUnfollowFlow(dispatch,userId,apiMethod,actionCreator)\r\n}\r\n\r\n\r\nexport default usersReducer;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from 'redux-form';\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    id: null as string | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    captchaUrl: null as string | null\r\n\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst authReducer = (state = initialState, action: setAuthUserDataType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\nexport type setAuthUserDataType = ReturnType<typeof setAuthUserData>\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {id, login, email, isAuth}\r\n} as const)\r\nexport type getAuthUserData = ReturnType<typeof getAuthUserData>\r\n\r\nexport const getAuthUserData = () => async (dispatch: Dispatch) => {\r\n    let data = await authAPI.me()\r\n    if (data.resultCode === 0) {\r\n        let {id, login, email} = data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n};\r\nexport const logout = () => async (dispatch: Dispatch) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n};\r\n\r\nexport default authReducer;","import {getAuthUserData} from \"./auth-reduser\";\r\n\r\nconst SET_INITIALIZED_SUCCESS = 'SET_INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst appReducer = (state = initialState, action: initializedType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\nexport type initializedType = ReturnType<typeof InitializedSuccess>\r\n\r\nexport const InitializedSuccess = () => ({\r\n    type: SET_INITIALIZED_SUCCESS\r\n} as const)\r\n\r\nexport const InitializeApp = () => async (dispatch: any) => {\r\n    let promise = await dispatch(getAuthUserData())\r\n    dispatch(InitializedSuccess())\r\n}\r\n\r\nexport default appReducer;","import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport dialogsReducer from \"./dialogs-reduser\";\r\nimport friendsReducer from \"./friends-reduser\";\r\nimport profileReducer from \"./profile-reduser\";\r\nimport usersReducer from \"./users-reduser\";\r\nimport authReducer from \"./auth-reduser\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./app-reduser\";\r\n\r\nlet rootReducer = combineReducers({\r\n    dialogPage: dialogsReducer,\r\n    friendPage: friendsReducer,\r\n    profilePage: profileReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app:appReducer\r\n})\r\n\r\nexport type ActionsTypes = {\r\n\r\n}\r\ntype PropertiesType<T> = T extends {[key:string]:infer U} ? U : never\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nlet store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n//@ts-ignore\r\nwindow.store = store;\r\nexport default store;","import React from \"react\";\r\nimport s from './News.module.css'\r\nconst News = (props) => {\r\n    return(\r\n        <div className={s.Y}>\r\n            News\r\n        </div>\r\n    )\r\n}\r\nexport default News;","import React from \"react\";\r\nimport s from './Music.module.css'\r\nconst Music = (props) => {\r\n    return(\r\n        <div className={s.Y}>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\nexport default Music;","import React from \"react\";\r\nimport s from './Settings.module.css'\r\nconst Settings = (props) => {\r\n    return(\r\n        <div className={s.Y}>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\nexport default Settings;","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './../Dialogs.module.css'\r\n\r\ntype DialogItemType = {\r\n    id:Number\r\n    name:string\r\n}\r\nconst DialogItem:React.FC<DialogItemType> = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.dialog}>\r\n            <img src='https://main-cdn.goods.ru/hlr-system/1722315217/600001112185b0.jpeg' alt=\"\"/>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\n\r\ntype PropsMessageType = {\r\n    message:string\r\n}\r\nconst Message:React.FC<PropsMessageType> = (props) => {\r\n    return <div className={s.message}>{props.message}</div>\r\n}\r\nexport default Message;\r\n","import React from \"react\";\r\nimport styles from './FormsControls.module.css'\r\n\r\nexport const Textarea = ({input, meta:{touched,error}, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (<div className={styles.form_control + ' ' + (hasError ? styles.error : \"\")}>\r\n        <div><textarea {...input} {...props}/></div>\r\n        {hasError && <span>{error}</span>}\r\n    </div>)\r\n}\r\n\r\nexport const Input = ({input, meta:{touched,error}, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (<div className={styles.form_control + ' ' + (hasError ? styles.error : \"\")}>\r\n        <div><input {...input} {...props}/></div>\r\n        {hasError && <span>{error}</span>}\r\n    </div>)\r\n}\r\n","import React from 'react'\r\n\r\nexport const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {DialogType, MessageType} from \"../../redux/dialogs-reduser\";\r\n\r\ntype DialogProps = {\r\n    onSendMessageClick: (newMessageText: string) => void\r\n    dialogPage: {\r\n        dialogs: Array<DialogType>\r\n        messages: Array<MessageType>\r\n    }\r\n}\r\n\r\n\r\nconst Dialogs: React.FC<DialogProps> = (props) => {\r\n    let state = props.dialogPage\r\n\r\n    let dialogsElement = state.dialogs.map(d => <DialogItem name={d.name} id={d.id}/>);\r\n\r\n    let messageElement = state.messages.map(m => <Message message={m.message}/>);\r\n\r\n    let onSendMessageClick = (values) => {\r\n        props.onSendMessageClick(values.newMessageText);\r\n\r\n    }\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messageElement}\r\n            </div>\r\n            <DialogsFormRedux onSubmit={onSendMessageClick}/>\r\n        </div>\r\n    )\r\n}\r\nconst length = maxLengthCreator(12)\r\nconst DialogsForm = (props) => {\r\n    return (<form onSubmit={props.handleSubmit}>\r\n            <Field\r\n                name=\"newMessageText\"\r\n                component={Textarea}\r\n                validate={[required, length]}/>\r\n            <button>add message</button>\r\n        </form>\r\n    )\r\n}\r\nconst DialogsFormRedux = reduxForm({form: \"DialogMessageTextForm\"})(DialogsForm);\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component<any, any> {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n","\r\nimport {addAnswerActionCreator, DialogType} from \"../../redux/dialogs-reduser\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose, Dispatch,} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogPage: state.dialogPage,\r\n        newMessageText: state.dialogPage.newMessageText\r\n    }\r\n}\r\n//export type mapStateToProps = typeof mapStateToProps\r\nexport type mapDispatchToProps = ReturnType<typeof mapDispatchToProps>\r\n\r\nlet mapDispatchToProps = (dispatch:Dispatch) => {\r\n    return {\r\n        onSendMessageClick: (newMessageText:string) => {\r\n            dispatch(addAnswerActionCreator(newMessageText))\r\n\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);","import React, {useState} from 'react'\r\nimport styles from './Paginator.module.css'\r\nimport cn from 'classnames'\r\n\r\ntype PropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage?: number\r\n    onPageChanged?: (pageNumber: number) => void\r\n    portionSize?: number\r\n}\r\n\r\nlet Paginator: React.FC<PropsType> = ({totalItemsCount, pageSize,\r\n                                          currentPage = 1,\r\n                                          onPageChanged = x => x,\r\n                                          portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages: Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={cn(styles.paginator)}>\r\n        { portionNumber > 1 &&\r\n            <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React, {useState} from 'react'\r\nimport styles from \"./users.module.css\"\r\nimport userPhoto from '../../assets/images/user.png'\r\nimport {NavLink} from 'react-router-dom';\r\nimport {UserType} from \"../../redux/users-reduser\";\r\n\r\n\r\ntype PropsType = {\r\n    users: Array<UserType>\r\n    unfollow: (id: number) => void\r\n    followingInProgress: Array<number>\r\n    follow: (id: number) => void\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => void\r\n}\r\n\r\nlet User: React.FC<PropsType> = (props) => {\r\n    const [search, setSearch] = useState('')\r\n\r\n    return <div>\r\n        {\r\n            props.users\r\n                .filter(u => u.name.indexOf(search) > -1)\r\n                .map(u => <div key={u.id}>\r\n                <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + u.id}>\r\n                <img src={u.photos.small != null ? u.photos.small : userPhoto} className={styles.userPhoto}\r\n                     alt=\"\"/>\r\n                     </NavLink>\r\n            </div>\r\n            <div>\r\n        {u.followed\r\n            ? <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                props.unfollow(u.id)\r\n            }}>Unfollow</button>\r\n            : <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                props.follow(u.id)\r\n            }}>Follow</button>}\r\n            </div>\r\n            </span><span>\r\n            <span>\r\n            <div>{u.name}</div>\r\n            <div>{u.status}</div>\r\n            </span>\r\n            <span>\r\n            <div>{\"u.location.country\"}</div>\r\n            <div>{\"u.location.city\"}</div>\r\n            </span>\r\n            </span>\r\n                </div>)\r\n        }\r\n    </div>\r\n}\r\nexport default User;","import React, {useState} from 'react'\r\nimport {setFilter, UserType} from \"../../redux/users-reduser\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport PaginatorX from \"../Paginator/PaginatorX\";\r\nimport User from \"./User\";\r\n\r\ntype PropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (p: number) => void\r\n    users: Array<UserType>\r\n    unfollow: (id: number) => void\r\n    followingInProgress: Array<number>\r\n    follow: (id: number) => void\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => void\r\n}\r\n\r\nlet Users: React.FC<PropsType> = (props) => {\r\n    let {totalUsersCount, pageSize, currentPage, onPageChanged} = props\r\n    let dispatch = useDispatch()\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n    let pages: number[] = [];\r\n    for (let i: number = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    const [search, setSearch] = useState('')\r\n\r\n    const onSearchChange = (e) => {\r\n        setSearch(e.target.value)\r\n        dispatch(setFilter(search))\r\n    }\r\n\r\n\r\n    return <div>\r\n        <PaginatorX\r\n            totalItemsCount={totalUsersCount}\r\n            pageSize={pageSize}\r\n            currentPage={currentPage}\r\n            onPageChanged={onPageChanged}\r\n        />\r\n        <input placeholder={\"search\"} value={search} onChange={onSearchChange}/>\r\n        <div><strong>Total Users Count: {totalUsersCount}</strong></div>\r\n\r\n        <User {...props}/>\r\n    </div>\r\n}\r\nexport default Users;","import React from 'react'\r\nimport Hourglass from \"../../../assets/images/Hourglass.gif\";\r\n\r\nexport let Preloader = (props) => {\r\n    return <div>\r\n        <img src={Hourglass} alt=\"\"/>\r\n    </div>\r\n}","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n        return users.filter(u => true)\r\n    }\r\n)\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import {connect} from \"react-redux\";\r\nimport {\r\n    getUsersThunkCreator,\r\n    follow, unfollow, toggleFollowingProgress, setFilter\r\n} from \"../../redux/users-reduser\";\r\nimport React from \"react\";\r\nimport Users from \"./Users\";\r\nimport {Preloader} from \"../common/preloader/Preloader\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getPageSize,\r\n    getUsers,\r\n    getTotalUsersCount,\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getFollowingInProgress\r\n} from \"../../redux/UserSelectors\";\r\n\r\ntype UserType = {\r\n    id: number,\r\n    name: string,\r\n    status: string,\r\n    photos: { small: string, large: string },\r\n    followed: boolean,\r\n    onPageChanged: (pageNumber: number) => void\r\n}\r\n\r\ntype PropsType = {\r\n    setFilter: (filter: string) => void\r\n    toggleIsFetching: (isFetching: boolean) => void\r\n    toggleFollowingProgress: (isFetching: boolean) => void\r\n    users: Array<UserType>\r\n    setCurrentPage: (p: number) => void\r\n    setTotalUsersCount: (totalUsersCount: number) => void\r\n    setUsers: (res: string) => void\r\n    unfollow: (id: number) => void\r\n    follow: (id: number) => void\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: []\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n\r\n\r\n}\r\n/*export type UsersPropsType = UserType & PropsType*/\r\n\r\n// @ts-ignore\r\nclass UsersContainer extends React.Component<PropsType> {\r\n    state = {\r\n        search: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {currentPage,pageSize} = this.props\r\n        this.props.getUsers(currentPage,pageSize);\r\n\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const {pageSize} = this.props\r\n        this.props.getUsers(pageNumber,pageSize)\r\n\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ?\r\n                <Preloader/> : null}\r\n            <Users\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                unfollow={this.props.unfollow}\r\n                follow={this.props.follow}\r\n                currentPage={this.props.currentPage}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                followingInProgress={this.props.followingInProgress}\r\n\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        filter: state.usersPage.filter,\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        setFilter,\r\n        follow,\r\n        unfollow,\r\n        toggleFollowingProgress: toggleFollowingProgress,\r\n        getUsers: getUsersThunkCreator\r\n        // @ts-ignore\r\n    }))(UsersContainer);\r\n","import React, {ChangeEvent, useEffect, useState} from 'react';\r\n\r\n\r\ntype PropsType = {\r\n    status: string\r\n    updateStatus: (newStatus: string) => void\r\n}\r\ntype StateType = {\r\n    editMode: boolean\r\n    status: string\r\n}\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}> {props.status || \"-------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input\r\n                    autoFocus={true}\r\n                    onBlur={deactivateEditMode}\r\n                    onChange={onStatusChange}\r\n                    value={status}\r\n                />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n//TODO Form for status\r\n","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport {Preloader} from \"../../../common/preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusFunction\";\r\nimport userPhoto from \"../../../../assets/images/user.png\"\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    return (\r\n        <div className={s.descriptionBlock}>\r\n            <div>\r\n                <img src={profile.photos.large || userPhoto} alt='' className={s.mainPhoto}/>\r\n\r\n                <ProfileStatusWithHooks status={status}\r\n                                        updateStatus={updateStatus}/>\r\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://main-cdn.goods.ru/hlr-system/1722315217/600001112185b0.jpeg' alt=\"\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>Like </span>{props.likesCount}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Post;","import React, {RefObject} from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm, InjectedFormProps} from 'redux-form'\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElement = props.posts.map(p => <Post likesCount={p.likesCount} message={p.message}/>);\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <div>\r\n                <h3>My posts</h3>\r\n            </div>\r\n\r\n            <AddMyPostFormRedux onSubmit={onAddPost}/>\r\n\r\n            <div className={s.posts}>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nconst length10 = maxLengthCreator(10)\r\nconst AddMyPostForm = (props) => {\r\n    return (<form onSubmit={props.handleSubmit}>\r\n        <Field name=\"newPostText\" component={Textarea} validate={[required,length10]} placeholder={\"Post Message\"}/>\r\n        {/*<textarea\r\n            value={props.newPostText}\r\n            onChange={onPostChange}\r\n            ref={newPostElement}\r\n        />*/}\r\n        <div>{/**/}\r\n            <button>Add Post</button>\r\n            {/*<button onClick={onAddPost}>Add Post</button>*/}\r\n        </div>\r\n    </form>)\r\n}\r\n\r\nconst AddMyPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddMyPostForm)\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator } from \"../../../redux/profile-reduser\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps,)(MyPosts);\r\nexport type PostType = typeof MyPostsContainer;\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./MyPosts/ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                savePhoto={props.savePhoto}\r\n                isOwner={props.isOwner}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUsersProFile, savePhoto, updateStatus} from \"../../redux/profile-reduser\";\r\nimport {RouteComponentProps, withRouter} from \"react-router\";\r\nimport {compose} from \"redux\";\r\n\r\ntype pathParamsType = {\r\n    userId: string\r\n}\r\ntype mapStateToPropsType = {\r\n    profile: any\r\n    isAuth: boolean\r\n    status: string\r\n    authorizedUserId: string\r\n\r\n}\r\ntype mapDispatchPropsType = {\r\n    getUsersProFile: (userId: string) => void\r\n    getStatus: (userId: string) => void\r\n    updateStatus: (status: string) => void\r\n    savePhoto: (file:any) => void\r\n}\r\ntype OwnPropsType = mapStateToPropsType & mapDispatchPropsType\r\n\r\ntype PropsType = RouteComponentProps<pathParamsType> & OwnPropsType\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUsersProFile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<PropsType>, prevState: Readonly<{}>, snapshot?: any) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId)\r\n            this.refreshProfile();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         isOwner={!this.props.match.params.userId}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}\r\n                         savePhoto={this.props.savePhoto}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport type ProfileType = {\r\n    profile: {\r\n        aboutMe: string\r\n        contacts: {\r\n            facebook: string\r\n            website: null | string\r\n            vk: string\r\n            twitter: string\r\n            instagram: string\r\n            youtube: null | string\r\n            github: string\r\n            mainLink: null | string\r\n        },\r\n        lookingForAJob: boolean\r\n        lookingForAJobDescription: string\r\n        fullName: string\r\n        userId: number\r\n        photos: {\r\n            small: string\r\n            large: string\r\n        }\r\n    },\r\n    status: string,\r\n    authorizedUserId: string,\r\n    isAuth: boolean\r\n\r\n}\r\n\r\nlet mapStateToProps = (state): ProfileType => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getUsersProFile, getStatus, updateStatus, savePhoto}),\r\n    withRouter,\r\n    //withAuthRedirect\r\n)(ProfileContainer)\r\n","import React from \"react\";\r\nimport {Field, reduxForm, InjectedFormProps} from 'redux-form'\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reduser\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from './../common/FormsControls/FormsControls.module.css'\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\ntype PropsType = mapStateToPropsType &mapDispatchToPropsType\r\n\r\nconst Login:React.FC<PropsType> = (props) => {\r\n    let onSubmit = (formData: FormDataType) => {\r\n        props.login(formData.login, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\ntype FormDataType = {\r\n    login: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\nconst length = maxLengthCreator(20)\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    const {handleSubmit,error} = props;\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div><Field name=\"login\" component={Input} validate={[required, length]} placeholder={\"Login\"}/></div>\r\n            <div><Field name=\"password\" component={Input} validate={[required, length]} type={\"password\"}\r\n                        placeholder={\"Password\"}/></div>\r\n            <div><Field name=\"rememberMe\" component={Input} type={\"checkbox\"}/>remember me</div>\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <button>Login</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType>({\r\n    form: 'login'\r\n})(LoginForm)\r\ntype mapStateToPropsType = {\r\n    isAuth:boolean\r\n}\r\ntype mapDispatchToPropsType = {\r\n    login:(email:string,\r\n    password:string,\r\n    rememberMe:boolean)=>void\r\n}\r\nconst mapStateToProps = (state:AppStateType):mapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {AppStateType} from \"./redux-store\";\r\n\r\nexport const selectAuth = (state:AppStateType) => {\r\n    return state.auth.isAuth\r\n}\r\nexport const selectCurrentUserLogin = (state:AppStateType) => {\r\n    return state.auth.login\r\n}\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Avatar, Button, Col, Layout, Menu, Row} from \"antd\";\r\nimport {UserOutlined} from \"@ant-design/icons\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {selectAuth, selectCurrentUserLogin} from \"../../redux/auth-Selectors\";\r\nimport {logout} from \"../../redux/auth-reduser\";\r\n\r\nexport type MapPropsType = {}\r\n\r\n\r\nexport const AppHeader: React.FC<MapPropsType> = (props) => {\r\n    const isAuth = useSelector<AppStateType>(selectAuth)\r\n    const login = useSelector<AppStateType>(selectCurrentUserLogin)\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutCallback = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    const {Header} = Layout;\r\n    return (<Header className=\"header\">\r\n        <div className=\"logo\"/>\r\n        <Row>\r\n            <Col span={18}>\r\n                <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\r\n                    <Menu.Item key=\"1\"><Link to=\"/developers\">Developers</Link></Menu.Item>\r\n                </Menu></Col>\r\n            {isAuth\r\n                ? <><Col span={1}>\r\n                    <Avatar alt={login && ''} style={{backgroundColor: '#87d068'}} icon={<UserOutlined/>}/>\r\n                </Col>\r\n                    <Col span={5}>\r\n                        <Button onClick={logoutCallback}>Log Out</Button>\r\n                    </Col>\r\n                </>\r\n                : <Col span={6}>\r\n                    <Button>\r\n                        <Link to={'/login'}>Login</Link>\r\n                    </Button>\r\n                </Col>}\r\n\r\n        </Row>\r\n    </Header>)\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {Link, Route} from 'react-router-dom'\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport {InitializeApp, InitialStateType} from \"./redux/app-reduser\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport 'antd/dist/antd.css'\r\n\r\nimport {LaptopOutlined, NotificationOutlined, UserOutlined} from '@ant-design/icons';\r\nimport {Breadcrumb, Layout, Menu} from \"antd\";\r\nimport {AppHeader} from \"./components/Header/Header\";\r\n\r\nclass App extends React.Component<any, any> {\r\n    componentDidMount() {\r\n        this.props.InitializeApp()\r\n    }\r\n\r\n    render() {\r\n        /*if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }*/\r\n        const {SubMenu} = Menu;\r\n        const { Content, Footer, Sider} = Layout;\r\n        return (\r\n            <Layout>\r\n                <AppHeader />\r\n                <Content style={{padding: '0 50px'}}>\r\n                    <Breadcrumb style={{margin: '16px 0'}}>\r\n                        <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                        <Breadcrumb.Item>List</Breadcrumb.Item>\r\n                        <Breadcrumb.Item>App</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                    <Layout className=\"site-layout-background\" style={{padding: '24px 0'}}>\r\n                        <Sider className=\"site-layout-background\" width={200}>\r\n                            <Menu\r\n                                mode=\"inline\"\r\n                                defaultSelectedKeys={['1']}\r\n                                defaultOpenKeys={['sub1']}\r\n                                style={{height: '100%'}}\r\n                            >\r\n                                <SubMenu key=\"sub1\" icon={<UserOutlined/>} title=\"My Profile\">\r\n                                    <Menu.Item key=\"1\"><Link to=\"/profile\">Profile</Link> </Menu.Item>\r\n                                    <Menu.Item key=\"2\"> <Link to=\"/dialogs\">Messages</Link></Menu.Item>\r\n                                    <Menu.Item key=\"3\">option3</Menu.Item>\r\n                                </SubMenu>\r\n                                <SubMenu key=\"sub2\" icon={<LaptopOutlined/>} title=\"Developers\">\r\n                                    <Menu.Item key=\"5\"><Link to=\"/developers\">Users</Link></Menu.Item>\r\n                                    <Menu.Item key=\"6\">option6</Menu.Item>\r\n                                    <Menu.Item key=\"7\">option7</Menu.Item>\r\n                                    <Menu.Item key=\"8\">option8</Menu.Item>\r\n                                </SubMenu>\r\n                                <SubMenu key=\"sub3\" icon={<NotificationOutlined/>} title=\"subnav 3\">\r\n                                    <Menu.Item key=\"9\">option9</Menu.Item>\r\n                                    <Menu.Item key=\"10\">option10</Menu.Item>\r\n                                    <Menu.Item key=\"11\">option11</Menu.Item>\r\n                                    <Menu.Item key=\"12\">option12</Menu.Item>\r\n                                </SubMenu>\r\n                            </Menu>\r\n                        </Sider>\r\n                        <Content style={{padding: '0 24px', minHeight: 280}}>\r\n                            <Route path=\"/dialogs/\" render={() => <DialogsContainer/>}/>\r\n                            <Route path=\"/profile/:userId?\" render={() => <ProfileContainer/>}/>\r\n                            <Route path=\"/news/\" render={() => <News/>}/>\r\n                            <Route path=\"/music/\" render={() => <Music/>}/>\r\n                            <Route path=\"/settings/\" render={() => <Settings/>}/>\r\n                            <Route path=\"/developers/\" render={() => <UsersContainer/>}/>\r\n                            <Route path=\"/login/\" render={() => <LoginPage/>}/>\r\n                        </Content>\r\n                    </Layout>\r\n                </Content>\r\n                <Footer style={{textAlign: 'center'}}>©2021 Created by Petrov Konstantin</Footer>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: InitialStateType) => ({\r\n    initialized: state.initialized\r\n})\r\n\r\nexport default compose(connect(mapStateToProps, {InitializeApp}))(App);\r\n\r\n\r\n/*(\r\n\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className='app-wrapper-content'>\r\n                    <Route path=\"/dialogs/\" render={() => <DialogsContainer/>}/>\r\n                    <Route path=\"/profile/:userId?\" render={() => <ProfileContainer/>}/>\r\n                    <Route path=\"/news/\" render={() => <News/>}/>\r\n                    <Route path=\"/music/\" render={() => <Music/>}/>\r\n                    <Route path=\"/settings/\" render={() => <Settings/>}/>\r\n                    <Route path=\"/users/\" render={() => <UsersContainer/>}/>\r\n                    <Route path=\"/login/\" render={() => <LoginPage/>}/>\r\n\r\n                </div>\r\n            </div>\r\n        );*/\r\n","import React from 'react';\r\nimport './index.css';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './redux/redux-store'\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport App from \"./App\";\r\n\r\n\r\nReactDOM.render(\r\n    <HashRouter >\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </HashRouter>,\r\n    document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__66zCH\",\"dialogsItems\":\"Dialogs_dialogsItems__3ZIMZ\",\"active\":\"Dialogs_active__n2jAc\",\"messages\":\"Dialogs_messages__2IqDY\",\"message\":\"Dialogs_message__3uWR_\",\"b\":\"Dialogs_b__2Z_Jd\",\"inputMar\":\"Dialogs_inputMar__pTuht\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_control\":\"FormsControls_form_control__33ub9\",\"error\":\"FormsControls_error__LPNa2\",\"formSummaryError\":\"FormsControls_formSummaryError__27pn9\"};"],"sourceRoot":""}