{"version":3,"sources":["assets/images/user.png","components/Paginator/Paginator.module.css","utils/validators/validators.tsx","components/Profile/MyPosts/MyPosts.module.css","redux/dialogs-reduser.tsx","components/Users/users.module.css","assets/images/Hourglass.gif","components/Profile/MyPosts/Post/Post.module.css","api/api.ts","components/common/FormsControls/FormsControls.tsx","serviceWorker.tsx","redux/friends-reduser.tsx","redux/profile-reduser.tsx","utils/object-helpers.js","redux/users-reduser.tsx","redux/app-reduser.tsx","redux/redux-store.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/Paginator/PaginatorX.tsx","components/Users/User.tsx","components/Users/Users.tsx","components/common/preloader/Preloader.tsx","redux/UserSelectors.ts","components/Users/UsersContainer.tsx","components/Profile/MyPosts/ProfileInfo/ProfileStatusFunction.tsx","components/Profile/MyPosts/ProfileInfo/Contacts.tsx","components/Profile/MyPosts/ProfileInfo/ProfileDataForm.tsx","components/Profile/MyPosts/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","redux/auth-Selectors.ts","components/Header/Header.tsx","hoc/withSuspense.tsx","App.tsx","index.tsx","components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","components/common/FormsControls/FormsControls.module.css","redux/auth-reduser.tsx"],"names":["module","exports","__webpack_require__","p","userPhoto","selectedPage","pageNumber","wrap","d","__webpack_exports__","required","maxLengthCreator","value","maxLength","length","concat","postsBlock","posts","initialState","dialogs","id","name","messages","message","addAnswerActionCreator","newMessageText","type","dialogsReducer","state","arguments","undefined","action","newMessage","Object","C_Users_Konstantin_Documents_Project_React_Samurai_95_Social_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__","C_Users_Konstantin_Documents_Project_React_Samurai_95_Social_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","item","usersAPI","profileAPI","authAPI","axios__WEBPACK_IMPORTED_MODULE_0__","instance","n","axios","create","withCredentials","baseURL","headers","API-KEY","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","getStatus","res","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","Content-Type","saveProfile","profile","me","login","email","password","rememberMe","logout","Textarea","_ref","input","_ref$meta","meta","touched","error","props","C_Users_Konstantin_Documents_Project_React_Samurai_95_Social_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","hasError","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","styles","form_control","assign","Input","_ref2","_ref2$meta","createField","placeholder","validators","component","text","redux_form__WEBPACK_IMPORTED_MODULE_3__","validate","Boolean","window","location","hostname","match","friendsReducer","objectSpread2","likesCount","setStatus","getUsersProFile","asyncToGenerator","regenerator_default","mark","_callee","dispatch","_context","prev","next","sent","stop","_x","apply","this","profileReducer","newPost","newPostText","toConsumableArray","photos","updateObjectInArray","items","itemsId","objPropName","newObjProps","map","u","filter","users","totalUsersCount","isFetching","followingInProgress","setFilter","followACSuccess","unfollowACSuccess","setCurrentPageAC","setIsFetchingAC","toggleFollowingProgress","followUnfollowFlow","_callee2","apiMethod","actionCreator","_context2","resultCode","_x2","_x3","_x4","_x5","usersReducer","followed","count","initialized","appReducer","rootReducer","combineReducers","dialogPage","friendPage","profilePage","usersPage","auth","authReducer","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","News","react_default","s","Y","Music","Settings","Paginator","totalItemsCount","_ref$currentPage","_ref$onPageChanged","onPageChanged","x","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","_useState","useState","_useState2","slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","cn","paginator","onClick","defineProperty","key","e","User","search","indexOf","react_router_dom","to","src","small","alt","disabled","some","Users","useDispatch","setSearch","PaginatorX","onChange","target","Users_User","Preloader","Hourglass","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","_this","_this$props","Fragment","Preloader_Preloader","components_Users_Users","React","Component","compose","connect","_ref3","_callee3","_context3","bind","_x6","_ref4","_callee4","_context4","_x7","totalCount","ProfileStatusWithHooks","editMode","setEditMode","_useState3","_useState4","useEffect","onDoubleClick","autoFocus","onBlur","currentTarget","Contacts","contactTitle","contactValue","padding","reduxForm","handleSubmit","onSubmit","style","formSummaryError","keys","contacts","contact","ProfileData","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo_Contacts","ProfileInfo","descriptionBlock","large","mainPhoto","ProfileStatusFunction","files","ProfileInfo_ProfileDataForm","initialValues","ProfileInfo_ProfileData","Post","length10","AddMyPostFormRedux","Field","MyPosts","postsElement","MyPosts_Post_Post","values","addPost","MyPostsContainer","addPostActionCreator","Profile","MyPosts_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","classCallCheck","_super","call","params","authorizedUserId","history","getUserProfile","console","refreshProfile","prevProps","prevState","components_Profile_Profile","isAuth","t0","file","_ref5","_callee5","getState","_context5","Error","stopSubmit","_error","abrupt","Promise","reject","withRouter","selectAuth","selectCurrentUserLogin","AppHeader","useSelector","Header","Layout","row","col","span","menu","theme","mode","defaultSelectedKeys","Item","avatar","backgroundColor","icon","UserOutlined","es_button","withSuspense","Suspense","fallback","LoginPage","lazy","DialogsContainer","App","InitializeApp","SubMenu","Menu","Content","Footer","Sider","layout","Header_AppHeader","breadcrumb","margin","width","defaultOpenKeys","height","title","LaptopOutlined","NotificationOutlined","minHeight","react_router","exact","path","render","Profile_ProfileContainer","components_News_News","components_Music_Music","components_Settings_Settings","Users_UsersContainer","textAlign","getAuthUserData","ReactDOM","react_redux_es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","img","captchaUrl","setAuthUserData","payload","C_Users_Konstantin_Documents_Project_React_Samurai_95_Social_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_Konstantin_Documents_Project_React_Samurai_95_Social_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_data$data","_login","C_Users_Konstantin_Documents_Project_React_Samurai_95_Social_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_2__"],"mappings":"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","file":"static/js/main.84e355ea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.8b1dbb1f.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Paginator_userPhoto__31CPu\",\"selectedPage\":\"Paginator_selectedPage__kDIOz\",\"pageNumber\":\"Paginator_pageNumber__16kt_\",\"wrap\":\"Paginator_wrap__3wmGu\"};","\r\nexport const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1jnKK\",\"posts\":\"MyPosts_posts__3UDMu\"};","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: \"Dimych\"},\r\n        {id: 2, name: \"Andery\"},\r\n        {id: 3, name: \"Sveta\"},\r\n        {id: 4, name: \"Sasha\"},\r\n        {id: 5, name: \"Victor\"},\r\n        {id: 6, name: \"Valera\"},\r\n        {id: 7, name: \"Kos\"}\r\n    ] as Array<DialogType>,\r\n    messages: [\r\n        {id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"How is you\"},\r\n        {id: 3, message: \"Yo\"},\r\n        {id: 3, message: \"Yo\"},\r\n        {id: 4, message: \"Yo\"},\r\n        {id: 5, message: \"Yo\"},\r\n    ] as Array<MessageType>,\r\n\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\nconst dialogsReducer = (state = initialState, action: AddMessageActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n            let newMessage: MessageType = {\r\n                id: 6,\r\n                message: action.newMessageText\r\n            };\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage]\r\n            }\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport type AddMessageActionType = {\r\n    type: 'ADD-MESSAGE'\r\n    newMessageText: string\r\n}\r\nexport const addAnswerActionCreator = (newMessageText: string): AddMessageActionType =>\r\n    ({type: ADD_MESSAGE, newMessageText} as const)\r\n\r\nexport default dialogsReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__3Hp-D\",\"selectedPage\":\"users_selectedPage__3exoP\"};","module.exports = __webpack_public_path__ + \"static/media/Hourglass.6921c9f6.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__Fqzfp\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        \"API-KEY\": \"4e5aee81-42dd-43de-87fa-a601a9c1e88b\"\r\n\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    /*getAuth() {\r\n        return instance.get(`auth/me`)\r\n            .then(data => data.data);\r\n    },*/\r\n    getProfile(userId: number) {\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n\r\n}\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get(`profile/` + userId)\r\n            .then(data => data.data);\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get(`profile/status/` + userId)\r\n            .then(res => res.data);\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put(`profile/status`, {status: status})\r\n            .then(res => res.data);\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile)\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile)\r\n            .then(res => res.data);\r\n    }\r\n}\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n            .then(data => data.data);\r\n    },\r\n    login(email: string, password: string, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport styles from './FormsControls.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\n\r\nexport const Textarea = ({input, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (<div className={styles.form_control + ' ' + (hasError ? styles.error : \"\")}>\r\n        <div><textarea {...input} {...props}/></div>\r\n        {hasError && <span>{error}</span>}\r\n    </div>)\r\n}\r\n\r\nexport const Input = ({input, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (<div className={styles.form_control + ' ' + (hasError ? styles.error : \"\")}>\r\n        <div><input {...input} {...props}/></div>\r\n        {hasError && <span>{error}</span>}\r\n    </div>)\r\n}\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","type FriendsDialogsType =\r\n    {\r\n        id: number,\r\n        name: string\r\n    }\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: \"Dimych\"},\r\n        {id: 2, name: \"Andery\"},\r\n        {id: 3, name: \"Sveta\"},\r\n        {id: 4, name: \"Sasha\"},\r\n        {id: 5, name: \"Victor\"},\r\n        {id: 6, name: \"Valera\"},\r\n        {id: 7, name: \"Kos\"}\r\n    ] as Array<FriendsDialogsType>\r\n}\r\ntype initialStateType = typeof initialState\r\nconst friendsReducer = (state = initialState, action): initialStateType => {\r\n    return {...state}\r\n}\r\nexport default friendsReducer;","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst SAVE_PHOTO = 'SAVE_PHOTO';\r\n\r\nexport type AddPostActionType = {\r\n    type: 'ADD-POST',\r\n    newPostText: string\r\n}\r\nexport type UpDateNewPostActionType = {\r\n    type: 'UPDATE-NEW-POST-TEXT'\r\n    newText: string\r\n}\r\nexport type AddMessageActionType = {\r\n    type: 'ADD-MESSAGE'\r\n    newMessageText: string\r\n}\r\nexport type UpDateMessageActionType = {\r\n    type: 'UPDATE-MESSAGE-TEXT'\r\n    newTextMessage: string\r\n}\r\nexport type ActionsTypes =\r\n    savePhotoSuccessType\r\n    | AddPostActionType\r\n    | UpDateNewPostActionType\r\n    | AddMessageActionType\r\n    | UpDateMessageActionType\r\nexport type TYPESALLACTION = ActionsTypes | SetUserProfileActionType | setStatusType\r\nexport type PostType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\nexport type ContactsType = {\r\n    github: string\r\n    vk: string\r\n    facebook: string\r\n    instagram: string\r\n    twitter: string\r\n    website: string\r\n    youtube: string\r\n    mainLink: string\r\n}\r\nexport type PhotosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\nexport type ProfileType = {\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    contacts: ContactsType\r\n    photos: PhotosType\r\n}\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: \"Hi how are you?\", likesCount: 5},\r\n        {id: 2, message: \"It is my First post!\", likesCount: 23},\r\n        {id: 3, message: \"BlaBla\", likesCount: 65},\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n\r\n};\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst profileReducer = (state: InitialStateType = initialState, action: TYPESALLACTION): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        case SAVE_PHOTO: {\r\n            return {...state, profile: {...state.profile, photos: action.photos} as ProfileType}\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText: string): AddPostActionType => ({type: ADD_POST, newPostText})\r\n\r\ntype SetUserProfileActionType = {\r\n    type: typeof SET_USER_PROFILE\r\n    profile: ProfileType\r\n}\r\nexport const setUserProfile = (profile: ProfileType): SetUserProfileActionType => ({type: SET_USER_PROFILE, profile})\r\nexport type setStatusType = {\r\n    type: typeof SET_STATUS\r\n    status: string\r\n}\r\nexport const savePhotoSuccess = (photos: PhotosType): savePhotoSuccessType => ({type: SAVE_PHOTO, photos} as const)\r\nexport type savePhotoSuccessType = {\r\n    type: typeof SAVE_PHOTO\r\n    photos: PhotosType\r\n}\r\nexport const setStatus = (status: string): setStatusType =>\r\n    ({type: SET_STATUS, status: status})\r\n\r\nexport const getUsersProFile = (userId: number) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response));\r\n}\r\nexport const getStatus = (userId: number) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response));\r\n}\r\nexport const updateStatus = (status: string) => async (dispatch) => {\r\n    try {\r\n        let response = await profileAPI.updateStatus(status);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    } catch (error) {\r\n        //\r\n    }\r\n}\r\nexport const savePhoto = (file) => async (dispatch: any) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.id\r\n    const data = await profileAPI.saveProfile(profile)\r\n\r\n    if (data.resultCode === 0) {\r\n        if (userId != null) {\r\n            dispatch(getUsersProFile(userId))\r\n        } else {\r\n            throw new Error(\"userId can't be null\")\r\n        }\r\n    } else {\r\n        debugger\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: data.messages[0] }))\r\n        return Promise.reject(data.messages[0])\r\n    }\r\n}\r\n\r\nexport default profileReducer;","export const updateObjectInArray = (items, itemsId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemsId) {\r\n            return {...u, ...newObjProps};\r\n        }\r\n        return u;\r\n    });\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW-POST';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_FILTER = 'SET_FILTER';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nexport type UserType = {\r\n    id: number,\r\n    name: string,\r\n    status: string,\r\n    photos: { small: string, large: string },\r\n    followed: boolean\r\n}\r\n\r\nlet initialState = {\r\n    filter: '',\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n\r\n}\r\n\r\nexport type InitialState = typeof initialState\r\n\r\nconst usersReducer = (state: InitialState = initialState, action: ActionType): InitialState => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n                /*state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true};\r\n                    }\r\n                    return u;\r\n                })*/\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n                /*state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false};\r\n                    }\r\n                    return u;\r\n                })*/\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_FILTER: {\r\n            return {...state, filter: action.filter}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n\r\n            return {\r\n                ...state,\r\n                //@ts-ignore\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\ntype ActionType =\r\n    followACSuccessType\r\n    | unfollowACSuccessType\r\n    | setUsersACType\r\n    | setCurrentPageACType\r\n    | setUsersTotalCountACType\r\n    | setIsFetchingACType\r\n    | toggleFollowingProgressType\r\n    | setFilterType\r\n\r\nexport const setFilter = (filter: string) => ({type: SET_FILTER, filter} as const)\r\ntype setFilterType = ReturnType<typeof setFilter>\r\n\r\nexport const followACSuccess = (userId: number) => ({type: FOLLOW, userId} as const)\r\ntype followACSuccessType = ReturnType<typeof followACSuccess>\r\n\r\nexport const unfollowACSuccess = (userId: number) => ({type: UNFOLLOW, userId} as const)\r\ntype unfollowACSuccessType = ReturnType<typeof unfollowACSuccess>\r\n\r\nexport const setUsersAC = (users: Array<UserType>) => ({type: SET_USERS, users} as const)\r\ntype setUsersACType = ReturnType<typeof setUsersAC>\r\n\r\nexport const setCurrentPageAC = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage} as const)\r\ntype setCurrentPageACType = ReturnType<typeof setCurrentPageAC>\r\n\r\nexport const setUsersTotalCountAC = (totalUsersCount: number) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    count: totalUsersCount\r\n} as const)\r\ntype setUsersTotalCountACType = ReturnType<typeof setUsersTotalCountAC>\r\n\r\nexport const setIsFetchingAC = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching} as const)\r\ntype setIsFetchingACType = ReturnType<typeof setIsFetchingAC>\r\n\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n} as const)\r\ntype toggleFollowingProgressType = ReturnType<typeof toggleFollowingProgress>\r\n//-----------------------------------------------------------\r\n/*\r\ntype DispatchType = Dispatch<ActionType>\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionType>\r\n*/\r\n//_________________________________________________________________\r\n\r\n\r\n//_________________________________________________________________\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(setIsFetchingAC(true));\r\n    dispatch(setCurrentPageAC(currentPage))\r\n    let data = await usersAPI.getUsers(currentPage, pageSize)\r\n    dispatch(setIsFetchingAC(false));\r\n    dispatch(setUsersAC(data.items));\r\n    dispatch(setUsersTotalCountAC(data.totalCount));\r\n    dispatch(setCurrentPageAC(currentPage))\r\n}\r\n\r\n\r\nconst followUnfollowFlow = async(dispatch,userId,apiMethod,actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId: number) => async (dispatch: Dispatch) => {\r\n    let apiMethod = usersAPI.follow.bind(usersAPI);\r\n    let actionCreator = followACSuccess;\r\n    followUnfollowFlow(dispatch,userId,apiMethod,actionCreator)\r\n}\r\nexport const unfollow = (userId) => async (dispatch: Dispatch) => {\r\n    let apiMethod = usersAPI.unfollow.bind(usersAPI);\r\n    let actionCreator = unfollowACSuccess;\r\n    followUnfollowFlow(dispatch,userId,apiMethod,actionCreator)\r\n}\r\n\r\n\r\nexport default usersReducer;","import {getAuthUserData} from \"./auth-reduser\";\r\n\r\nconst SET_INITIALIZED_SUCCESS = 'SET_INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst appReducer = (state = initialState, action: initializedType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\nexport type initializedType = ReturnType<typeof InitializedSuccess>\r\n\r\nexport const InitializedSuccess = () => ({\r\n    type: SET_INITIALIZED_SUCCESS\r\n} as const)\r\n\r\nexport const InitializeApp = () => async (dispatch: any) => {\r\n    let promise = await dispatch(getAuthUserData())\r\n    dispatch(InitializedSuccess())\r\n}\r\n\r\nexport default appReducer;","import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport dialogsReducer from \"./dialogs-reduser\";\r\nimport friendsReducer from \"./friends-reduser\";\r\nimport profileReducer from \"./profile-reduser\";\r\nimport usersReducer from \"./users-reduser\";\r\nimport authReducer from \"./auth-reduser\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./app-reduser\";\r\n\r\nlet rootReducer = combineReducers({\r\n    dialogPage: dialogsReducer,\r\n    friendPage: friendsReducer,\r\n    profilePage: profileReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app:appReducer\r\n})\r\n\r\n\r\ntype PropertiesType<T> = T extends {[key:string]:infer U} ? U : never\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nlet store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n//@ts-ignore\r\nwindow.store = store;\r\nexport default store;","import React from \"react\";\r\nimport s from './News.module.css'\r\nconst News = (props) => {\r\n    return(\r\n        <div className={s.Y}>\r\n            News\r\n        </div>\r\n    )\r\n}\r\nexport default News;","import React from \"react\";\r\nimport s from './Music.module.css'\r\nconst Music = (props) => {\r\n    return(\r\n        <div className={s.Y}>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\nexport default Music;","import React from \"react\";\r\nimport s from './Settings.module.css'\r\nconst Settings = (props) => {\r\n    return(\r\n        <div className={s.Y}>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\nexport default Settings;","import React, {useState} from 'react'\r\nimport styles from './Paginator.module.css'\r\nimport cn from 'classnames'\r\n\r\ntype PropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage?: number\r\n    onPageChanged?: (pageNumber: number) => void\r\n    portionSize?: number\r\n}\r\n\r\nlet Paginator: React.FC<PropsType> = ({totalItemsCount, pageSize,\r\n                                          currentPage = 1,\r\n                                          onPageChanged = x => x,\r\n                                          portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages: Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={cn(styles.paginator)}>\r\n        { portionNumber > 1 &&\r\n            <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React, {useState} from 'react'\r\nimport styles from \"./users.module.css\"\r\nimport userPhoto from '../../assets/images/user.png'\r\nimport {NavLink} from 'react-router-dom';\r\nimport {UserType} from \"../../redux/users-reduser\";\r\n\r\n\r\ntype PropsType = {\r\n    users: Array<UserType>\r\n    unfollow: (id: number) => void\r\n    followingInProgress: Array<number>\r\n    follow: (id: number) => void\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => void\r\n}\r\n\r\nlet User: React.FC<PropsType> = (props) => {\r\n    const [search, setSearch] = useState('')\r\n\r\n    return <div>\r\n        {\r\n            props.users\r\n                .filter(u => u.name.indexOf(search) > -1)\r\n                .map(u => <div key={u.id}>\r\n                <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + u.id}>\r\n                <img src={u.photos.small != null ? u.photos.small : userPhoto} className={styles.userPhoto}\r\n                     alt=\"\"/>\r\n                     </NavLink>\r\n            </div>\r\n            <div>\r\n        {u.followed\r\n            ? <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                props.unfollow(u.id)\r\n            }}>Unfollow</button>\r\n            : <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                props.follow(u.id)\r\n            }}>Follow</button>}\r\n            </div>\r\n            </span><span>\r\n            <span>\r\n            <div>{u.name}</div>\r\n            <div>{u.status}</div>\r\n            </span>\r\n            <span>\r\n            <div>{\"u.location.country\"}</div>\r\n            <div>{\"u.location.city\"}</div>\r\n            </span>\r\n            </span>\r\n                </div>)\r\n        }\r\n    </div>\r\n}\r\nexport default User;","import React, {useState} from 'react'\r\nimport {setFilter, UserType} from \"../../redux/users-reduser\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport PaginatorX from \"../Paginator/PaginatorX\";\r\nimport User from \"./User\";\r\n\r\ntype PropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (p: number) => void\r\n    users: Array<UserType>\r\n    unfollow: (id: number) => void\r\n    followingInProgress: Array<number>\r\n    follow: (id: number) => void\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => void\r\n}\r\n\r\nlet Users: React.FC<PropsType> = (props) => {\r\n    let {totalUsersCount, pageSize, currentPage, onPageChanged} = props\r\n    let dispatch = useDispatch()\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n    let pages: number[] = [];\r\n    for (let i: number = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    const [search, setSearch] = useState('')\r\n\r\n    const onSearchChange = (e) => {\r\n        setSearch(e.target.value)\r\n        dispatch(setFilter(search))\r\n    }\r\n\r\n\r\n    return <div>\r\n        <PaginatorX\r\n            totalItemsCount={totalUsersCount}\r\n            pageSize={pageSize}\r\n            currentPage={currentPage}\r\n            onPageChanged={onPageChanged}\r\n        />\r\n        <input placeholder={\"search\"} value={search} onChange={onSearchChange}/>\r\n        <div><strong>Total Users Count: {totalUsersCount}</strong></div>\r\n\r\n        <User {...props}/>\r\n    </div>\r\n}\r\nexport default Users;","import React from 'react'\r\nimport Hourglass from \"../../../assets/images/Hourglass.gif\";\r\n\r\nexport let Preloader = (props) => {\r\n    return <div>\r\n        <img src={Hourglass} alt=\"\"/>\r\n    </div>\r\n}","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n        return users.filter(u => true)\r\n    }\r\n)\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import {connect} from \"react-redux\";\r\nimport {\r\n    getUsersThunkCreator,\r\n    follow, unfollow, toggleFollowingProgress, setFilter\r\n} from \"../../redux/users-reduser\";\r\nimport React from \"react\";\r\nimport Users from \"./Users\";\r\nimport {Preloader} from \"../common/preloader/Preloader\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getPageSize,\r\n    getUsers,\r\n    getTotalUsersCount,\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getFollowingInProgress\r\n} from \"../../redux/UserSelectors\";\r\n\r\ntype UserType = {\r\n    id: number,\r\n    name: string,\r\n    status: string,\r\n    photos: { small: string, large: string },\r\n    followed: boolean,\r\n    onPageChanged: (pageNumber: number) => void\r\n}\r\n\r\ntype PropsType = {\r\n    setFilter: (filter: string) => void\r\n    toggleIsFetching: (isFetching: boolean) => void\r\n    toggleFollowingProgress: (isFetching: boolean) => void\r\n    users: Array<UserType>\r\n    setCurrentPage: (p: number) => void\r\n    setTotalUsersCount: (totalUsersCount: number) => void\r\n    setUsers: (res: string) => void\r\n    unfollow: (id: number) => void\r\n    follow: (id: number) => void\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: []\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n\r\n\r\n}\r\n/*export type UsersPropsType = UserType & PropsType*/\r\n\r\n// @ts-ignore\r\nclass UsersContainer extends React.Component<PropsType> {\r\n    state = {\r\n        search: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {currentPage,pageSize} = this.props\r\n        this.props.getUsers(currentPage,pageSize);\r\n\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const {pageSize} = this.props\r\n        this.props.getUsers(pageNumber,pageSize)\r\n\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ?\r\n                <Preloader/> : null}\r\n            <Users\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                unfollow={this.props.unfollow}\r\n                follow={this.props.follow}\r\n                currentPage={this.props.currentPage}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                followingInProgress={this.props.followingInProgress}\r\n\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        filter: state.usersPage.filter,\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        setFilter,\r\n        follow,\r\n        unfollow,\r\n        toggleFollowingProgress: toggleFollowingProgress,\r\n        getUsers: getUsersThunkCreator\r\n        // @ts-ignore\r\n    }))(UsersContainer);\r\n","import React, {ChangeEvent, useEffect, useState} from 'react';\r\n\r\n\r\ntype PropsType = {\r\n    status: string\r\n    updateStatus: (newStatus: string) => void\r\n}\r\ntype StateType = {\r\n    editMode: boolean\r\n    status: string\r\n}\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <strong>Status: </strong><span onDoubleClick={activateEditMode}> {props.status || \"-------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input\r\n                    autoFocus={true}\r\n                    onBlur={deactivateEditMode}\r\n                    onChange={onStatusChange}\r\n                    value={status}\r\n                />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n//TODO Form for status\r\n","import s from \"./ProfileInfo.module.css\";\r\nimport React from \"react\";\r\n\r\nconst Contacts = ({contactTitle, contactValue}) => {\r\n    return <div className={s.padding}><strong>{contactTitle} :</strong> {contactValue}</div>\r\n}\r\n\r\nexport default  Contacts;","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\"\r\nimport {createField, Input, Textarea} from \"../../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from \"../../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({profile, handleSubmit, error}) => {\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <button>Save</button>\r\n            </div>\r\n            {error && <div className={style.formSummaryError}>{error}</div>}\r\n            <div>\r\n                <strong>Full name: </strong> {createField(\"full name\", \"fullName\", [], Input)}\r\n            </div>\r\n            <div>\r\n                <strong>Looking for a job:</strong> {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n            </div>\r\n            <div>\r\n                <strong>\r\n                    My professional skills: </strong>\r\n                {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <strong>About me: </strong> {createField(\"about me\", \"aboutMe\", [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <strong>Contacts :</strong>{Object.keys(profile.contacts).map(key => {\r\n                return <div key={key} className={s.contact}>\r\n                    <strong>{key} : </strong> {createField(key, \"contacts.\" + key, [], Input)}\r\n                </div>\r\n            })}\r\n            </div>\r\n        </form>)\r\n}\r\n\r\nexport default reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport {Preloader} from \"../../../common/preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusFunction\";\r\nimport userPhoto from \"../../../../assets/images/user.png\"\r\nimport Contacts from \"./Contacts\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport {getUsersProFile} from \"../../../../redux/profile-reduser\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData)\r\n            .then((res) => {\r\n                setEditMode(false)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className={s.descriptionBlock}>\r\n            <div>\r\n                <img src={profile.photos.large || userPhoto} alt='' className={s.mainPhoto}/>\r\n\r\n                <ProfileStatusWithHooks\r\n                    status={status}\r\n                    updateStatus={updateStatus}/>\r\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n\r\n                {editMode\r\n                    ? <ProfileDataForm\r\n                        initialValues={profile}\r\n                        profile={profile}\r\n                        onSubmit={onSubmit}/>\r\n                    : <ProfileData\r\n                        profile={profile}\r\n                        isOwner={isOwner}\r\n                        goToEditMode={() => {\r\n                            setEditMode(true)\r\n                        }}/>}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getUsersProFile(18301));\r\n    }, [])\r\n    return <div>\r\n        {isOwner && <div>\r\n            <button onClick={goToEditMode}>Edit</button>\r\n        </div>}\r\n        <div>\r\n            <strong>Full name: </strong>{profile.fullName}\r\n        </div>\r\n        <div>\r\n            <strong>Looking for a job:</strong>{profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n        <div>\r\n            <strong>\r\n                My professional skills:</strong>\r\n            {profile.lookingForAJobDescription}\r\n\r\n        </div>}\r\n        <div>\r\n            <strong>About me:</strong>{profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <strong>Contacts :</strong>{Object.keys(profile.contacts).map(key => {\r\n            return <Contacts key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;\r\n\r\n","import React from \"react\";\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://main-cdn.goods.ru/hlr-system/1722315217/600001112185b0.jpeg' alt=\"\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>Like </span>{props.likesCount}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Post;","import React from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElement = props.posts.map(p => <Post key={p.id} likesCount={p.likesCount} message={p.message}/>);\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <div>\r\n                <h3>My posts</h3>\r\n            </div>\r\n\r\n            <AddMyPostFormRedux onSubmit={onAddPost}/>\r\n\r\n            <div className={s.posts}>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nconst length10 = maxLengthCreator(10)\r\nconst AddMyPostForm = (props) => {\r\n    return (<form onSubmit={props.handleSubmit}>\r\n        <Field name=\"newPostText\" component={Textarea} validate={[required,length10]} placeholder={\"Post Message\"}/>\r\n        {/*<textarea\r\n            value={props.newPostText}\r\n            onChange={onPostChange}\r\n            ref={newPostElement}\r\n        />*/}\r\n        <div>{/**/}\r\n            <button>Add Post</button>\r\n            {/*<button onClick={onAddPost}>Add Post</button>*/}\r\n        </div>\r\n    </form>)\r\n}\r\n\r\nconst AddMyPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddMyPostForm)\r\n\r\nexport default MyPosts;","\r\nimport {addPostActionCreator } from \"../../../redux/profile-reduser\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps,)(MyPosts);\r\nexport type PostType = typeof MyPostsContainer;\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./MyPosts/ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                saveProfile={props.saveProfile}\r\n                savePhoto={props.savePhoto}\r\n                isOwner={props.isOwner}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUsersProFile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reduser\";\r\nimport {withRouter, RouteComponentProps} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {ProfileType} from '../../type/type';\r\n\r\ntype MapPropsType = ReturnType<typeof mapStateToProps>\r\ntype DispatchPropsType = {\r\n    getUserProfile: (userId: number) => void\r\n    getStatus: (userId: number) => void\r\n    updateStatus: (status: string) => void\r\n    savePhoto: (file: File) => void\r\n    saveProfile: (profile: ProfileType) => Promise<any>\r\n}\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype PropsType = MapPropsType & DispatchPropsType & RouteComponentProps<PathParamsType>;\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n    constructor(props: PropsType) {\r\n        super(props);\r\n    }\r\n\r\n    refreshProfile() {\r\n        let userId: number | null = +this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                // todo: may be replace push with Redirect??\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n\r\n        if (!userId) {\r\n            console.error(\"ID should exists in URI params or in state ('authorizedUserId')\");\r\n        } else {\r\n            this.props.getUserProfile(userId)\r\n            this.props.getStatus(userId)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps: PropsType, prevState: PropsType) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    //console.log('mapStateToProps PROFILE')\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.id,\r\n        isAuth: state.auth.isAuth\r\n    })\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getUserProfile:getUsersProFile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n\r\n","import {AppStateType} from \"./redux-store\";\r\n\r\nexport const selectAuth = (state:AppStateType) => {\r\n    return state.auth.isAuth\r\n}\r\nexport const selectCurrentUserLogin = (state:AppStateType) => {\r\n    return state.auth.login\r\n}\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Avatar, Button, Col, Layout, Menu, Row} from \"antd\";\r\nimport {UserOutlined} from \"@ant-design/icons\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {selectAuth, selectCurrentUserLogin} from \"../../redux/auth-Selectors\";\r\nimport {logout} from \"../../redux/auth-reduser\";\r\n\r\nexport type MapPropsType = {}\r\n\r\n\r\nexport const AppHeader: React.FC<MapPropsType> = (props) => {\r\n    const isAuth = useSelector<AppStateType>(selectAuth)\r\n    const login = useSelector<AppStateType>(selectCurrentUserLogin)\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutCallback = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    const {Header} = Layout;\r\n    return (<Header className=\"header\">\r\n        <div className=\"logo\"/>\r\n        <Row>\r\n            <Col span={18}>\r\n                <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\r\n                    <Menu.Item key=\"1\"><Link to=\"/developers\">Developers</Link></Menu.Item>\r\n                </Menu></Col>\r\n            {isAuth\r\n                ? <><Col span={1}>\r\n                    <Avatar alt={login && ''} style={{backgroundColor: '#87d068'}} icon={<UserOutlined/>}/>\r\n                </Col>\r\n                    <Col span={5}>\r\n                        <Button onClick={logoutCallback}>Log Out</Button>\r\n                    </Col>\r\n                </>\r\n                : <Col span={6}>\r\n                    <Button>\r\n                        <Link to={'/login'}>Login</Link>\r\n                    </Button>\r\n                </Col>}\r\n\r\n        </Row>\r\n    </Header>)\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<div>Loading...</div>}>\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    };\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {Link, Route, Redirect} from 'react-router-dom'\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\n\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\n\r\nimport {InitializeApp, InitialStateType} from \"./redux/app-reduser\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport 'antd/dist/antd.css'\r\n\r\nimport {LaptopOutlined, NotificationOutlined, UserOutlined} from '@ant-design/icons';\r\nimport {Breadcrumb, Layout, Menu} from \"antd\";\r\nimport {AppHeader} from \"./components/Header/Header\";\r\nimport {withSuspense} from './hoc/withSuspense';\r\n\r\n//import LoginPage from \"./components/Login/Login\";\r\nconst LoginPage = React.lazy(() => import('./components/Login/Login'));\r\n\r\n//import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\n\r\nclass App extends React.Component<any, any> {\r\n    componentDidMount() {\r\n        this.props.InitializeApp()\r\n    }\r\n\r\n    render() {\r\n        /*if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }*/\r\n        const {SubMenu} = Menu;\r\n        const {Content, Footer, Sider} = Layout;\r\n        return (\r\n            <Layout>\r\n                <AppHeader/>\r\n                <Content style={{padding: '0 50px'}}>\r\n                    <Breadcrumb style={{margin: '16px 0'}}>\r\n                        <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                        <Breadcrumb.Item>List</Breadcrumb.Item>\r\n                        <Breadcrumb.Item>App</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                    <Layout className=\"site-layout-background\" style={{padding: '24px 0'}}>\r\n                        <Sider className=\"site-layout-background\" width={200}>\r\n                            <Menu\r\n                                mode=\"inline\"\r\n                                defaultSelectedKeys={['1']}\r\n                                defaultOpenKeys={['sub1']}\r\n                                style={{height: '100%'}}\r\n                            >\r\n                                <SubMenu key=\"sub1\" icon={<UserOutlined/>} title=\"My Profile\">\r\n                                    <Menu.Item key=\"1\"><Link to=\"/profile\">Profile</Link> </Menu.Item>\r\n                                    <Menu.Item key=\"2\"> <Link to=\"/dialogs\">Messages</Link></Menu.Item>\r\n\r\n                                </SubMenu>\r\n                                <SubMenu key=\"sub2\" icon={<LaptopOutlined/>} title=\"Developers\">\r\n                                    <Menu.Item key=\"5\"><Link to=\"/developers\">Users</Link></Menu.Item>\r\n                                    {/*<Menu.Item key=\"6\">option6</Menu.Item>\r\n                                    <Menu.Item key=\"7\">option7</Menu.Item>\r\n                                    <Menu.Item key=\"8\">option8</Menu.Item>*/}\r\n                                </SubMenu>\r\n                                <SubMenu key=\"sub3\" icon={<NotificationOutlined/>} title=\"subnav 3\">\r\n                                    <Menu.Item key=\"9\">option9</Menu.Item>\r\n                                    <Menu.Item key=\"10\">option10</Menu.Item>\r\n                                    <Menu.Item key=\"11\">option11</Menu.Item>\r\n                                    <Menu.Item key=\"12\">option12</Menu.Item>\r\n                                </SubMenu>\r\n                            </Menu>\r\n                        </Sider>\r\n                        <Content style={{padding: '0 24px', minHeight: 200}}>\r\n                            <Route exact path='/' render={() => <Redirect to={'/profile'}/>}/>\r\n                            <Route path=\"/dialogs/\" render={withSuspense(DialogsContainer)}/>\r\n                            <Route path=\"/profile/:userId?\" render={() => <ProfileContainer/>}/>\r\n                            <Route path=\"/news/\" render={() => <News/>}/>\r\n                            <Route path=\"/music/\" render={() => <Music/>}/>\r\n                            <Route path=\"/settings/\" render={() => <Settings/>}/>\r\n                            <Route path=\"/developers/\" render={() => <UsersContainer/>}/>\r\n                            <Route path=\"/login/\" render={withSuspense(LoginPage)}/>\r\n                        </Content>\r\n                    </Layout>\r\n                </Content>\r\n                <Footer style={{textAlign: 'center'}}>©2021 Created by Petrov Konstantin</Footer>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: InitialStateType) => ({\r\n    initialized: state.initialized\r\n})\r\n\r\nexport default compose(connect(mapStateToProps, {InitializeApp}))(App);\r\n\r\n\r\n/*(\r\n\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className='app-wrapper-content'>\r\n                    <Route path=\"/dialogs/\" render={() => <DialogsContainer/>}/>\r\n                    <Route path=\"/profile/:userId?\" render={() => <ProfileContainer/>}/>\r\n                    <Route path=\"/news/\" render={() => <News/>}/>\r\n                    <Route path=\"/music/\" render={() => <Music/>}/>\r\n                    <Route path=\"/settings/\" render={() => <Settings/>}/>\r\n                    <Route path=\"/users/\" render={() => <UsersContainer/>}/>\r\n                    <Route path=\"/login/\" render={() => <LoginPage/>}/>\r\n\r\n                </div>\r\n            </div>\r\n        );*/\r\n","import React from 'react';\r\nimport './index.css';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './redux/redux-store'\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport App from \"./App\";\r\n\r\n\r\nReactDOM.render(\r\n    <HashRouter >\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </HashRouter>,\r\n    document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProfileInfo_item__F6mB5\",\"img\":\"ProfileInfo_img__1lFDW\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2kwuZ\",\"mainPhoto\":\"ProfileInfo_mainPhoto__oLCOm\",\"padding\":\"ProfileInfo_padding__3VccA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_control\":\"FormsControls_form_control__33ub9\",\"error\":\"FormsControls_error__LPNa2\",\"formSummaryError\":\"FormsControls_formSummaryError__27pn9\"};","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from 'redux-form';\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    id: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    captchaUrl: null as string | null\r\n\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst authReducer = (state = initialState, action: setAuthUserDataType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\nexport type setAuthUserDataType = ReturnType<typeof setAuthUserData>\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {id, login, email, isAuth}\r\n} as const)\r\nexport type getAuthUserData = ReturnType<typeof getAuthUserData>\r\n\r\nexport const getAuthUserData = () => async (dispatch: Dispatch) => {\r\n    let data = await authAPI.me()\r\n    if (data.resultCode === 0) {\r\n        let {id, login, email} = data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n};\r\nexport const logout = () => async (dispatch: Dispatch) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n};\r\n\r\nexport default authReducer;"],"sourceRoot":""}