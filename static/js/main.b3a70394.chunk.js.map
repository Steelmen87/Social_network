{"version":3,"sources":["assets/images/user.png","components/Paginator/Paginator.module.css","utils/validators/validators.tsx","components/Users/users.module.css","components/Profile/MyPosts/MyPosts.module.css","redux/dialogs-reduser.tsx","assets/images/Hourglass.gif","components/Profile/MyPosts/Post/Post.module.css","api/api.ts","serviceWorker.tsx","redux/friends-reduser.tsx","redux/profile-reduser.tsx","utils/object-helpers.js","redux/users-reduser.tsx","redux/app-reduser.tsx","redux/redux-store.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/Paginator/PaginatorX.tsx","components/Users/User.tsx","components/Users/Users.tsx","components/common/preloader/Preloader.tsx","redux/UserSelectors.ts","components/Users/UsersContainer.tsx","components/Profile/MyPosts/ProfileInfo/ProfileStatusFunction.tsx","components/Profile/MyPosts/ProfileInfo/Contacts.tsx","components/Profile/MyPosts/ProfileInfo/ProfileDataForm.tsx","components/Profile/MyPosts/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","redux/auth-Selectors.ts","components/Header/Header.tsx","hoc/withSuspense.tsx","Horizont-nav.tsx","App.tsx","index.tsx","components/common/FormsControls/FormsControls.tsx","components/common/FormsControls/FormsControls.module.css","redux/auth-reduser.tsx","components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css"],"names":["module","exports","__webpack_require__","p","userPhoto","selectedPage","pageNumber","wrap","d","__webpack_exports__","required","maxLengthCreator","value","maxLength","length","concat","shadow","postsBlock","posts","initialState","dialogs","id","name","messages","message","addAnswerActionCreator","newMessageText","type","dialogsReducer","state","arguments","undefined","action","newMessage","Object","C_Users_Konstantin_Documents_Project_React_Samurai_95_Social_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__","C_Users_Konstantin_Documents_Project_React_Samurai_95_Social_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","item","usersAPI","profileAPI","authAPI","securityAPI","axios__WEBPACK_IMPORTED_MODULE_0__","instance","n","axios","create","withCredentials","baseURL","headers","API-KEY","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","getStatus","res","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","Content-Type","saveProfile","profile","me","login","email","password","rememberMe","logout","getCaptchaUrl","Boolean","window","location","hostname","match","friendsReducer","objectSpread2","likesCount","setStatus","getUsersProFile","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","_context","prev","next","sent","stop","_x","apply","this","profileReducer","newPost","newPostText","toConsumableArray","photos","updateObjectInArray","items","itemsId","objPropName","newObjProps","map","u","filter","users","totalUsersCount","isFetching","followingInProgress","setFilter","followACSuccess","unfollowACSuccess","setCurrentPageAC","setIsFetchingAC","toggleFollowingProgress","followUnfollowFlow","_ref2","_callee2","apiMethod","actionCreator","_context2","resultCode","_x2","_x3","_x4","_x5","usersReducer","followed","count","initialized","appReducer","rootReducer","combineReducers","dialogPage","friendPage","profilePage","usersPage","auth","authReducer","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","News","props","react_default","createElement","className","s","Y","Music","Settings","Paginator","totalItemsCount","_ref$currentPage","_ref$onPageChanged","onPageChanged","x","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","_useState","useState","_useState2","slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","cn","styles","paginator","onClick","defineProperty","key","e","User","search","indexOf","react_router_dom","to","src","small","alt","disabled","some","Users","useDispatch","setSearch","PaginatorX","placeholder","onChange","target","Users_User","Preloader","Hourglass","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","_this","_this$props","Fragment","Preloader_Preloader","components_Users_Users","React","Component","compose","connect","_ref3","_callee3","_context3","bind","_x6","_ref4","_callee4","_context4","_x7","totalCount","ProfileStatusWithHooks","editMode","setEditMode","_useState3","_useState4","useEffect","onDoubleClick","autoFocus","onBlur","currentTarget","Contacts","contactTitle","contactValue","padding","reduxForm","handleSubmit","error","onSubmit","style","formSummaryError","createField","Input","Textarea","keys","contacts","contact","ProfileData","isOwner","goToEditMode","es_button","size","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo_Contacts","ProfileInfo","descriptionBlock","large","mainPhoto","ProfileStatusFunction","files","ProfileInfo_ProfileDataForm","initialValues","ProfileInfo_ProfileData","Post","length10","AddMyPostFormRedux","Field","component","validate","MyPosts","postsElement","MyPosts_Post_Post","values","addPost","MyPostsContainer","addPostActionCreator","Profile","MyPosts_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","classCallCheck","_super","call","params","authorizedUserId","history","getUserProfile","console","refreshProfile","prevProps","prevState","components_Profile_Profile","assign","isAuth","t0","file","_ref5","_callee5","getState","_context5","Error","stopSubmit","_error","abrupt","Promise","reject","withRouter","selectAuth","selectCurrentUserLogin","AppHeader","useSelector","Header","Layout","row","col","span","menu","theme","mode","defaultSelectedKeys","Item","avatar","backgroundColor","icon","UserOutlined","withSuspense","Suspense","fallback","SubMenu","Menu","Horizont","Horizont_nav_SubMenu","SettingOutlined","title","ItemGroup","LoginPage","lazy","DialogsContainer","App","InitializeApp","Content","Footer","Sider","screenWidth","screen","width","layout","Header_AppHeader","defaultOpenKeys","height","LaptopOutlined","NotificationOutlined","minHeight","react_router","exact","path","render","Profile_ProfileContainer","components_News_News","components_Music_Music","components_Settings_Settings","Users_UsersContainer","textAlign","getAuthUserData","ReactDOM","react_redux_es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","input","_ref$meta","meta","touched","C_Users_Konstantin_Documents_Project_React_Samurai_95_Social_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","hasError","react__WEBPACK_IMPORTED_MODULE_1___default","form_control","_ref2$meta","validators","text","redux_form__WEBPACK_IMPORTED_MODULE_3__","captchaUrl","setAuthUserData","payload","C_Users_Konstantin_Documents_Project_React_Samurai_95_Social_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_Konstantin_Documents_Project_React_Samurai_95_Social_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_data$data","_login","captcha","url","C_Users_Konstantin_Documents_Project_React_Samurai_95_Social_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_2__","img"],"mappings":"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","file":"static/js/main.b3a70394.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.8b1dbb1f.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Paginator_userPhoto__31CPu\",\"selectedPage\":\"Paginator_selectedPage__kDIOz\",\"pageNumber\":\"Paginator_pageNumber__16kt_\",\"wrap\":\"Paginator_wrap__3wmGu\"};","\r\nexport const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__3Hp-D\",\"selectedPage\":\"users_selectedPage__3exoP\",\"shadow\":\"users_shadow__2D0Sd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1jnKK\",\"posts\":\"MyPosts_posts__3UDMu\"};","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: \"Dimych\"},\r\n        {id: 2, name: \"Andery\"},\r\n        {id: 3, name: \"Sveta\"},\r\n        {id: 4, name: \"Sasha\"},\r\n        {id: 5, name: \"Victor\"},\r\n        {id: 6, name: \"Valera\"},\r\n        {id: 7, name: \"Kos\"}\r\n    ] as Array<DialogType>,\r\n    messages: [\r\n        {id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"How is you\"},\r\n        {id: 3, message: \"Yo\"},\r\n        {id: 3, message: \"Yo\"},\r\n        {id: 4, message: \"Yo\"},\r\n        {id: 5, message: \"Yo\"},\r\n    ] as Array<MessageType>,\r\n\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\nconst dialogsReducer = (state = initialState, action: AddMessageActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n            let newMessage: MessageType = {\r\n                id: 6,\r\n                message: action.newMessageText\r\n            };\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage]\r\n            }\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport type AddMessageActionType = {\r\n    type: 'ADD-MESSAGE'\r\n    newMessageText: string\r\n}\r\nexport const addAnswerActionCreator = (newMessageText: string): AddMessageActionType =>\r\n    ({type: ADD_MESSAGE, newMessageText} as const)\r\n\r\nexport default dialogsReducer","module.exports = __webpack_public_path__ + \"static/media/Hourglass.6921c9f6.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__Fqzfp\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        \"API-KEY\": \"4e5aee81-42dd-43de-87fa-a601a9c1e88b\"\r\n\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    /*getAuth() {\r\n        return instance.get(`auth/me`)\r\n            .then(data => data.data);\r\n    },*/\r\n    getProfile(userId: number) {\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n\r\n}\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get(`profile/` + userId)\r\n            .then(data => data.data);\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get(`profile/status/` + userId)\r\n            .then(res => res.data);\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put(`profile/status`, {status: status})\r\n            .then(res => res.data);\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile)\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile)\r\n            .then(res => res.data);\r\n    }\r\n}\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n            .then(data => data.data);\r\n    },\r\n    login(email: string, password: string, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`)\r\n    }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","type FriendsDialogsType =\r\n    {\r\n        id: number,\r\n        name: string\r\n    }\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: \"Dimych\"},\r\n        {id: 2, name: \"Andery\"},\r\n        {id: 3, name: \"Sveta\"},\r\n        {id: 4, name: \"Sasha\"},\r\n        {id: 5, name: \"Victor\"},\r\n        {id: 6, name: \"Valera\"},\r\n        {id: 7, name: \"Kos\"}\r\n    ] as Array<FriendsDialogsType>\r\n}\r\ntype initialStateType = typeof initialState\r\nconst friendsReducer = (state = initialState, action): initialStateType => {\r\n    return {...state}\r\n}\r\nexport default friendsReducer;","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst SAVE_PHOTO = 'SAVE_PHOTO';\r\n\r\nexport type AddPostActionType = {\r\n    type: 'ADD-POST',\r\n    newPostText: string\r\n}\r\nexport type UpDateNewPostActionType = {\r\n    type: 'UPDATE-NEW-POST-TEXT'\r\n    newText: string\r\n}\r\nexport type AddMessageActionType = {\r\n    type: 'ADD-MESSAGE'\r\n    newMessageText: string\r\n}\r\nexport type UpDateMessageActionType = {\r\n    type: 'UPDATE-MESSAGE-TEXT'\r\n    newTextMessage: string\r\n}\r\nexport type ActionsTypes =\r\n    savePhotoSuccessType\r\n    | AddPostActionType\r\n    | UpDateNewPostActionType\r\n    | AddMessageActionType\r\n    | UpDateMessageActionType\r\nexport type TYPESALLACTION = ActionsTypes | SetUserProfileActionType | setStatusType\r\nexport type PostType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\nexport type ContactsType = {\r\n    github: string\r\n    vk: string\r\n    facebook: string\r\n    instagram: string\r\n    twitter: string\r\n    website: string\r\n    youtube: string\r\n    mainLink: string\r\n}\r\nexport type PhotosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\nexport type ProfileType = {\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    contacts: ContactsType\r\n    photos: PhotosType\r\n}\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: \"Hi how are you?\", likesCount: 5},\r\n        {id: 2, message: \"It is my First post!\", likesCount: 23},\r\n        {id: 3, message: \"BlaBla\", likesCount: 65},\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n\r\n};\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst profileReducer = (state: InitialStateType = initialState, action: TYPESALLACTION): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        case SAVE_PHOTO: {\r\n            return {...state, profile: {...state.profile, photos: action.photos} as ProfileType}\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText: string): AddPostActionType => ({type: ADD_POST, newPostText})\r\n\r\ntype SetUserProfileActionType = {\r\n    type: typeof SET_USER_PROFILE\r\n    profile: ProfileType\r\n}\r\nexport const setUserProfile = (profile: ProfileType): SetUserProfileActionType => ({type: SET_USER_PROFILE, profile})\r\nexport type setStatusType = {\r\n    type: typeof SET_STATUS\r\n    status: string\r\n}\r\nexport const savePhotoSuccess = (photos: PhotosType): savePhotoSuccessType => ({type: SAVE_PHOTO, photos} as const)\r\nexport type savePhotoSuccessType = {\r\n    type: typeof SAVE_PHOTO\r\n    photos: PhotosType\r\n}\r\nexport const setStatus = (status: string): setStatusType =>\r\n    ({type: SET_STATUS, status: status})\r\n\r\nexport const getUsersProFile = (userId: number) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response));\r\n}\r\nexport const getStatus = (userId: number) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response));\r\n}\r\nexport const updateStatus = (status: string) => async (dispatch) => {\r\n    try {\r\n        let response = await profileAPI.updateStatus(status);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    } catch (error) {\r\n        //\r\n    }\r\n}\r\nexport const savePhoto = (file) => async (dispatch: any) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.id\r\n    const data = await profileAPI.saveProfile(profile)\r\n\r\n    if (data.resultCode === 0) {\r\n        if (userId != null) {\r\n            dispatch(getUsersProFile(userId))\r\n        } else {\r\n            throw new Error(\"userId can't be null\")\r\n        }\r\n    } else {\r\n        debugger\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: data.messages[0] }))\r\n        return Promise.reject(data.messages[0])\r\n    }\r\n}\r\n\r\nexport default profileReducer;","export const updateObjectInArray = (items, itemsId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemsId) {\r\n            return {...u, ...newObjProps};\r\n        }\r\n        return u;\r\n    });\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW-POST';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_FILTER = 'SET_FILTER';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nexport type UserType = {\r\n    id: number,\r\n    name: string,\r\n    status: string,\r\n    photos: { small: string, large: string },\r\n    followed: boolean\r\n}\r\n\r\nlet initialState = {\r\n    filter: '',\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n\r\n}\r\n\r\nexport type InitialState = typeof initialState\r\n\r\nconst usersReducer = (state: InitialState = initialState, action: ActionType): InitialState => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n                /*state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true};\r\n                    }\r\n                    return u;\r\n                })*/\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n                /*state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false};\r\n                    }\r\n                    return u;\r\n                })*/\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_FILTER: {\r\n            return {...state, filter: action.filter}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n\r\n            return {\r\n                ...state,\r\n                //@ts-ignore\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\ntype ActionType =\r\n    followACSuccessType\r\n    | unfollowACSuccessType\r\n    | setUsersACType\r\n    | setCurrentPageACType\r\n    | setUsersTotalCountACType\r\n    | setIsFetchingACType\r\n    | toggleFollowingProgressType\r\n    | setFilterType\r\n\r\nexport const setFilter = (filter: string) => ({type: SET_FILTER, filter} as const)\r\ntype setFilterType = ReturnType<typeof setFilter>\r\n\r\nexport const followACSuccess = (userId: number) => ({type: FOLLOW, userId} as const)\r\ntype followACSuccessType = ReturnType<typeof followACSuccess>\r\n\r\nexport const unfollowACSuccess = (userId: number) => ({type: UNFOLLOW, userId} as const)\r\ntype unfollowACSuccessType = ReturnType<typeof unfollowACSuccess>\r\n\r\nexport const setUsersAC = (users: Array<UserType>) => ({type: SET_USERS, users} as const)\r\ntype setUsersACType = ReturnType<typeof setUsersAC>\r\n\r\nexport const setCurrentPageAC = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage} as const)\r\ntype setCurrentPageACType = ReturnType<typeof setCurrentPageAC>\r\n\r\nexport const setUsersTotalCountAC = (totalUsersCount: number) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    count: totalUsersCount\r\n} as const)\r\ntype setUsersTotalCountACType = ReturnType<typeof setUsersTotalCountAC>\r\n\r\nexport const setIsFetchingAC = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching} as const)\r\ntype setIsFetchingACType = ReturnType<typeof setIsFetchingAC>\r\n\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n} as const)\r\ntype toggleFollowingProgressType = ReturnType<typeof toggleFollowingProgress>\r\n//-----------------------------------------------------------\r\n/*\r\ntype DispatchType = Dispatch<ActionType>\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionType>\r\n*/\r\n//_________________________________________________________________\r\n\r\n\r\n//_________________________________________________________________\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(setIsFetchingAC(true));\r\n    dispatch(setCurrentPageAC(currentPage))\r\n    let data = await usersAPI.getUsers(currentPage, pageSize)\r\n    dispatch(setIsFetchingAC(false));\r\n    dispatch(setUsersAC(data.items));\r\n    dispatch(setUsersTotalCountAC(data.totalCount));\r\n    dispatch(setCurrentPageAC(currentPage))\r\n}\r\n\r\n\r\nconst followUnfollowFlow = async(dispatch,userId,apiMethod,actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId: number) => async (dispatch: Dispatch) => {\r\n    let apiMethod = usersAPI.follow.bind(usersAPI);\r\n    let actionCreator = followACSuccess;\r\n    followUnfollowFlow(dispatch,userId,apiMethod,actionCreator)\r\n}\r\nexport const unfollow = (userId) => async (dispatch: Dispatch) => {\r\n    let apiMethod = usersAPI.unfollow.bind(usersAPI);\r\n    let actionCreator = unfollowACSuccess;\r\n    followUnfollowFlow(dispatch,userId,apiMethod,actionCreator)\r\n}\r\n\r\n\r\nexport default usersReducer;","import {getAuthUserData} from \"./auth-reduser\";\r\n\r\nconst SET_INITIALIZED_SUCCESS = 'SET_INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst appReducer = (state = initialState, action: initializedType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\nexport type initializedType = ReturnType<typeof InitializedSuccess>\r\n\r\nexport const InitializedSuccess = () => ({\r\n    type: SET_INITIALIZED_SUCCESS\r\n} as const)\r\n\r\nexport const InitializeApp = () => async (dispatch: any) => {\r\n    let promise = await dispatch(getAuthUserData())\r\n    dispatch(InitializedSuccess())\r\n}\r\n\r\nexport default appReducer;","import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport dialogsReducer from \"./dialogs-reduser\";\r\nimport friendsReducer from \"./friends-reduser\";\r\nimport profileReducer from \"./profile-reduser\";\r\nimport usersReducer from \"./users-reduser\";\r\nimport authReducer from \"./auth-reduser\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./app-reduser\";\r\n\r\nlet rootReducer = combineReducers({\r\n    dialogPage: dialogsReducer,\r\n    friendPage: friendsReducer,\r\n    profilePage: profileReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app:appReducer\r\n})\r\n\r\n\r\ntype PropertiesType<T> = T extends {[key:string]:infer U} ? U : never\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nlet store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n//@ts-ignore\r\nwindow.store = store;\r\nexport default store;","import React from \"react\";\r\nimport s from './News.module.css'\r\nconst News = (props) => {\r\n    return(\r\n        <div className={s.Y}>\r\n            News\r\n        </div>\r\n    )\r\n}\r\nexport default News;","import React from \"react\";\r\nimport s from './Music.module.css'\r\nconst Music = (props) => {\r\n    return(\r\n        <div className={s.Y}>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\nexport default Music;","import React from \"react\";\r\nimport s from './Settings.module.css'\r\nconst Settings = (props) => {\r\n    return(\r\n        <div className={s.Y}>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\nexport default Settings;","import React, {useState} from 'react'\r\nimport styles from './Paginator.module.css'\r\nimport cn from 'classnames'\r\n\r\ntype PropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage?: number\r\n    onPageChanged?: (pageNumber: number) => void\r\n    portionSize?: number\r\n}\r\n\r\nlet Paginator: React.FC<PropsType> = ({totalItemsCount, pageSize,\r\n                                          currentPage = 1,\r\n                                          onPageChanged = x => x,\r\n                                          portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages: Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={cn(styles.paginator)}>\r\n        { portionNumber > 1 &&\r\n            <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React, {useState} from 'react'\r\nimport styles from \"./users.module.css\"\r\nimport userPhoto from '../../assets/images/user.png'\r\nimport {NavLink} from 'react-router-dom';\r\nimport {UserType} from \"../../redux/users-reduser\";\r\n\r\n\r\ntype PropsType = {\r\n    users: Array<UserType>\r\n    unfollow: (id: number) => void\r\n    followingInProgress: Array<number>\r\n    follow: (id: number) => void\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => void\r\n}\r\n\r\nlet User: React.FC<PropsType> = (props) => {\r\n    const [search, setSearch] = useState('')\r\n\r\n    return <div>\r\n        {\r\n            props.users\r\n                .filter(u => u.name.indexOf(search) > -1)\r\n                .map(u => <div key={u.id}>\r\n                <span>\r\n                <div className={styles.shadow}>\r\n                    <NavLink to={'/profile/' + u.id}>\r\n                <img src={u.photos.small != null ? u.photos.small : userPhoto} className={styles.userPhoto}\r\n                     alt=\"\"/>\r\n                     </NavLink>\r\n            </div>\r\n            <div>\r\n        {u.followed\r\n            ? <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                props.unfollow(u.id)\r\n            }}>Unfollow</button>\r\n            : <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                props.follow(u.id)\r\n            }}>Follow</button>}\r\n            </div>\r\n            </span><span>\r\n            <span>\r\n            <div>{u.name}</div>\r\n            <div>{u.status}</div>\r\n            </span>\r\n            </span></div>)\r\n        }\r\n    </div>\r\n}\r\nexport default User;","import React, {useState} from 'react'\r\nimport {setFilter, UserType} from \"../../redux/users-reduser\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport PaginatorX from \"../Paginator/PaginatorX\";\r\nimport User from \"./User\";\r\n\r\ntype PropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (p: number) => void\r\n    users: Array<UserType>\r\n    unfollow: (id: number) => void\r\n    followingInProgress: Array<number>\r\n    follow: (id: number) => void\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => void\r\n}\r\n\r\nlet Users: React.FC<PropsType> = (props) => {\r\n    let {totalUsersCount, pageSize, currentPage, onPageChanged} = props\r\n    let dispatch = useDispatch()\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n    let pages: number[] = [];\r\n    for (let i: number = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    const [search, setSearch] = useState('')\r\n\r\n    const onSearchChange = (e) => {\r\n        setSearch(e.target.value)\r\n        dispatch(setFilter(search))\r\n    }\r\n\r\n\r\n    return <div>\r\n        <PaginatorX\r\n            totalItemsCount={totalUsersCount}\r\n            pageSize={pageSize}\r\n            currentPage={currentPage}\r\n            onPageChanged={onPageChanged}\r\n        />\r\n        <input placeholder={\"search\"} value={search} onChange={onSearchChange}/>\r\n        <div><strong>Total Users Count: {totalUsersCount}</strong></div>\r\n\r\n        <User {...props}/>\r\n    </div>\r\n}\r\nexport default Users;","import React from 'react'\r\nimport Hourglass from \"../../../assets/images/Hourglass.gif\";\r\n\r\nexport let Preloader = (props) => {\r\n    return <div>\r\n        <img src={Hourglass} alt=\"\"/>\r\n    </div>\r\n}","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n        return users.filter(u => true)\r\n    }\r\n)\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import {connect} from \"react-redux\";\r\nimport {\r\n    getUsersThunkCreator,\r\n    follow, unfollow, toggleFollowingProgress, setFilter\r\n} from \"../../redux/users-reduser\";\r\nimport React from \"react\";\r\nimport Users from \"./Users\";\r\nimport {Preloader} from \"../common/preloader/Preloader\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getPageSize,\r\n    getUsers,\r\n    getTotalUsersCount,\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getFollowingInProgress\r\n} from \"../../redux/UserSelectors\";\r\n\r\ntype UserType = {\r\n    id: number,\r\n    name: string,\r\n    status: string,\r\n    photos: { small: string, large: string },\r\n    followed: boolean,\r\n    onPageChanged: (pageNumber: number) => void\r\n}\r\n\r\ntype PropsType = {\r\n    setFilter: (filter: string) => void\r\n    toggleIsFetching: (isFetching: boolean) => void\r\n    toggleFollowingProgress: (isFetching: boolean) => void\r\n    users: Array<UserType>\r\n    setCurrentPage: (p: number) => void\r\n    setTotalUsersCount: (totalUsersCount: number) => void\r\n    setUsers: (res: string) => void\r\n    unfollow: (id: number) => void\r\n    follow: (id: number) => void\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: []\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n\r\n\r\n}\r\n/*export type UsersPropsType = UserType & PropsType*/\r\n\r\n// @ts-ignore\r\nclass UsersContainer extends React.Component<PropsType> {\r\n    state = {\r\n        search: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {currentPage,pageSize} = this.props\r\n        this.props.getUsers(currentPage,pageSize);\r\n\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const {pageSize} = this.props\r\n        this.props.getUsers(pageNumber,pageSize)\r\n\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ?\r\n                <Preloader/> : null}\r\n            <Users\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                unfollow={this.props.unfollow}\r\n                follow={this.props.follow}\r\n                currentPage={this.props.currentPage}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                followingInProgress={this.props.followingInProgress}\r\n\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        filter: state.usersPage.filter,\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        setFilter,\r\n        follow,\r\n        unfollow,\r\n        toggleFollowingProgress: toggleFollowingProgress,\r\n        getUsers: getUsersThunkCreator\r\n        // @ts-ignore\r\n    }))(UsersContainer);\r\n","import React, {ChangeEvent, useEffect, useState} from 'react';\r\n\r\n\r\ntype PropsType = {\r\n    status: string\r\n    updateStatus: (newStatus: string) => void\r\n}\r\ntype StateType = {\r\n    editMode: boolean\r\n    status: string\r\n}\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <strong>Status: </strong><span onDoubleClick={activateEditMode}> {props.status || \"-------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input\r\n                    autoFocus={true}\r\n                    onBlur={deactivateEditMode}\r\n                    onChange={onStatusChange}\r\n                    value={status}\r\n                />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n//TODO Form for status\r\n","import s from \"./ProfileInfo.module.css\";\r\nimport React from \"react\";\r\n\r\nconst Contacts = ({contactTitle, contactValue}) => {\r\n    return <div className={s.padding}><strong>{contactTitle} :</strong> {contactValue}</div>\r\n}\r\n\r\nexport default  Contacts;","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\"\r\nimport {createField, Input, Textarea} from \"../../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from \"../../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({profile, handleSubmit, error}) => {\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className={style.shadow}>\r\n            <div>\r\n\r\n                <button>Save</button>\r\n            </div>\r\n            {error && <div className={style.formSummaryError}>{error}</div>}\r\n            <div>\r\n                <strong>Full name: </strong> {createField(\"full name\", \"fullName\", [], Input)}\r\n            </div>\r\n            <div>\r\n                <strong>Looking for a job:</strong> {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n            </div>\r\n            <div>\r\n                <strong>\r\n                    My professional skills: </strong>\r\n                {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <strong>About me: </strong> {createField(\"about me\", \"aboutMe\", [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <strong>Contacts :</strong>{Object.keys(profile.contacts).map(key => {\r\n                return <div key={key} className={s.contact}>\r\n                    <strong>{key} : </strong> {createField(key, \"contacts.\" + key, [], Input)}\r\n                </div>\r\n            })}\r\n            </div>\r\n        </form>)\r\n}\r\n\r\nexport default reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport {Preloader} from \"../../../common/preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusFunction\";\r\nimport userPhoto from \"../../../../assets/images/user.png\"\r\nimport Contacts from \"./Contacts\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport {getUsersProFile} from \"../../../../redux/profile-reduser\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {Button} from \"antd\";\r\nimport style from \"../../../common/FormsControls/FormsControls.module.css\";\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData)\r\n            .then((res) => {\r\n                setEditMode(false)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className={s.descriptionBlock}>\r\n            <div>\r\n                <img src={profile.photos.large || userPhoto} alt='' className={s.mainPhoto}/>\r\n\r\n                <ProfileStatusWithHooks\r\n                    status={status}\r\n                    updateStatus={updateStatus}/>\r\n                {isOwner &&\r\n\r\n                <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n\r\n                {editMode\r\n                    ? <ProfileDataForm\r\n                        initialValues={profile}\r\n                        profile={profile}\r\n                        onSubmit={onSubmit}/>\r\n                    : <ProfileData\r\n                        profile={profile}\r\n                        isOwner={isOwner}\r\n                        goToEditMode={() => {\r\n                            setEditMode(true)\r\n                        }}/>}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getUsersProFile(18301));\r\n    }, [dispatch])\r\n    return <div className={style.shadow}>\r\n        {isOwner && <div>\r\n            {/*<button onClick={goToEditMode}>Edit</button>*/}\r\n            <Button type=\"primary\" size=\"small\" onClick={goToEditMode}>Edit</Button>\r\n        </div>}\r\n        <div>\r\n            <strong>Full name: </strong>{profile.fullName}\r\n        </div>\r\n        <div>\r\n            <strong>Looking for a job:</strong>{profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n        <div>\r\n            <strong>\r\n                My professional skills:</strong>\r\n            {profile.lookingForAJobDescription}\r\n\r\n        </div>}\r\n        <div>\r\n            <strong>About me:</strong>{profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <strong>Contacts :</strong>{Object.keys(profile.contacts).map(key => {\r\n            return <Contacts key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;\r\n\r\n","import React from \"react\";\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://main-cdn.goods.ru/hlr-system/1722315217/600001112185b0.jpeg' alt=\"\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>Like </span>{props.likesCount}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Post;","import React from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElement = props.posts.map(p => <Post key={p.id} likesCount={p.likesCount} message={p.message}/>);\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <div>\r\n                <h3>My posts</h3>\r\n            </div>\r\n\r\n            <AddMyPostFormRedux onSubmit={onAddPost}/>\r\n\r\n            <div className={s.posts}>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nconst length10 = maxLengthCreator(10)\r\nconst AddMyPostForm = (props) => {\r\n    return (<form onSubmit={props.handleSubmit}>\r\n        <Field name=\"newPostText\" component={Textarea} validate={[required,length10]} placeholder={\"Post Message\"}/>\r\n        {/*<textarea\r\n            value={props.newPostText}\r\n            onChange={onPostChange}\r\n            ref={newPostElement}\r\n        />*/}\r\n        <div>{/**/}\r\n            <button>Add Post</button>\r\n            {/*<button onClick={onAddPost}>Add Post</button>*/}\r\n        </div>\r\n    </form>)\r\n}\r\n\r\nconst AddMyPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddMyPostForm)\r\n\r\nexport default MyPosts;","\r\nimport {addPostActionCreator } from \"../../../redux/profile-reduser\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps,)(MyPosts);\r\nexport type PostType = typeof MyPostsContainer;\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./MyPosts/ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                saveProfile={props.saveProfile}\r\n                savePhoto={props.savePhoto}\r\n                isOwner={props.isOwner}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUsersProFile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reduser\";\r\nimport {withRouter, RouteComponentProps} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {ProfileType} from '../../type/type';\r\n\r\ntype MapPropsType = ReturnType<typeof mapStateToProps>\r\ntype DispatchPropsType = {\r\n    getUserProfile: (userId: number) => void\r\n    getStatus: (userId: number) => void\r\n    updateStatus: (status: string) => void\r\n    savePhoto: (file: File) => void\r\n    saveProfile: (profile: ProfileType) => Promise<any>\r\n}\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype PropsType = MapPropsType & DispatchPropsType & RouteComponentProps<PathParamsType>;\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n    constructor(props: PropsType) {\r\n        super(props);\r\n    }\r\n\r\n    refreshProfile() {\r\n        let userId: number | null = +this.props.match.params.userId;//withRouter - конектит с урлом\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                // todo: may be replace push with Redirect??\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n\r\n        if (!userId) {\r\n            console.error(\"ID should exists in URI params or in state ('authorizedUserId')\");\r\n        } else {\r\n            this.props.getUserProfile(userId)\r\n            this.props.getStatus(userId)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps: PropsType, prevState: PropsType) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    //console.log('mapStateToProps PROFILE')\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.id,\r\n        isAuth: state.auth.isAuth\r\n    })\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getUserProfile:getUsersProFile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n\r\n","import {AppStateType} from \"./redux-store\";\r\n\r\nexport const selectAuth = (state:AppStateType) => {\r\n    return state.auth.isAuth\r\n}\r\nexport const selectCurrentUserLogin = (state:AppStateType) => {\r\n    return state.auth.login\r\n}\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Avatar, Button, Col, Layout, Menu, Row} from \"antd\";\r\nimport {UserOutlined} from \"@ant-design/icons\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {selectAuth, selectCurrentUserLogin} from \"../../redux/auth-Selectors\";\r\nimport {logout} from \"../../redux/auth-reduser\";\r\n\r\nexport type MapPropsType = {}\r\n\r\n\r\nexport const AppHeader: React.FC<MapPropsType> = (props) => {\r\n    const isAuth = useSelector<AppStateType>(selectAuth)\r\n    const login = useSelector<AppStateType>(selectCurrentUserLogin)\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutCallback = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    const {Header} = Layout;\r\n    return (<Header className=\"header\">\r\n        <div className=\"logo\"/>\r\n        <Row>\r\n            <Col span={18}>\r\n                <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\r\n                    <Menu.Item key=\"1\"><Link to=\"/developers\">Developers</Link></Menu.Item>\r\n                </Menu></Col>\r\n            {isAuth\r\n                ? <><Col span={1}>\r\n                    <Avatar alt={login && ''} style={{backgroundColor: '#87d068'}} icon={<UserOutlined/>}/>\r\n                </Col>\r\n                    <Col span={5}>\r\n                        <Button onClick={logoutCallback}>Log Out</Button>\r\n                    </Col>\r\n                </>\r\n                : <Col span={6}>\r\n                    <Button>\r\n                        <Link to={'/login'}>Login</Link>\r\n                    </Button>\r\n                </Col>}\r\n\r\n        </Row>\r\n    </Header>)\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<div>Loading...</div>}>\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    };\r\n}\r\n\r\n\r\n","import {Button, Menu} from 'antd';\r\nimport React, {useState} from \"react\";\r\nimport {SettingOutlined} from '@ant-design/icons';\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"./redux/redux-store\";\r\nimport {selectAuth} from \"./redux/auth-Selectors\";\r\nimport {logout} from \"./redux/auth-reduser\";\r\n\r\nconst {SubMenu} = Menu;\r\n\r\nexport default function Horizont() {\r\n   /* const [mail, setMail] = useState(\"mail\")*/\r\n    const dispatch = useDispatch()\r\n    const isAuth = useSelector<AppStateType>(selectAuth)\r\n    const logoutCallback = () => {\r\n        dispatch(logout())\r\n    }\r\n    /*const handleClick = e => {\r\n        console.log('click ', e);\r\n        setMail(e.key);\r\n    };*/\r\n    return (\r\n        //@ts-ignore\r\n        <Menu mode=\"horizontal\">\r\n\r\n            <SubMenu key=\"SubMenu\" icon={<SettingOutlined/>} title=\"Navigation SN\">\r\n                <Menu.ItemGroup title=\"My Profile\">\r\n                    <Menu.Item key=\"setting:1\"><Link to=\"/profile\">Profile</Link></Menu.Item>\r\n                    <Menu.Item key=\"setting:2\"><Link to=\"/dialogs\">Messages</Link></Menu.Item>\r\n                </Menu.ItemGroup>\r\n                <Menu.ItemGroup title=\"Developers\">\r\n                    <Menu.Item key=\"setting:3\"><Link to=\"/developers\">Users</Link></Menu.Item>\r\n                    {/*<Menu.Item key=\"setting:4\">Option 4</Menu.Item>*/}\r\n                </Menu.ItemGroup>\r\n                <Menu.ItemGroup title=\"Log-in-out\">\r\n                    {isAuth && <Menu.Item key=\"setting:4\">\r\n                        <Button onClick={logoutCallback}>Log Out</Button></Menu.Item>}\r\n                </Menu.ItemGroup>\r\n            </SubMenu>\r\n\r\n        </Menu>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {Link, Route, Redirect} from 'react-router-dom'\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\n\r\nimport {InitializeApp, InitialStateType} from \"./redux/app-reduser\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport 'antd/dist/antd.css'\r\n\r\nimport {LaptopOutlined, NotificationOutlined, UserOutlined} from '@ant-design/icons';\r\nimport {Layout, Menu} from \"antd\";\r\nimport {AppHeader} from \"./components/Header/Header\";\r\nimport {withSuspense} from './hoc/withSuspense';\r\nimport Horizont from \"./Horizont-nav\";\r\n\r\n//import LoginPage from \"./components/Login/Login\";\r\nconst LoginPage = React.lazy(() => import('./components/Login/Login'));\r\n\r\n//import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\n\r\nclass App extends React.Component<any, any> {\r\n\r\n    componentDidMount() {\r\n        this.props.InitializeApp()\r\n    }\r\n\r\n    render() {\r\n        /*if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }*/\r\n        const {SubMenu} = Menu;\r\n        const {Content, Footer, Sider} = Layout;\r\n        const screenWidth = window.screen.width;\r\n\r\n        return (\r\n            <Layout>\r\n                {screenWidth > 350 ? <AppHeader/>:\"\"}\r\n                {/*<AppHeader/>*/}\r\n                {/*<Horizont/>*/}\r\n                <Content style={{padding: '0 25px'}}>\r\n                    <Layout className=\"site-layout-background\"\r\n                            style={{padding: '10px 0'}}>\r\n                        {screenWidth > 350 ?\r\n                            <Sider className=\"site-layout-background\" width={200}>\r\n                                <Menu\r\n\r\n                                    mode=\"inline\"\r\n                                    defaultSelectedKeys={['1']}\r\n                                    defaultOpenKeys={['sub1']}\r\n                                    style={{height: '100%'}}\r\n                                >\r\n                                    <SubMenu key=\"sub1\" icon={<UserOutlined/>} title=\"My Profile\">\r\n                                        <Menu.Item key=\"1\"><Link to=\"/profile\">Profile</Link> </Menu.Item>\r\n                                        <Menu.Item key=\"2\"> <Link to=\"/dialogs\">Messages</Link></Menu.Item>\r\n\r\n                                    </SubMenu>\r\n                                    <SubMenu key=\"sub2\" icon={<LaptopOutlined/>} title=\"Developers\">\r\n                                        <Menu.Item key=\"5\"><Link to=\"/developers\">Users</Link></Menu.Item>\r\n                                        <Menu.Item key=\"6\">option6</Menu.Item>\r\n                                        <Menu.Item key=\"7\">option7</Menu.Item>\r\n                                        <Menu.Item key=\"8\">option8</Menu.Item>\r\n                                    </SubMenu>\r\n                                    <SubMenu key=\"sub3\" icon={<NotificationOutlined/>} title=\"subnav 3\">\r\n                                        <Menu.Item key=\"9\">option9</Menu.Item>\r\n                                        <Menu.Item key=\"10\">option10</Menu.Item>\r\n                                        <Menu.Item key=\"11\">option11</Menu.Item>\r\n                                        <Menu.Item key=\"12\">option12</Menu.Item>\r\n                                    </SubMenu>\r\n                                </Menu>\r\n                            </Sider> :\r\n                            <Horizont/>\r\n                        }\r\n                        <Content style={{padding: \"5px\", minHeight: 200}}>\r\n                            <Route exact path='*' render={() => <Redirect to={'/profile'}/>}/>\r\n                            <Route path=\"/dialogs/\" render={withSuspense(DialogsContainer)}/>\r\n                            <Route path=\"/profile/:userId?\" render={() => <ProfileContainer/>}/>\r\n                            <Route path=\"/news/\" render={() => <News/>}/>\r\n                            <Route path=\"/music/\" render={() => <Music/>}/>\r\n                            <Route path=\"/settings/\" render={() => <Settings/>}/>\r\n                            <Route path=\"/developers/\" render={() => <UsersContainer/>}/>\r\n                            <Route path=\"/login/\" render={withSuspense(LoginPage)}/>\r\n                        </Content>\r\n                    </Layout>\r\n                </Content>\r\n                <Footer style={{textAlign: 'center'}}>©2021 Created by Petrov Konstantin</Footer>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: InitialStateType) => ({\r\n    initialized: state.initialized\r\n})\r\n\r\nexport default compose(connect(mapStateToProps, {InitializeApp}))(App);\r\n\r\n\r\n/*(\r\n\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className='app-wrapper-content'>\r\n                    <Route path=\"/dialogs/\" render={() => <DialogsContainer/>}/>\r\n                    <Route path=\"/profile/:userId?\" render={() => <ProfileContainer/>}/>\r\n                    <Route path=\"/news/\" render={() => <News/>}/>\r\n                    <Route path=\"/music/\" render={() => <Music/>}/>\r\n                    <Route path=\"/settings/\" render={() => <Settings/>}/>\r\n                    <Route path=\"/users/\" render={() => <UsersContainer/>}/>\r\n                    <Route path=\"/login/\" render={() => <LoginPage/>}/>\r\n\r\n                </div>\r\n            </div>\r\n        );*/\r\n","import React from 'react';\r\nimport './index.css';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './redux/redux-store'\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport App from \"./App\";\r\n\r\n\r\nReactDOM.render(\r\n    <HashRouter >\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </HashRouter>,\r\n    document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n","import React from \"react\";\r\nimport styles from './FormsControls.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\n\r\nexport const Textarea = ({input, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (<div className={styles.form_control + ' ' + (hasError ? styles.error : \"\")}>\r\n        <div><textarea {...input} {...props}/></div>\r\n        {hasError && <span>{error}</span>}\r\n    </div>)\r\n}\r\n\r\nexport const Input = ({input, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (<div className={styles.form_control + ' ' + (hasError ? styles.error : \"\")}>\r\n        <div><input {...input} {...props}/></div>\r\n        {hasError && <span>{error}</span>}\r\n    </div>)\r\n}\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_control\":\"FormsControls_form_control__33ub9\",\"error\":\"FormsControls_error__LPNa2\",\"formSummaryError\":\"FormsControls_formSummaryError__27pn9\",\"shadow\":\"FormsControls_shadow__nxl4C\"};","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from 'redux-form';\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    id: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    captchaUrl: null as string | null\r\n\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst authReducer = (state = initialState, action: setAuthUserDataType | getCaptchaUrlSuccess): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\nexport type setAuthUserDataType = ReturnType<typeof setAuthUserData>\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl: string) => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS,\r\n    payload: {captchaUrl}\r\n} as const)\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {id, login, email, isAuth}\r\n} as const)\r\nexport type getAuthUserData = ReturnType<typeof getAuthUserData>\r\nexport type getCaptchaUrlSuccess = ReturnType<typeof getCaptchaUrlSuccess>\r\n\r\nexport const getAuthUserData = () => async (dispatch: Dispatch) => {\r\n    let data = await authAPI.me()\r\n    if (data.resultCode === 0) {\r\n        let {id, login, email} = data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if(response.data.resultCode === 10){\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n};\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl()\r\n    const captcha = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captcha));\r\n\r\n};\r\nexport const logout = () => async (dispatch: Dispatch) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n};\r\n\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProfileInfo_item__F6mB5\",\"img\":\"ProfileInfo_img__1lFDW\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2kwuZ\",\"mainPhoto\":\"ProfileInfo_mainPhoto__oLCOm\",\"padding\":\"ProfileInfo_padding__3VccA\"};"],"sourceRoot":""}