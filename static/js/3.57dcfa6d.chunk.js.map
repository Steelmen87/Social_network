{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","hoc/withAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","dialogs","dialogsItems","active","messages","message","b","inputMar","DialogItem","props","path","id","react_default","a","createElement","className","s","dialog","src","alt","react_router_dom","to","name","Message","length","maxLengthCreator","DialogsFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","Dialogs","state","dialogPage","dialogsElement","map","d","Dialogs_DialogItem_DialogItem","key","messageElement","m","i","Dialogs_Message_Message","values","onSendMessageClick","newMessageText","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","addAnswerActionCreator","Component","RedirectComponent","_React$Component","Object","inherits","_super","createSuper","classCallCheck","this","apply","arguments","createClass","value","react_router","React"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,aAAA,8BAAAC,OAAA,wBAAAC,SAAA,0BAAAC,QAAA,yBAAAC,EAAA,mBAAAC,SAAA,2HCgBHC,EAT6B,SAACC,GACzC,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEC,QACdL,EAAAC,EAAAC,cAAA,OAAKI,IAAI,sEAAsEC,IAAI,KACnFP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAASC,GAAIX,GAAOD,EAAMa,QCJvBC,EAH4B,SAACd,GACxC,OAAOG,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEX,SAAUI,EAAMJ,6CCkCvCmB,EAASC,YAAiB,IAW1BC,EAAmBC,YAAU,CAACC,KAAM,yBAAjBD,CAVL,SAAClB,GACjB,OAAQG,EAAAC,EAAAC,cAAA,QAAMe,SAAUpB,EAAMqB,cACtBlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACIT,KAAK,iBACLU,UAAWC,IACXC,SAAU,CAACC,IAAUX,KACzBZ,EAAAC,EAAAC,cAAA,gCAMGsB,EApCwB,SAAC3B,GACpC,IAAI4B,EAAQ5B,EAAM6B,WAEdC,EAAiBF,EAAMpC,QAAQuC,IAAI,SAAAC,GAAC,OAAI7B,EAAAC,EAAAC,cAAC4B,EAAD,CAAYC,IAAKF,EAAE9B,GAAGW,KAAMmB,EAAEnB,KAAMX,GAAI8B,EAAE9B,OAElFiC,EAAiBP,EAAMjC,SAASoC,IAAI,SAACK,EAAEC,GAAH,OAASlC,EAAAC,EAAAC,cAACiC,EAAD,CAASJ,IAAKG,EAAEzC,QAASwC,EAAExC,YAM5E,OACIO,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEf,SACdW,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEd,cACbqC,GAEL3B,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEZ,UACbwC,GAELhC,EAAAC,EAAAC,cAACY,EAAD,CAAkBG,SAZD,SAACmB,GACtBvC,EAAMwC,mBAAmBD,EAAOE,6ECtBpCC,EAA6B,SAACd,GAAD,MAAY,CACzCe,OAAQf,EAAMgB,KAAKD,SCqBRE,sBACXC,YApBkB,SAAClB,GACnB,MAAO,CACHC,WAAYD,EAAMC,WAClBY,eAAgBb,EAAMC,WAAWY,iBAMhB,SAACM,GACtB,MAAO,CACHP,mBAAoB,SAACC,GACjBM,EAASC,YAAuBP,QDXZ,SAACQ,GAAc,IACrCC,EADqC,SAAAC,GAAAC,OAAAC,EAAA,EAAAD,CAAAF,EAAAC,GAAA,IAAAG,EAAAF,OAAAG,EAAA,EAAAH,CAAAF,GAAA,SAAAA,IAAA,OAAAE,OAAAI,EAAA,EAAAJ,CAAAK,KAAAP,GAAAI,EAAAI,MAAAD,KAAAE,WAAA,OAAAP,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAhB,IAAA,SAAA2B,MAEvC,WACI,OAAKJ,KAAKzD,MAAM2C,OACTxC,EAAAC,EAAAC,cAAC4C,EAAcQ,KAAKzD,OADIG,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAUlD,GAAG,eAHTsC,EAAA,CACXa,IAAMd,WAStC,OAFqCH,YAAQJ,EAARI,CAAoCI,ICU9DL,CAGblB","file":"static/js/3.57dcfa6d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__66zCH\",\"dialogsItems\":\"Dialogs_dialogsItems__3ZIMZ\",\"active\":\"Dialogs_active__n2jAc\",\"messages\":\"Dialogs_messages__2IqDY\",\"message\":\"Dialogs_message__3uWR_\",\"b\":\"Dialogs_b__2Z_Jd\",\"inputMar\":\"Dialogs_inputMar__pTuht\"};","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './../Dialogs.module.css'\r\n\r\ntype DialogItemType = {\r\n    id:Number\r\n    name:string\r\n}\r\nconst DialogItem:React.FC<DialogItemType> = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.dialog}>\r\n            <img src='https://main-cdn.goods.ru/hlr-system/1722315217/600001112185b0.jpeg' alt=\"\"/>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\n\r\ntype PropsMessageType = {\r\n    message:string\r\n}\r\nconst Message:React.FC<PropsMessageType> = (props) => {\r\n    return <div className={s.message}>{props.message}</div>\r\n}\r\nexport default Message;\r\n","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {DialogType, MessageType} from \"../../redux/dialogs-reduser\";\r\n\r\ntype DialogProps = {\r\n    onSendMessageClick: (newMessageText: string) => void\r\n    dialogPage: {\r\n        dialogs: Array<DialogType>\r\n        messages: Array<MessageType>\r\n    }\r\n}\r\n\r\n\r\nconst Dialogs: React.FC<DialogProps> = (props) => {\r\n    let state = props.dialogPage\r\n\r\n    let dialogsElement = state.dialogs.map(d => <DialogItem key={d.id}name={d.name} id={d.id}/>);\r\n\r\n    let messageElement = state.messages.map((m,i) => <Message key={i}message={m.message}/>);\r\n\r\n    let onSendMessageClick = (values) => {\r\n        props.onSendMessageClick(values.newMessageText);\r\n\r\n    }\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messageElement}\r\n            </div>\r\n            <DialogsFormRedux onSubmit={onSendMessageClick}/>\r\n        </div>\r\n    )\r\n}\r\nconst length = maxLengthCreator(12)\r\nconst DialogsForm = (props) => {\r\n    return (<form onSubmit={props.handleSubmit}>\r\n            <Field\r\n                name=\"newMessageText\"\r\n                component={Textarea}\r\n                validate={[required, length]}/>\r\n            <button>add message</button>\r\n        </form>\r\n    )\r\n}\r\nconst DialogsFormRedux = reduxForm({form: \"DialogMessageTextForm\"})(DialogsForm);\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component<any, any> {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n","import {addAnswerActionCreator} from \"../../redux/dialogs-reduser\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose, Dispatch,} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogPage: state.dialogPage,\r\n        newMessageText: state.dialogPage.newMessageText\r\n    }\r\n}\r\n//export type mapStateToProps = typeof mapStateToProps\r\nexport type mapDispatchToProps = ReturnType<typeof mapDispatchToProps>\r\n\r\nlet mapDispatchToProps = (dispatch:Dispatch) => {\r\n    return {\r\n        onSendMessageClick: (newMessageText:string) => {\r\n            dispatch(addAnswerActionCreator(newMessageText))\r\n\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}